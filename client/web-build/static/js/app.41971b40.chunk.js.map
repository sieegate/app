{"version":3,"sources":["src/store/reducers/authReducer.js","src/store/reducers/usersReducer.js","src/store/reducers/overlayReducer.js","src/store/reducers/jobsReducer.js","src/store/reducers/chatReducer.js","src/store/reducers/index.js","src/config.js","src/actions/overlayAction.js","src/store/reduxMiddlewares.js","src/store/index.js","src/RootNavigation.js","src/components/AppNavbar.js","src/actions/authActions.js","src/components/MyJobs/MyJobsReadScreen.js","src/actions/jobsActions.js","src/components/MyJobs/MyJobsEditScreen.js","src/components/MyJobs/index.js","src/components/Jobs/JobsListScreen.js","src/components/Jobs/JobsReadScreen.js","src/components/Jobs/JobsPostScreen.js","src/components/Jobs/index.js","src/components/Profile/ProfileReadScreen.js","src/actions/filesActions.js","src/components/Profile/ProfileEditScreen.js","src/components/Profile/index.js","src/components/People/PeopleListScreen.js","src/actions/usersActions.js","src/actions/chatActions.js","src/components/People/PeopleReadScreen.js","src/components/People/index.js","src/components/Messages/MessagesLobbyScreen.js","src/components/Messages/MessagesRoomScreen.js","src/components/Messages/index.js","src/components/Auth/LogInScreen.js","src/components/Auth/SignUpScreen.js","src/components/Auth/index.js","src/components/CustomOverlay.js","src/App.js","src/useLinking.js","web-build/register-service-worker.js","node_modules/moment/locale sync /^/.//.*$","src/assets/images/logo.png"],"names":["initialState","isLoggingIn","isLoggingOut","isFetchingUserInfo","isLoggedIn","loggedInAt","user","userInfoUpdatedAt","userInfoError","authError","logOutError","isSigningUp","token","signUpError","isDeletingAccount","users","isFetching","lastUpdatedAt","isLoaded","notification","form","show","timeout","jobs","conversations","conversationsIds","interlocutorsIds","isFetchingConversations","isFetchingConversation","combineReducers","auth","state","action","type","data","isloggingOut","isUpdatingUser","isUpdatingPassword","isUpdatingJob","privateConversations","conversation_id","conversation","_id","interlocutor_id","message","sender","recipient","tokenVerifiedAt","receivedAt","logInError","updateUserError","fetchMyJobsError","updatePasswordError","job","overlay","payload","isDeleting","chat","filter","c","i","map","indexOf","messages","lastMessage","conv","apiConfig","baseUrl","showOverlay","menu","callbacks","redirect","persistConfig","key","storage","AsyncStorage","blacklist","persistedReducer","persistReducer","rootReducer","middlewares","thunk","store","next","console","log","https","substring","includes","axios","create","baseURL","headers","accept","Authorization","getState","Promise","resolve","reject","method","get","route","post","delete","patch","then","res","successNotification","dispatch","variant","Date","catch","err","errorNotification","response","forceReconnect","error","socket","io","replace","forceNode","transportOptions","polling","extraHeaders","authorization","on","emit","event","disconnect","socketMiddleware","logger","createStore","applyMiddleware","persistor","persistStore","isMountedRef","React","navigationRef","navigate","name","params","current","connect","logOut","navigation","leftButton","title","noRightButton","theme","useContext","ThemeContext","LinearGradient","colors","primary","secondary","start","end","style","flexDirection","justifyContent","alignItems","paddingTop","Platform","OS","Constants","statusBarHeight","paddingHorizontal","paddingBottom","onPress","openDrawer","color","View","Text","fontSize","textAlign","Item","item","TouchableOpacity","marginVertical","marginHorizontal","borderBottomWidth","borderBottomColor","grey4","paddingVertical","flex","textAlignVertical","fontWeight","jobTitle","employmentType","size","marginStart","organisation","_","capitalize","city","moment","publishedAt","locale","fromNow","fetchMyJobs","useEffect","backgroundColor","FlatList","renderItem","keyExtractor","updateJob","deleteJob","id","useState","deleting","setDeleting","updating","setUpdating","setEmploymentType","asap","setAsap","setOrganisation","setCity","salary","setSalary","setJobTitle","jobDesc","setJobDesc","minExp","setMinExp","contact","setContact","errors","setErrors","onEditJob","alignContent","ScrollView","label","placeholder","value","onChangeText","errorMessage","multiline","inputStyle","height","keyboardType","showSoftInputOnFocus","marginBottom","display","grey3","paddingLeft","Switch","trackColor","false","true","primarySoft","thumbColor","grey2","onValueChange","loading","buttonStyle","a","async","Stack","createStackNavigator","MyJobsScreen","Navigator","initialRouteName","headerMode","Screen","component","Read","options","headerShown","Edit","fetchJobs","refreshing","setRefreshing","onRefresh","useCallback","borderRadius","shadowOffset","width","shadowColor","shadowOpacity","elevation","refreshControl","RefreshControl","ActivityIndicator","containerStyle","position","bottom","left","icon","marginTop","PostScreen","useDispatch","uploading","setUploading","filled","disabled","JobsScreen","JobsListScreen","JobsReadScreen","headerStatusBarHeight","JobsPostScreen","uploadFile","file","bucketName","formData","FormData","temp","uri","split","append","length","deleteFile","fileId","showAvatarForm","setShowAvatarForm","grey5","firstname","lastname","professor","administration","avatar","borderColor","borderWidth","source","filename","charAt","concat","toUpperCase","ImagePicker","allowsEditing","picture","cancelled","selectPicture","primaryLight","grey0","promo","marginEnd","description","email","updateUser","deleteAccount","password","updateUserPassword","newPassword","desc","setDesc","setEmail","setPromo","alumni","setAlumni","setProfessor","setAdministration","setPassword","confirmation","setConfirmation","passwordError","setPasswordError","setNewPassword","showEditPasswordForm","setShowEditPasswordForm","showDeleteAccountForm","setShowDeleteAccountForm","showEditAccountInfoForm","setShowEditAccountInfoForm","onEditProfile","text","leftIcon","numberOfLines","secureTextEntry","leftIconContainerStyle","marginRight","ProfileScreen","ReadProfileScreen","EditProfileScreen","PeopleScreen","useSelector","startPrivateConversation","sentAt","fullname","screen","inputName","actionParams","PeopleListScreen","PeopleReadScreen","listParticipants","remove","participants","participant","toString","paddingRight","grey1","ChatLobbyScreen","Message","incoming","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","maxWidth","RoomScreen","newMessage","setNewMessage","fetchConversation","onSendMessage","interlocutors","p","inverted","TextInput","MessagesScreen","Lobby","Room","logIn","credentials","Image","require","errorStyle","signUp","setFirstname","setLastname","code","setCode","mail","AuthNavigator","LogInScreen","SignUpScreen","Notifier","InputForm","dispatchRedirectReset","inputValue","setInputValue","placeholderTextColor","Menu","buttons","button","CustomOverlay","forEach","d","RootNavigation","setTimeout","Dimensions","grey6","minHeight","minWidth","BottomTab","createBottomTabNavigator","Drawer","createDrawerNavigator","MainStack","screenOptions","tabBarIcon","focused","iconName","tabBarOptions","activeTintColor","inactiveTintColor","People","Jobs","Messages","DrawerStack","Profile","MyJobs","AppStack","props","isLoadingComplete","setLoadingComplete","initialNavigationState","setInitialNavigationState","getInitialState","useRef","containerRef","useLinking","prefixes","Linking","makeUrl","config","Auth","path","screens","LogIn","SignUp","userToken","shallowEqual","SplashScreen","preventAutoHide","warn","hide","skipLoadingScreen","NavigationContainer","ref","App","SafeAreaView","StatusBar","barStyle","navigator","window","addEventListener","serviceWorker","register","scope","info","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","keys","Object","module","exports"],"mappings":"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AAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,QAAS,IACT,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,KAIf,SAASub,EAAeC,GACvB,IAAItS,EAAKuS,EAAsBD,GAC/B,OAAOE,EAAoBxS,GAE5B,SAASuS,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAE3b,EAAKwb,GAAM,CACpC,IAAII,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEtF,KAAO,mBACHsF,EAEP,OAAO5b,EAAIwb,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAK9b,IAEpBub,EAAenZ,QAAUqZ,EACzBO,EAAOC,QAAUV,EACjBA,EAAerS,GAAK,K,oBCnRpB8S,EAAOC,QAAU,IAA0B,mC","file":"static/js/app.41971b40.chunk.js","sourcesContent":["const initialState = {\n  isLoggingIn: false,\n  isLoggingOut: false,\n  isFetchingUserInfo: false,\n  isLoggedIn: false,\n  loggedInAt: null,\n  user: null,\n  userInfoUpdatedAt: null,\n  userInfoError: null,\n  authError: null,\n  logOutError: null,\n  isSigningUp: false,\n  token: null,\n  userInfoUpdatedAt: null,\n  signUpError: null,\n  isDeletingAccount: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_AUTH_TOKEN\":\n      return {\n        ...state,\n        ...action.data,\n      };\n    case \"REQUEST_SIGN_UP\":\n      return {\n        ...state,\n        isSigningUp: true,\n        signUpError: null,\n      };\n    case \"REQUEST_SIGN_UP\":\n      return {\n        ...state,\n        isSigningUp: true,\n        signUpError: null,\n      };\n    case \"REQUEST_LOG_IN\":\n      return {\n        ...state,\n        isLoggingIn: true,\n      };\n    case \"REQUEST_LOG_OUT\":\n      return {\n        ...state,\n        isloggingOut: true,\n      };\n    case \"REQUEST_UPDATE_USER\":\n      return {\n        ...state,\n        isUpdatingUser: true,\n      };\n    case \"REQUEST_DELETE_ACCOUNT\":\n      return {\n        ...state,\n        isDeletingAccount: true,\n      };\n    case \"REQUEST_UPDATE_PASSWORD\":\n      return {\n        ...state,\n        isUpdatingPassword: true,\n      };\n    case \"REQUEST_MY_JOBS\":\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case \"REQUEST_UPDATE_JOB\":\n      return {\n        ...state,\n        isUpdatingJob: true,\n      };\n    case \"REQUEST_CREATE_JOB\":\n      return state;\n    case \"RECEIVE_CONVERSATION\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          privateConversations: [\n            ...state.user.privateConversations,\n            {\n              conversation_id: action.conversation._id,\n              interlocutor_id: action.message.sender,\n            },\n          ],\n        },\n      };\n    case \"PRIVATE_CONVERSATION_ACK\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          privateConversations: [\n            ...state.user.privateConversations,\n            {\n              conversation_id: action.conversation._id,\n              interlocutor_id: action.message.recipient,\n            },\n          ],\n        },\n      };\n\n    // SUCCESS\n    case \"REQUEST_VERIFY_TOKEN:SUCCESS\":\n      return {\n        ...state,\n        tokenVerifiedAt: action.receivedAt,\n      };\n    case \"REQUEST_LOG_IN:SUCCESS\":\n      return {\n        ...state,\n        isLoggingIn: false,\n        isLoggedIn: true,\n        loggedInAt: action.receivedAt,\n        userInfoUpdatedAt: action.receivedAt,\n        logInError: null,\n        ...action.data,\n      };\n    case \"REQUEST_SIGN_UP:SUCCESS\":\n      return {\n        ...state,\n        isSigningUp: false,\n        user: action.user,\n        token: action.token,\n        loggedInAt: action.receivedAt,\n        isLoggedIn: true,\n        userInfoUpdatedAt: action.receivedAt,\n        signUpError: null,\n        ...action.data,\n      };\n    case \"REQUEST_DELETE_ACCOUNT:SUCCESS\":\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    case \"REQUEST_UPDATE_USER:SUCCESS\":\n      return {\n        ...state,\n        updateUserError: null,\n        isUpdatingUser: false,\n        userInfoUpdatedAt: action.receivedAt,\n        ...action.data,\n      };\n    case \"REQUEST_MY_JOBS:SUCCESS\":\n      return {\n        ...state,\n        isFetching: false,\n        fetchMyJobsError: null,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        ...action.data,\n      };\n    case \"REQUEST_UPLOAD_FILE:SUCCESS\":\n      return {\n        ...state,\n        ...action.data,\n      };\n    case \"REQUEST_UPDATE_PASSWORD:SUCCESS\":\n      return { ...state, updatePasswordError: null };\n    case \"REQUEST_UPDATE_JOB:SUCCESS\":\n      return {\n        ...state,\n        user: { ...state.user, jobs: action.data.jobs },\n        isUpdatingJob: false,\n      };\n    case \"REQUEST_CREATE_JOB:SUCCESS\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          jobs: [action.data.job, ...state.user.jobs],\n        },\n      };\n\n    // ERRORS\n\n    case \"REQUEST_VERIFY_TOKEN:ERROR\":\n      return initialState;\n    case \"REQUEST_MY_JOBS:ERROR\":\n      return {\n        ...state,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        fetchMyJobsError:\n          \"Vos offres d'emploi n'ont pas pu être récupérées, essayez de nouveau.\",\n      };\n    case \"REQUEST_UPDATE_USER:ERROR\":\n      return {\n        ...state,\n        isUpdatingUser: false,\n        updateUserError:\n          \"Cela n'a pas marché. Peut-être le mot de passe était-il incorrect.\",\n      };\n    case \"REQUEST_UPDATE_PASSWORD:ERROR\":\n      return {\n        ...state,\n        isUpdatingPassword: false,\n        updatePasswordError:\n          \"Cela n'a pas marché. Peut-être le mot de passe était-il incorrect.\",\n      };\n    case \"REQUEST_LOG_IN:ERROR\":\n      return {\n        ...state,\n        logInError:\n          \"Cela n'a pas marché. Peut-être le mot de passe était-il incorrect.\",\n        isLoggingIn: false,\n      };\n    case \"REQUEST_SIGN_UP:ERROR\":\n      return {\n        ...state,\n        isSigningUp: false,\n        signUpError: \"Cela n'a pas marché, essayez un autre email.\",\n      };\n    case \"REQUEST_UPDATE_JOB:ERROR\":\n      return {\n        ...state,\n        ...action.state,\n        isUpdatingJob: false,\n      };\n    case \"REQUEST_CREATE_JOB:ERROR\":\n      return {\n        ...state,\n        ...action.state,\n      };\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  users: [],\n  isFetching: false,\n  lastUpdatedAt: null,\n  isLoaded: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_USERS\":\n      return {\n        ...state,\n        isFetching: true\n      };\n    case \"REQUEST_USERS:SUCCESS\":\n      return {\n        ...action.data,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true\n      };\n    case \"REQUEST_USERS:ERROR\":\n      return {\n        ...action.data,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true\n      };\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  notification: null,\n  form: null,\n  show: false,\n  timeout: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"SHOW_OVERLAY\":\n      return {\n        ...action.payload,\n        show: true,\n      };\n    case \"ASK_USER_INPUT\":\n      return {\n        form: action.form,\n        show: true,\n      };\n    case \"RESET_OVERLAY\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  jobs: [],\n  isFetching: false,\n  lastUpdatedAt: null,\n  isLoaded: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_JOBS\":\n      return {\n        ...state,\n        isFetching: true\n      };\n    case \"REQUEST_JOBS:SUCCESS\":\n      return {\n        ...state,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        ...action.data\n      };\n    case \"REQUEST_JOBS:ERROR\":\n      return {\n        ...state,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true\n      };\n    case \"REQUEST_DELETE_JOB\":\n      return {\n        ...state,\n        isDeleting: true\n      };\n    case \"REQUEST_DELETE_JOB:SUCCESS\":\n      return {\n        ...state,\n        isDeleting: false,\n        lastUpdatedAt: action.receivedAt\n      };\n    case \"REQUEST_CREATE_JOB:SUCCESS\":\n      return {\n        ...state,\n        jobs: [action.data.job, ...state.jobs]\n      };\n    case \"REQUEST_DELETE_JOB:ERROR\":\n      return {\n        ...state,\n        isFetchingConversations: false\n      };\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  conversations: [],\n  conversationsIds: [],\n  interlocutorsIds: [],\n  lastUpdatedAt: null,\n  isLoaded: false,\n  isFetchingConversations: false,\n  isFetchingConversation: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_CONVERSATIONS:SUCCESS\":\n      return {\n        ...state,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n        isFetchingConversations: false,\n        ...action.data,\n      };\n    case \"REQUEST_CONVERSATION:SUCCESS\":\n      return {\n        ...state,\n        conversations: [\n          action.data,\n          ...state.conversations.filter((c) => c._id !== action.data._id),\n        ],\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true,\n      };\n    case \"PRIVATE_CONVERSATION_ACK\":\n    case \"RECEIVE_NEW_CONVERSATION\":\n      return {\n        ...state,\n        conversations: [action.conversation, ...state.conversations],\n        lastUpdatedAt: action.receivedAt,\n      };\n    case \"PRIVATE_MESSAGE_ACK\":\n    case \"RECEIVE_PRIVATE_MESSAGE\":\n      let i = state.conversations\n        .map(function (c) {\n          return c._id;\n        })\n        .indexOf(action.message.conversation_id);\n\n      if (state.conversations[i].messages) {\n        return {\n          ...state,\n          lastUpdatedAt: action.receivedAt,\n          conversations: [\n            {\n              ...state.conversations[i],\n              lastMessage: action.message,\n              messages: [action.message, ...state.conversations[i].messages],\n            },\n            ...state.conversations.filter(\n              (conv) => conv._id !== action.message.conversation_id\n            ),\n          ],\n          isLoaded: true,\n        };\n      } else {\n        return {\n          ...state,\n          lastUpdatedAt: action.receivedAt,\n          conversations: [\n            {\n              ...state.conversations[i],\n              lastMessage: action.message,\n              messages: [action.message],\n            },\n            ...state.conversations.filter(\n              (conv) => conv._id !== action.message.conversation_id\n            ),\n          ],\n          isLoaded: true,\n        };\n      }\n\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport usersReducer from \"./usersReducer\";\nimport overlayReducer from \"./overlayReducer\";\nimport jobsReducer from \"./jobsReducer\";\nimport chatReducer from \"./chatReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  overlay: overlayReducer,\n  jobs: jobsReducer,\n  users: usersReducer,\n  chat: chatReducer,\n});\n","export const apiConfig = {\n  baseUrl: \"https://siee-gate-test.herokuapp.com/api/\",\n};\n","export const showOverlay = ({\n  notification,\n  form,\n  menu,\n  timeout,\n  callbacks,\n  redirect,\n}) => {\n  return {\n    type: \"SHOW_OVERLAY\",\n    payload: {\n      notification,\n      form,\n      menu,\n      timeout,\n      callbacks,\n      redirect,\n    },\n  };\n};\n\nexport const resetOverlay = () => {\n  return {\n    type: \"RESET_OVERLAY\",\n  };\n};\n","import io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { apiConfig } from \"../config\";\nimport { showOverlay } from \"../actions/overlayAction\";\n\nexport const devMiddleware = (store) => (next) => (action) => {\n  console.log(action.type);\n  return next(action);\n};\n\nexport const socketMiddleware = () => {\n  let socket;\n  return (store) => (next) => (action) => {\n    if (!socket && store.getState().auth.isLoggedIn) {\n      console.log(\"socket somehow disconnected\");\n    }\n    if (\n      action.type === \"REQUEST_LOG_IN:SUCCESS\" ||\n      action.type === \"REQUEST_SIGN_UP:SUCCESS\" ||\n      action.type === \"REQUEST_VERIFY_TOKEN:SUCCESS\"\n    ) {\n      const { token } = action.data;\n      socket = io(apiConfig.baseUrl.replace(\"/api/\", \"\"), {\n        forceNode: true,\n        transportOptions: {\n          polling: {\n            extraHeaders: {\n              \"Access-Control-Allow-Origin\": \"*\",\n              authorization: token,\n            },\n          },\n        },\n      });\n      socket.on(\"connected\", (data) => {\n        console.log(\"Socket connected\");\n      });\n      socket.on(\"unauthorized\", (data) => {\n        console.log(\"Socket disconnected\");\n      });\n      socket.on(\"authenticated\", (data) => {\n        console.log(\"Socket authenticated\");\n      });\n      socket.on(\"private-conversation\", (data) => {\n        store.dispatch({\n          type: \"RECEIVE_PRIVATE_CONVERSATION\",\n          ...data,\n          receivedAt: new Date(),\n        });\n      });\n      socket.on(\"private-conversation-ack\", (data) => {\n        store.dispatch({\n          type: \"PRIVATE_CONVERSATION_ACK\",\n          ...data,\n          receivedAt: new Date(),\n        });\n      });\n      socket.on(\"private-message\", (data) => {\n        store.dispatch({\n          type: \"RECEIVE_PRIVATE_MESSAGE\",\n          ...data,\n          receivedAt: new Date(),\n        });\n      });\n      socket.on(\"private-message-ack\", (data) => {\n        store.dispatch({\n          type: \"PRIVATE_MESSAGE_ACK\",\n          ...data,\n          receivedAt: new Date(),\n        });\n      });\n    }\n    if (action.type?.substring(0, 6) === \"SOCKET\") {\n      socket.emit(action.event, action.payload);\n    }\n    if (action.type === \"REQUEST_LOG_OUT:SUCCESS\") {\n      socket.disconnect();\n      console.log(\"socket disconnected\");\n    }\n\n    return next(action);\n  };\n};\n\nexport const axiosMiddleware = (store) => (next) => (action) => {\n  if (\n    action.type?.substring(0, 7) === \"REQUEST\" &&\n    action.type?.includes(\":\") === false\n  ) {\n    let https;\n    if (action.type.substring(0, 14) === \"REQUEST_UPLOAD\") {\n      https = axios.create({\n        baseURL: apiConfig.baseUrl,\n        timeout: 3000,\n        headers: {\n          accept: \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${store.getState().auth.token}`,\n        },\n      });\n    } else {\n      https = axios.create({\n        baseURL: apiConfig.baseUrl,\n        timeout: 3000,\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${store.getState().auth.token}`,\n        },\n      });\n    }\n    const request = new Promise(function (resolve, reject) {\n      let res;\n\n      switch (action.method) {\n        case \"GET\":\n          res = https.get(action.route);\n          return resolve(res);\n        case \"POST\":\n          res = https.post(action.route, action.payload);\n          return resolve(res);\n        case \"DELETE\":\n          res = https.delete(action.route, action.payload);\n          return resolve(res);\n        case \"PATCH\":\n          res = https.patch(action.route, action.payload);\n          return resolve(res);\n        default:\n          return;\n      }\n    });\n    request\n      .then((res) => {\n        if (action.successNotification) {\n          store.dispatch(\n            showOverlay({\n              timeout: 3000,\n              redirect: action.successNotification.redirect,\n              callbacks: action.successNotification.callbacks,\n              notification: {\n                variant: \"success\",\n                message: action.successNotification.message,\n              },\n            })\n          );\n        }\n        return store.dispatch({\n          type: `${action.type}:SUCCESS`,\n          data: res.data,\n          receivedAt: new Date(),\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        if (\n          action.errorNotification ||\n          err.response?.data.forceReconnect === true\n        ) {\n          store.dispatch(\n            showOverlay({\n              timeout: 3000,\n              redirect: err.response?.data.forceReconnect && \"Auth\",\n              callbacks: err.response?.data.forceReconnect && [\n                \"REQUEST_LOG_OUT:SUCCESS\",\n              ],\n              notification: {\n                variant: \"error\",\n                message: err.response?.data.message || \"Cela n'a pas marché...\",\n              },\n            })\n          );\n        }\n        return store.dispatch({\n          type: `${action.type}:ERROR`,\n          error: err,\n          receivedAt: new Date(),\n        });\n      });\n\n    return next(action);\n  } else {\n    return next(action);\n  }\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\nimport {\n  socketMiddleware,\n  axiosMiddleware,\n  devMiddleware,\n} from \"./reduxMiddlewares\";\nimport { AsyncStorage } from \"react-native\";\nimport logger from \"redux-logger\";\n\nimport { persistStore, persistReducer } from \"redux-persist\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: AsyncStorage,\n  blacklist: [\"overlay\"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middlewares = [\n  thunk,\n  devMiddleware,\n  axiosMiddleware,\n  socketMiddleware(),\n  logger,\n];\n\nconst store = createStore(persistedReducer, applyMiddleware(...middlewares));\n\nlet persistor = persistStore(store);\n\nexport { store, persistor };\n","import * as React from \"react\";\nexport const isMountedRef = React.createRef();\n\nexport const navigationRef = React.createRef();\n\nexport function navigate(name, params) {\n  if (isMountedRef.current && navigationRef.current) {\n    navigationRef.current.navigate(name, params);\n  } else {\n  }\n}\nexport function openDrawer() {\n  navigationRef.current?.openDrawer();\n}\n","import React, { useContext } from \"react\";\nimport { Icon, ThemeContext } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport { logOut } from \"../actions/authActions\";\nimport { View, Text, Platform } from \"react-native\";\nimport Constants from \"expo-constants\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { navigate } from \"../RootNavigation\";\n\nconst AppNavbar = ({\n  navigation,\n  leftButton,\n  title,\n  logOut,\n  noRightButton\n}) => {\n  const { theme } = useContext(ThemeContext);\n\n  const LeftButtonComponent = () => {\n    switch (leftButton) {\n      case \"profile\":\n        return (\n          <Icon\n            name=\"menu\"\n            onPress={() => navigation.openDrawer()}\n            color=\"white\"\n          />\n        );\n      case \"back\":\n        return (\n          <Icon\n            name=\"arrow-left\"\n            color=\"white\"\n            onPress={() => navigate(\"Main\")}\n          />\n        );\n      default:\n        return (\n          <Icon\n            name=\"menu\"\n            onPress={() => navigation.openDrawer()}\n            color=\"white\"\n          />\n        );\n    }\n  };\n\n  const CenterComponent = () => {\n    return (\n      <View>\n        <Text\n          style={{\n            color: \"white\",\n            fontSize: 20,\n            textAlign: \"center\"\n          }}\n        >\n          {title}\n        </Text>\n      </View>\n    );\n  };\n\n  const RightComponent = () => {\n    if (noRightButton) {\n      return <View></View>;\n    } else {\n      return (\n        <View>\n          <Icon name=\"logout\" color=\"white\" onPress={() => logOut()} />\n        </View>\n      );\n    }\n  };\n\n  return (\n    <LinearGradient\n      colors={[theme.colors.primary, theme.colors.secondary]}\n      start={[0.25, 1]}\n      end={[0.25, 0]}\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        paddingTop: Platform.OS === \"web\" ? 10 : Constants.statusBarHeight,\n        paddingHorizontal: 10,\n        paddingBottom: 8\n      }}\n    >\n      <LeftButtonComponent />\n      <CenterComponent />\n      <RightComponent />\n    </LinearGradient>\n  );\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logOut: () => dispatch(logOut())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavbar);\n","export const logIn = (credentials) => {\n  return {\n    type: \"REQUEST_LOG_IN\",\n    route: \"/auth/login\",\n    payload: credentials,\n    method: \"POST\",\n    errorNotification: true,\n  };\n};\n\nexport const verifyToken = () => {\n  return {\n    type: \"REQUEST_VERIFY_TOKEN\",\n    route: \"auth/token/verify\",\n    method: \"GET\",\n    errorNotification: true,\n  };\n};\n\nexport const signUp = (credentials) => {\n  return {\n    type: \"REQUEST_SIGN_UP\",\n    route: \"/auth/signup\",\n    payload: credentials,\n    method: \"POST\",\n    successNotification: {\n      message: `Bienvenue ! Rendez-vous à l'onglet \"Mon profil\" pour éditer vos informations.`,\n      variant: \"success\",\n      redirect: \"Root\",\n    },\n    errorNotification: true,\n  };\n};\n\nexport const logOut = () => {\n  return {\n    type: \"REQUEST_LOG_OUT\",\n    route: \"/auth/logout\",\n    method: \"GET\",\n    errorNotification: true,\n  };\n};\n\nexport const updateUser = (user) => {\n  return {\n    type: \"REQUEST_UPDATE_USER\",\n    method: \"PATCH\",\n    route: \"auth\",\n    payload: user,\n    successNotification: {\n      message: \"Vos informations ont été mises à jour.\",\n      variant: \"success\",\n      redirect: \"Read\",\n    },\n    errorNotification: true,\n  };\n};\n\nexport const updateUserPassword = (password, newPassword) => {\n  return {\n    type: \"REQUEST_UPDATE_USER\",\n    method: \"PATCH\",\n    route: \"auth/password\",\n    payload: { password, newPassword },\n    successNotification: {\n      message: \"Votre mot de passe à été mis à jour.\",\n      variant: \"success\",\n      redirect: \"Read\",\n    },\n    errorNotification: true,\n  };\n};\n\nexport const deleteAccount = () => {\n  return {\n    type: \"REQUEST_DELETE_ACCOUNT\",\n    method: \"DELETE\",\n    route: \"auth\",\n    successNotification: {\n      message: \"Votre compte a bien été supprimé.\",\n      redirect: \"Auth\",\n    },\n    errorNotification: true,\n  };\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { View, Text, FlatList, TouchableOpacity } from \"react-native\";\nimport { Icon, ThemeContext } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport AppNavbar from \"../AppNavbar\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchMyJobs } from \"../../actions/jobsActions\";\n\nconst Item = ({ item, navigation }) => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <TouchableOpacity\n      onPress={() => navigation.navigate(\"Edit\", { job: item })}\n    >\n      <View\n        style={{\n          paddingTop: 8,\n          paddingHorizontal: 20,\n          marginVertical: 4,\n          marginHorizontal: 0,\n          borderBottomWidth: 1,\n          borderBottomColor: theme.colors.grey4,\n          paddingVertical: 12,\n          flexDirection: \"row\",\n        }}\n      >\n        <View style={{ flex: 1 }}>\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              fontWeight: \"bold\",\n              fontSize: 16,\n            }}\n          >\n            {item?.jobTitle} en {item?.employmentType}\n          </Text>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Icon name=\"briefcase\" size={20} color=\"grey\" />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              {item?.organisation}\n            </Text>\n          </View>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\", flex: 1 }}>\n            <Icon name=\"map-marker\" size={20} />\n            <Text\n              style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n            >\n              {_.capitalize(item?.city)}\n            </Text>\n            <Text\n              color=\"grey\"\n              style={{\n                color: \"grey\",\n                fontSize: 10,\n                textAlignVertical: \"bottom\",\n              }}\n            >\n              {_.capitalize(moment(item?.publishedAt).locale(\"fr\").fromNow())}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst MyJobsScreen = ({ auth, navigation, fetchMyJobs }) => {\n  useEffect(() => {\n    function fetchData() {\n      fetchMyJobs();\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <View style={{ flex: 1, backgroundColor: \"white\" }}>\n      <AppNavbar\n        title=\"Mes offres d'emploi\"\n        navigation={navigation}\n        noRightButton={true}\n        leftButton=\"back\"\n      />\n      <FlatList\n        data={auth.user.jobs}\n        renderItem={({ item }) => <Item item={item} navigation={navigation} />}\n        keyExtractor={(item) => item?._id}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    jobs: state.jobs,\n    auth: state.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchMyJobs: () => dispatch(fetchMyJobs()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyJobsScreen);\n","export const createJob = (job) => {\n  return {\n    type: \"REQUEST_CREATE_JOB\",\n    route: \"jobs\",\n    payload: job,\n    method: \"POST\",\n    successNotification: {\n      message: \"Votre offre d'emploi a été créée\",\n      redirect: \"MyJobs\",\n    },\n    errorNotification: true,\n  };\n};\n\nexport const fetchJobs = () => {\n  return {\n    type: \"REQUEST_JOBS\",\n    route: \"jobs\",\n    method: \"GET\",\n  };\n};\n\nexport const fetchMyJobs = () => {\n  return {\n    type: \"REQUEST_MY_JOBS\",\n    route: \"jobs/me\",\n    method: \"GET\",\n  };\n};\n\nexport const updateJob = (job) => {\n  return {\n    type: \"REQUEST_UPDATE_JOB\",\n    method: \"PATCH\",\n    route: `jobs/${job._id}`,\n    payload: job,\n    successNotification: {\n      message: \"Votre offre d'emploi a été mise à jour.\",\n      variant: \"success\",\n      redirect: \"MyJobs\",\n      timeout: 1000,\n    },\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000,\n    },\n  };\n};\n\nexport const deleteJob = (id) => {\n  return {\n    type: \"REQUEST_DELETE_JOB\",\n    method: \"DELETE\",\n    route: `jobs/${id}`,\n    successNotification: {\n      message: \"Offre d'emploi supprimée.\",\n      variant: \"success\",\n      redirect: \"MyJobs\",\n      timeout: 1000,\n    },\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000,\n    },\n  };\n};\n","import React, { useContext, useState } from \"react\";\nimport { View, Text, Switch, ScrollView } from \"react-native\";\nimport { Input, Icon, ThemeContext, Button } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport { updateJob, deleteJob, fetchMyJobs } from \"../../actions/jobsActions\";\n\nconst MyJobsEditScreen = ({\n  updateJob,\n  deleteJob,\n  route,\n  fetchMyJobs,\n  navigation\n}) => {\n  const [deleting, setDeleting] = useState(false);\n  const [updating, setUpdating] = useState(false);\n  const { job } = route.params;\n  const { theme } = useContext(ThemeContext);\n  const [employmentType, setEmploymentType] = useState(job.employmentType);\n  const [asap, setAsap] = useState(job.asap);\n  const [organisation, setOrganisation] = useState(job.organisation);\n  const [city, setCity] = useState(job.city);\n  const [salary, setSalary] = useState(job.salary);\n  const [jobTitle, setJobTitle] = useState(job.jobTitle);\n  const [jobDesc, setJobDesc] = useState(job.jobDesc);\n  const [minExp, setMinExp] = useState(`${job.minExp}`);\n  const [contact, setContact] = useState(job.contact);\n  const [errors, setErrors] = useState({});\n\n  const onEditJob = () => {\n    {\n      if (!employmentType) {\n        return setErrors({\n          employmentType: \"Ce champs est obligatoire.\"\n        });\n      } else if (!organisation) {\n        return setErrors({\n          organisation: \"Ce champs est obligatoire.\"\n        });\n      } else if (!city) {\n        return setErrors({\n          city: \"Ce champs est obligatoire.\"\n        });\n      } else if (!jobDesc) {\n        return setErrors({\n          jobDesc: \"Ce champs est obligatoire.\"\n        });\n      } else if (!jobTitle) {\n        return setErrors({\n          jobTitle: \"Ce champs est obligatoire.\"\n        });\n      } else if (!minExp) {\n        return setErrors({\n          minExp: \"Ce champs est obligatoire.\"\n        });\n      }\n    }\n\n    updateJob({\n      ...job,\n      employmentType,\n      asap,\n      organisation,\n      city,\n      salary,\n      jobDesc,\n      jobTitle,\n      minExp,\n      contact\n    });\n\n    {\n      setAsap(false);\n      setCity();\n      setSalary();\n      setContact();\n      setErrors({});\n      setEmploymentType();\n      setOrganisation();\n      setJobDesc();\n      setJobTitle();\n    }\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 8,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\"\n      }}\n    >\n      <ScrollView>\n        <Input\n          label=\"Type de contrat*\"\n          placeholder=\"CDI, CDD, Apprentissage...\"\n          value={employmentType}\n          onChangeText={value => setEmploymentType(value)}\n          errorMessage={errors.employmentType}\n        />\n        <Input\n          label=\"Organisation*\"\n          placeholder=\"Deloitte, Engie, EY...\"\n          value={organisation}\n          onChangeText={value => setOrganisation(value)}\n          errorMessage={errors.organisation}\n        />\n        <Input\n          placeholder=\"Paris, Shanghai, Lyon...\"\n          label=\"Ville*\"\n          value={city}\n          onChangeText={value => setCity(value)}\n          errorMessage={errors.city}\n        />\n        <Input\n          placeholder=\"Auditeur des SI, Pentester junior...\"\n          label=\"Intitulé du poste*\"\n          value={jobTitle}\n          onChangeText={value => setJobTitle(value)}\n          errorMessage={errors.jobTitle}\n        />\n        <Input\n          label=\"Description du poste*\"\n          multiline\n          inputStyle={{ height: 200, textAlignVertical: \"top\" }}\n          placeholder=\"Les missions, les compétences requises, l'employeur...\"\n          value={jobDesc}\n          onChangeText={value => setJobDesc(value)}\n          errorMessage={errors.jobDesc}\n        />\n        <Input\n          label=\"Expérience*\"\n          placeholder=\"Années passées dans un poste similaire\"\n          value={minExp}\n          keyboardType=\"number-pad\"\n          onChangeText={value => setMinExp(value)}\n          errorMessage={errors.minExp}\n        />\n        <Input\n          label=\"Rémunération\"\n          placeholder=\"En €\"\n          keyboardType=\"decimal-pad\"\n          value={salary}\n          onChangeText={value => setSalary(value)}\n          showSoftInputOnFocus={false}\n          errorMessage={errors.salary}\n        />\n        <View\n          style={{\n            marginBottom: 12,\n            flexDirection: \"row\",\n            display: \"flex\",\n            height: 40\n          }}\n        >\n          <Text\n            style={{\n              color: theme.colors.grey3,\n              fontWeight: \"bold\",\n              paddingLeft: 10,\n              fontSize: 16,\n              flex: 1,\n              textAlignVertical: \"center\"\n            }}\n          >\n            Poste à pourvoir dès que possible\n          </Text>\n          <Switch\n            trackColor={{\n              false: theme.colors.grey4,\n              true: theme.colors.primarySoft\n            }}\n            thumbColor={asap ? theme.colors.primary : theme.colors.grey2}\n            value={asap}\n            onValueChange={value => setAsap(value)}\n          />\n        </View>\n        <Input\n          label=\"Contact\"\n          placeholder=\"Email\"\n          value={contact}\n          onChangeText={value => setContact(value)}\n          errorMessage={errors.contact}\n        />\n      </ScrollView>\n      <View style={{ paddingTop: 8 }}>\n        <Button\n          title=\"Valider les changements\"\n          loading={updating}\n          onPress={() => {\n            setUpdating(true);\n            onEditJob();\n            setUpdating(false);\n            fetchMyJobs();\n            navigation.navigate(\"Read\");\n          }}\n          buttonStyle={{ backgroundColor: theme.colors.primary }}\n        />\n        <Button\n          title=\"Supprimer l'offre\"\n          loading={deleting}\n          onPress={async () => {\n            setDeleting(true);\n            await deleteJob(job._id);\n            setDeleting(false);\n            fetchMyJobs();\n            navigation.navigate(\"Read\");\n          }}\n          buttonStyle={{ backgroundColor: theme.colors.error }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { jobs: state.jobs, auth: state.auth };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateJob: job => dispatch(updateJob(job)),\n    deleteJob: id => dispatch(deleteJob(id)),\n    fetchMyJobs: () => dispatch(fetchMyJobs())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyJobsEditScreen);\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Read from \"./MyJobsReadScreen\";\nimport Edit from \"./MyJobsEditScreen\";\n\nconst Stack = createStackNavigator();\n\nconst MyJobsScreen = () => {\n  return (\n    <View style={{ flex: 1 }}>\n      <Stack.Navigator initialRouteName=\"Read\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"Read\"\n          component={Read}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Edit\"\n          component={Edit}\n          options={{ title: \"Modifier\" }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default MyJobsScreen;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport {\n  View,\n  FlatList,\n  Text,\n  RefreshControl,\n  ActivityIndicator,\n} from \"react-native\";\nimport { Icon, Button } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { fetchJobs } from \"../../actions/jobsActions\";\n\nconst Item = ({ item, navigation }) => {\n  return (\n    <TouchableOpacity\n      onPress={() =>\n        navigation.navigate(\"Read\", {\n          job: item,\n        })\n      }\n    >\n      <View\n        style={{\n          paddingTop: 8,\n          paddingHorizontal: 20,\n          marginVertical: 4,\n          marginHorizontal: 0,\n          borderBottomWidth: 1,\n          borderBottomColor: theme.colors.grey4,\n          paddingVertical: 12,\n          flexDirection: \"row\",\n        }}\n      >\n        <View style={{ flex: 1 }}>\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              fontWeight: \"bold\",\n              fontSize: 16,\n            }}\n          >\n            {item?.jobTitle} en {item?.employmentType}\n          </Text>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Icon name=\"briefcase\" size={20} color=\"grey\" />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              {item?.organisation}\n            </Text>\n          </View>\n          <View style={{ flexDirection: \"row\", flex: 1, alignItems: \"center\" }}>\n            <Icon name=\"map-marker\" size={20} />\n            <Text\n              style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n            >\n              {_.capitalize(item?.city)}\n            </Text>\n            <Text\n              color=\"grey\"\n              style={{\n                color: \"grey\",\n                fontSize: 10,\n                textAlignVertical: \"bottom\",\n              }}\n            >\n              {_.capitalize(moment(item?.publishedAt).locale(\"fr\").fromNow())}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst JobsListScreen = ({ navigation, fetchJobs, jobs }) => {\n  const [refreshing, setRefreshing] = useState(false);\n\n  useEffect(() => {\n    function fetchData() {\n      fetchJobs();\n    }\n    fetchData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    fetchJobs();\n    setRefreshing(false);\n  }, [refreshing]);\n\n  return (\n    <View style={{ flex: 1 }}>\n      {jobs.isLoaded ? (\n        <FlatList\n          style={{\n            borderRadius: 0,\n            shadowOffset: { width: 10, height: 10 },\n            shadowColor: \"black\",\n            shadowOpacity: 0.3,\n            elevation: 2,\n            backgroundColor: \"white\",\n          }}\n          data={jobs.jobs}\n          renderItem={({ item }) => (\n            <Item item={item} navigation={navigation} />\n          )}\n          keyExtractor={(item) => item?._id}\n          refreshControl={\n            <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n          }\n        />\n      ) : (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n      <Button\n        containerStyle={{\n          position: \"absolute\",\n          bottom: 0,\n          left: 10,\n        }}\n        buttonStyle={{\n          borderRadius: 50,\n        }}\n        icon={<Icon name=\"plus\" size={30} color=\"white\" />}\n        onPress={() => navigation.navigate(\"Post\")}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  jobs: state.jobs,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchJobs: () => dispatch(fetchJobs()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobsListScreen);\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport { View, Text, ScrollView } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { fetchJobs } from \"../../actions/jobsActions\";\n\nconst JobsReadScreen = ({ route }) => {\n  const { job } = route.params;\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 10,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\",\n      }}\n    >\n      <ScrollView\n        style={{\n          flex: 1,\n          paddingHorizontal: 12,\n        }}\n      >\n        <View style={{ alignItems: \"flex-end\" }}>\n          <Text\n            style={{\n              color: \"grey\",\n              fontSize: 12,\n              textAlignVertical: \"bottom\",\n            }}\n          >\n            {_.capitalize(moment(job.publishedAt).locale(\"fr\").fromNow())}\n          </Text>\n        </View>\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Icon name=\"briefcase\" size={25} color=\"grey\" />\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              marginStart: 8,\n              fontSize: 20,\n            }}\n          >\n            {job.organisation}\n          </Text>\n        </View>\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Icon name=\"map-marker\" size={25} color={theme.colors.grey2} />\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              marginStart: 8,\n              fontSize: 20,\n            }}\n          >\n            {_.capitalize(job.city)}\n          </Text>\n        </View>\n        <Text\n          style={{\n            color: theme.colors.grey3,\n            fontWeight: \"bold\",\n            fontSize: 16,\n            marginTop: 8,\n          }}\n        >\n          Description\n        </Text>\n        <Text style={{ marginBottom: 4, textAlign: \"justify\", fontSize: 16 }}>\n          {job.jobDesc}\n        </Text>\n        {job.salary && (\n          <Text>Rémunération à hauteur de {job.salary} brut.</Text>\n        )}\n        {job.asap && (\n          <Text style={{ color: theme.colors.primary }}>\n            Poste à pourvoir dès que possible.\n          </Text>\n        )}\n        <Text\n          style={{\n            color: theme.colors.grey3,\n            fontWeight: \"bold\",\n            fontSize: 16,\n            marginTop: 8,\n          }}\n        >\n          Contact\n        </Text>\n        <Text>{job.contact}</Text>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  jobs: state.jobs,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchJobs: () => dispatch(fetchJobs()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobsReadScreen);\n","import React, { useState, useContext } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { View, Switch, Text, ScrollView } from \"react-native\";\nimport { Input, Button, ThemeContext } from \"react-native-elements\";\nimport AppNavbar from \"../AppNavbar\";\nimport { createJob } from \"../../actions/jobsActions\";\n\nconst PostScreen = ({}) => {\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  const [uploading, setUploading] = useState(false);\n\n  const [errors, setErrors] = useState({});\n\n  // Job\n  const [employmentType, setEmploymentType] = useState(\"\");\n  const [asap, setAsap] = useState(false);\n  const [organisation, setOrganisation] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [jobDesc, setJobDesc] = useState(\"\");\n  const [salary, setSalary] = useState();\n  const [minExp, setMinExp] = useState();\n  const [contact, setContact] = useState(\"\");\n\n  const filled =\n    !city ||\n    !organisation ||\n    !employmentType ||\n    !jobDesc ||\n    !jobTitle ||\n    !contact\n      ? false\n      : true;\n\n  const uploadJobOffer = () => {\n    setUploading(true);\n\n    const jobOffer = {\n      employmentType,\n      asap,\n      organisation,\n      city,\n      salary,\n      jobDesc,\n      jobTitle,\n      minExp,\n      contact,\n    };\n\n    dispatch(createJob(jobOffer));\n    setUploading(false);\n\n    setAsap(false);\n    setCity();\n    setSalary();\n    setContact();\n    setErrors({});\n    setEmploymentType();\n    setOrganisation();\n    setJobDesc();\n    setJobTitle();\n    setUploading(false);\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flex: 1, backgroundColor: \"white\" }}>\n        <ScrollView\n          style={{\n            paddingHorizontal: 12,\n            paddingTop: 20,\n            paddingBottom: 100,\n          }}\n        >\n          <Input\n            label=\"Type de contrat*\"\n            placeholder=\"CDI, CDD, Apprentissage...\"\n            value={employmentType}\n            onChangeText={(value) => setEmploymentType(value)}\n            errorMessage={errors.employmentType}\n          />\n          <Input\n            label=\"Organisation*\"\n            placeholder=\"Deloitte, Engie, EY...\"\n            value={organisation}\n            onChangeText={(value) => setOrganisation(value)}\n            errorMessage={errors.organisation}\n          />\n          <Input\n            placeholder=\"Paris, Shanghai, Lyon...\"\n            label=\"Ville*\"\n            value={city}\n            onChangeText={(value) => setCity(value)}\n            errorMessage={errors.city}\n          />\n          <Input\n            placeholder=\"Auditeur des SI, Pentester junior...\"\n            label=\"Intitulé du poste*\"\n            value={jobTitle}\n            onChangeText={(value) => setJobTitle(value)}\n            errorMessage={errors.jobTitle}\n          />\n          <Input\n            label=\"Description du poste*\"\n            multiline\n            inputStyle={{ height: 200, textAlignVertical: \"top\" }}\n            placeholder=\"Les missions, les compétences requises, l'employeur...\"\n            value={jobDesc}\n            onChangeText={(value) => setJobDesc(value)}\n            errorMessage={errors.jobDesc}\n          />\n          <Input\n            label=\"Expérience\"\n            placeholder=\"Années passées dans un poste similaire\"\n            value={minExp}\n            keyboardType=\"numeric\"\n            onChangeText={(value) => setMinExp(value)}\n            errorMessage={errors.minExp}\n          />\n          <Input\n            label=\"Rémunération\"\n            placeholder=\"En €\"\n            value={salary}\n            onChangeText={(value) => setSalary(value)}\n            showSoftInputOnFocus={false}\n            errorMessage={errors.salary}\n          />\n          <View\n            style={{\n              marginBottom: 12,\n              flexDirection: \"row\",\n              display: \"flex\",\n              height: 40,\n            }}\n          >\n            <Text\n              style={{\n                color: theme.colors.grey3,\n                fontWeight: \"bold\",\n                paddingLeft: 10,\n                fontSize: 16,\n                flex: 1,\n                textAlignVertical: \"center\",\n              }}\n            >\n              Poste à pourvoir dès que possible\n            </Text>\n            <Switch value={asap} onValueChange={(value) => setAsap(value)} />\n          </View>\n          <Input\n            label=\"Contact*\"\n            placeholder=\"Email\"\n            value={contact}\n            onChangeText={(value) => setContact(value)}\n            errorMessage={errors.contact}\n          />\n          <Button\n            title={\n              filled\n                ? \"Poster l'offre d'emploi\"\n                : \"Veuillez remplir tous les champs obligatoires\"\n            }\n            loading={uploading}\n            disabled={!filled}\n            buttonStyle={{ height: 50, marginBottom: 12 }}\n            onPress={() => uploadJobOffer()}\n          />\n          <View style={{ height: 20 }}></View>\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default PostScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport AppNavbar from \"../AppNavbar\";\nimport JobsListScreen from \"./JobsListScreen\";\nimport JobsReadScreen from \"./JobsReadScreen\";\nimport JobsPostScreen from \"./JobsPostScreen\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nconst Stack = createStackNavigator();\n\nconst JobsScreen = ({ navigation }) => {\n  return (\n    <View style={{ flex: 1 }}>\n      <AppNavbar title=\"Emplois\" navigation={navigation} />\n      <Stack.Navigator initialRouteName=\"List\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"List\"\n          component={JobsListScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Read\"\n          component={JobsReadScreen}\n          options={({ route }) => ({\n            title:\n              route.params.job.jobTitle +\n              \" - \" +\n              route.params.job.employmentType,\n            headerStatusBarHeight: 0\n          })}\n        />\n        <Stack.Screen\n          name=\"Post\"\n          component={JobsPostScreen}\n          options={{\n            title: \"Poster une offre d'emploi\",\n            headerStatusBarHeight: 0\n          }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default JobsScreen;\n","import React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Avatar,\n  Divider,\n  Icon,\n  Button,\n  ThemeContext,\n} from \"react-native-elements\";\nimport { View, Text, ScrollView, ActivityIndicator } from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { uploadFile, deleteFile } from \"../../actions/filesActions\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport _ from \"lodash\";\nimport AppNavbar from \"../AppNavbar\";\n\nconst ReadProfileScreen = ({ uploadFile, auth, navigation, deleteFile }) => {\n  const [showAvatarForm, setShowAvatarForm] = useState(false);\n  const { theme } = useContext(ThemeContext);\n\n  const editAvatar = () => {\n    const selectPicture = async () => {\n      await ImagePicker.requestCameraRollPermissionsAsync();\n\n      const picture = await ImagePicker.launchImageLibraryAsync({\n        allowsEditing: true,\n      });\n\n      !picture.cancelled && uploadFile(picture, \"avatar\");\n    };\n    selectPicture();\n    setShowAvatarForm(false);\n  };\n\n  const { user } = auth;\n  return (\n    <View\n      style={{\n        flex: 1,\n      }}\n    >\n      <AppNavbar\n        navigation={navigation}\n        title=\"Mon profil\"\n        leftButton=\"back\"\n        noRightButton={true}\n      />\n      {auth.user ? (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"space-between\",\n            backgroundColor: \"white\",\n          }}\n        >\n          <ScrollView\n            style={{\n              paddingTop: 40,\n              flex: 1,\n              paddingHorizontal: 12,\n            }}\n          >\n            <LinearGradient\n              colors={[theme.colors.primary, theme.colors.secondary]}\n              start={[0.25, 1]}\n              end={[0, 0]}\n              style={{\n                flexDirection: \"row\",\n                marginBottom: 20,\n                paddingVertical: 8,\n                paddingHorizontal: 16,\n                borderRadius: 5,\n              }}\n            >\n              <View\n                style={{\n                  flex: 1,\n                  alignContent: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Text style={{ fontSize: 20, color: theme.colors.grey5 }}>\n                  {_.capitalize(user.firstname)}\n                </Text>\n                <Text\n                  style={{ fontSize: 30, color: \"white\", fontWeight: \"bold\" }}\n                >\n                  {_.capitalize(user.lastname)}\n                </Text>\n                {user.professor && <Text>Professeur</Text>}\n                {user.administration && (\n                  <Text>Membre du corps administratif</Text>\n                )}\n              </View>\n              {user.avatar ? (\n                <Avatar\n                  size=\"xlarge\"\n                  containerStyle={{\n                    borderColor: \"white\",\n                    borderWidth: 3,\n                  }}\n                  source={{\n                    uri: `https://siee-gate.herokuapp.com/api/files/avatar/${user.avatar?.filename}`,\n                  }}\n                  onPress={() => setShowAvatarForm(!showAvatarForm)}\n                />\n              ) : (\n                <Avatar\n                  size=\"xlarge\"\n                  containerStyle={{\n                    borderColor: \"white\",\n                    borderWidth: 3,\n                  }}\n                  title={user.firstname\n                    .charAt(0)\n                    .concat(user.lastname.charAt(0))\n                    .toUpperCase()}\n                  onPress={() => setShowAvatarForm(!showAvatarForm)}\n                />\n              )}\n              {showAvatarForm && (\n                <View\n                  style={{\n                    paddingHorizontal: 4,\n                    alignContent: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Button\n                    icon={<Icon name=\"pencil\" color={theme.colors.grey4} />}\n                    onPress={() => editAvatar()}\n                    buttonStyle={{\n                      backgroundColor: theme.colors.primaryLight,\n                      width: 40,\n                      height: 40,\n                      borderRadius: 40,\n                    }}\n                  />\n                  <Button\n                    icon={<Icon name=\"delete\" color={theme.colors.grey4} />}\n                    buttonStyle={{\n                      backgroundColor: theme.colors.grey0,\n                      width: 40,\n                      height: 40,\n                      borderRadius: 40,\n                    }}\n                    onPress={() => deleteFile(\"avatar\", user.avatar?.filename)}\n                  />\n                </View>\n              )}\n            </LinearGradient>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Icon name=\"briefcase\" size={20} color=\"grey\" />\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  marginHorizontal: 8,\n                  flex: 1,\n                }}\n              >\n                {user.jobTitle} chez {user.organisation}\n              </Text>\n            </View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <Icon name=\"school\" size={20} color=\"grey\" />\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  marginHorizontal: 8,\n                  flex: 1,\n                }}\n              >\n                Promotion {user.promo}\n              </Text>\n            </View>\n            <Divider\n              style={{\n                marginVertical: 20,\n                backgroundColor: \"grey\",\n                borderWidth: 1,\n                width: 20,\n              }}\n            />\n            <View style={{ flexDirection: \"row\" }}>\n              <Text style={{ textAlign: \"justify\", flex: 1, marginEnd: 8 }}>\n                {user.description}\n              </Text>\n            </View>\n            <Divider\n              style={{\n                marginVertical: 20,\n                backgroundColor: \"grey\",\n                borderWidth: 1,\n                width: 20,\n              }}\n            />\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Icon name=\"at\" size={20} color=\"grey\" />\n              <Text\n                style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n              >\n                {user.email}\n              </Text>\n            </View>\n          </ScrollView>\n          <View>\n            <Button\n              title=\"Editer\"\n              onPress={() => navigation.navigate(\"Edit\")}\n            />\n          </View>\n        </View>\n      ) : (\n        <View\n          style={{ flex: 1, alignContent: \"center\", justifyContent: \"center\" }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    uploadFile: (file, type) => dispatch(uploadFile(file, type)),\n    deleteFile: (bucketName, id) => dispatch(deleteFile(bucketName, id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReadProfileScreen);\n","export const fetchFile = (bucketName, fileId) => {\n  return {\n    type: \"REQUEST_FILE\",\n    route: `files/${bucketName}/${fileId}`,\n    method: \"GET\"\n  };\n};\n\nexport const deleteFile = (bucketName, fileId) => {\n  return {\n    type: \"REQUEST_DELETE_FILE\",\n    route: `files/${bucketName}/${fileId}`,\n    method: \"DELETE\",\n    successNotification: {\n      message: \"Votre document a bien été supprimé de la base de données.\",\n      variant: \"success\",\n      timeout: 2000\n    },\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000\n    }\n  };\n};\n\nexport const uploadFile = (file, bucketName) => {\n  let formData = new FormData();\n  let temp = file.uri.split(\"/\");\n  formData.append(bucketName, {\n    uri: file.uri,\n    name: temp[temp.length - 1],\n    type: \"image/jpeg\"\n  });\n\n  return {\n    type: \"REQUEST_UPLOAD_FILE\",\n    route: `files`,\n    payload: formData,\n    method: \"POST\",\n    successNotification: {\n      message: \"Votre document a bien été enregistré dans la base de données.\",\n      variant: \"success\",\n      redirect: \"Profile\",\n      timeout: 2000\n    },\n    errorNotification: {\n      message: \"Cela n'a pas marché... Essayez de nouveau.\",\n      variant: \"error\",\n      timeout: 2000\n    }\n  };\n};\n","import React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Icon, Button, Input, ThemeContext } from \"react-native-elements\";\nimport { View, ScrollView, Text, TouchableOpacity, Switch } from \"react-native\";\nimport {\n  updateUser,\n  deleteAccount,\n  updateUserPassword,\n} from \"../../actions/authActions\";\n\nconst ProfileEditScreen = ({\n  updateUser,\n  deleteAccount,\n  auth,\n  updateUserPassword,\n}) => {\n  const { theme } = useContext(ThemeContext);\n  const [desc, setDesc] = useState(auth.user.description);\n  const [email, setEmail] = useState(auth.user.email);\n  const [jobTitle, setJobTitle] = useState(auth.user.jobTitle);\n  const [organisation, setOrganisation] = useState(auth.user.organisation);\n  const [promo, setPromo] = useState(`${auth.user.promo || \"\"}`);\n  const [alumni, setAlumni] = useState(auth.user.alumni);\n  const [professor, setProfessor] = useState(auth.user.professor);\n  const [administration, setAdministration] = useState(\n    auth.user.administration\n  );\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [showEditPasswordForm, setShowEditPasswordForm] = useState(false);\n  const [showDeleteAccountForm, setShowDeleteAccountForm] = useState(false);\n  const [showEditAccountInfoForm, setShowEditAccountInfoForm] = useState(false);\n\n  const onEditProfile = () => {\n    updateUser({\n      ...auth.user,\n      description: desc,\n      email,\n      jobTitle,\n      organisation,\n      promo,\n      alumni,\n      professor,\n      administration,\n    });\n  };\n\n  const onChangePassword = () => {\n    if (newPassword.length < 8) {\n      return setPasswordError(\n        \"Choisissez un mot de passe d'au moins 8 caractères.\"\n      );\n    } else if (newPassword !== confirmation) {\n      return setPasswordError(\"Les mots de passe ne correspondent pas.\");\n    }\n    updateUserPassword(password, newPassword);\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 8,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\",\n      }}\n    >\n      <ScrollView>\n        <View\n          style={{\n            borderBottomColor: theme.colors.grey4,\n            borderBottomWidth: 1,\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              paddingVertical: 12,\n              paddingHorizontal: 12,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignContent: \"center\",\n            }}\n            onPress={() => setShowEditAccountInfoForm(!showEditAccountInfoForm)}\n          >\n            <Text style={{ fontSize: 16 }}>Editer mes informations</Text>\n            <Icon\n              name={!showEditAccountInfoForm ? \"chevron-down\" : \"chevron-up\"}\n            />\n          </TouchableOpacity>\n          {showEditAccountInfoForm && (\n            <View style={{ marginBottom: 12 }}>\n              <View\n                style={{\n                  marginBottom: 12,\n                  flexDirection: \"row\",\n                  display: \"flex\",\n                  height: 40,\n                }}\n              >\n                <Text\n                  style={{\n                    color: theme.colors.grey3,\n                    fontWeight: \"bold\",\n                    paddingLeft: 10,\n                    fontSize: 16,\n                    flex: 1,\n                    textAlignVertical: \"center\",\n                  }}\n                >\n                  Diplomé\n                </Text>\n                <Switch\n                  value={alumni}\n                  onValueChange={(value) => setAlumni(value)}\n                />\n              </View>\n              {alumni && (\n                <Input\n                  label=\"Promotion\"\n                  value={promo}\n                  onChangeText={(text) => setPromo(text)}\n                  leftIcon={<Icon name=\"school\" />}\n                />\n              )}\n              <View\n                style={{\n                  marginBottom: 12,\n                  flexDirection: \"row\",\n                  display: \"flex\",\n                  height: 40,\n                }}\n              >\n                <Text\n                  style={{\n                    color: theme.colors.grey3,\n                    fontWeight: \"bold\",\n                    paddingLeft: 10,\n                    fontSize: 16,\n                    flex: 1,\n                    textAlignVertical: \"center\",\n                  }}\n                >\n                  Membre du corps professoral\n                </Text>\n                <Switch\n                  value={professor}\n                  onValueChange={(value) => setProfessor(value)}\n                />\n              </View>\n              <View\n                style={{\n                  marginBottom: 12,\n                  flexDirection: \"row\",\n                  display: \"flex\",\n                  height: 40,\n                }}\n              >\n                <Text\n                  style={{\n                    color: theme.colors.grey3,\n                    fontWeight: \"bold\",\n                    paddingLeft: 10,\n                    fontSize: 16,\n                    flex: 1,\n                    textAlignVertical: \"center\",\n                  }}\n                >\n                  Membre du corps administratif\n                </Text>\n                <Switch\n                  value={administration}\n                  onValueChange={(value) => setAdministration(value)}\n                />\n              </View>\n              <Input\n                value={organisation}\n                label=\"Organisation\"\n                onChangeText={(text) => setOrganisation(text)}\n                leftIcon={<Icon name=\"domain\" />}\n              />\n              <Input\n                value={jobTitle}\n                onChangeText={(text) => setJobTitle(text)}\n                label=\"Profession\"\n                leftIcon={<Icon name=\"briefcase\" />}\n              />\n              <Input\n                label=\"Description\"\n                value={desc}\n                multiline\n                numberOfLines={8}\n                onChangeText={(text) => setDesc(text)}\n              />\n              <Input\n                label=\"email\"\n                value={email}\n                leftIcon={<Icon name=\"email\" />}\n                onChangeText={(text) => setEmail(text)}\n              />\n              <Button\n                title=\"Valider les changements\"\n                onPress={() => onEditProfile()}\n                buttonStyle={{ backgroundColor: theme.colors.primary }}\n              />\n            </View>\n          )}\n        </View>\n        <View\n          style={{\n            borderBottomColor: theme.colors.grey4,\n            borderBottomWidth: 1,\n          }}\n        >\n          <TouchableOpacity\n            style={{\n              paddingVertical: 12,\n              paddingHorizontal: 12,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n            onPress={() => setShowEditPasswordForm(!showEditPasswordForm)}\n          >\n            <Text style={{ fontSize: 16 }}>Changer mon mot de passe</Text>\n            <Icon\n              name={!showEditPasswordForm ? \"chevron-down\" : \"chevron-up\"}\n            />\n          </TouchableOpacity>\n          {showEditPasswordForm && (\n            <View style={{ marginBottom: 12 }}>\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={<Icon name=\"lock\" />}\n                label=\"Ancien mot de passe\"\n                secureTextEntry\n                value={password}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 20, marginTop: 8 }}\n                onChangeText={(value) => setPassword(value)}\n              />\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={<Icon name=\"lock\" />}\n                label=\"Nouveau mot de passe\"\n                secureTextEntry\n                value={newPassword}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 20, marginTop: 8 }}\n                onChangeText={(value) => {\n                  setPasswordError(\"\");\n                  setNewPassword(value);\n                }}\n                errorMessage={passwordError}\n              />\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={\n                  <Icon\n                    name={confirmation === newPassword ? \"check\" : \"close\"}\n                    color={confirmation === newPassword ? \"green\" : \"red\"}\n                  />\n                }\n                label=\"Confirmation\"\n                secureTextEntry\n                value={confirmation}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 40, marginTop: 8 }}\n                onChangeText={(value) => setConfirmation(value)}\n              />\n              <Button\n                title=\"Valider\"\n                onPress={() => onChangePassword()}\n                buttonStyle={{ backgroundColor: theme.colors.primary }}\n                loading={auth.isUpdatingPassword}\n              />\n            </View>\n          )}\n        </View>\n        <View>\n          <TouchableOpacity\n            style={{\n              paddingVertical: 12,\n              paddingHorizontal: 12,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n            }}\n            onPress={() => setShowDeleteAccountForm(!showDeleteAccountForm)}\n          >\n            <Text style={{ fontSize: 16 }}>Supprimer mon compte</Text>\n            <Icon\n              name={!showDeleteAccountForm ? \"chevron-down\" : \"chevron-up\"}\n            />\n          </TouchableOpacity>\n          {showDeleteAccountForm && (\n            <View style={{ marginBottom: 12 }}>\n              <Input\n                placeholder=\"Mot de passe\"\n                leftIcon={<Icon name=\"lock\" />}\n                label=\"Mot de passe\"\n                secureTextEntry\n                value={password}\n                leftIconContainerStyle={{ marginRight: 12 }}\n                containerStyle={{ marginBottom: 20, marginTop: 8 }}\n                onChangeText={(value) => setPassword(value)}\n              />\n              <Button\n                title=\"Valider\"\n                disabled={!password}\n                onPress={(password) => deleteAccount(password)}\n                buttonStyle={{ backgroundColor: theme.colors.error }}\n              />\n            </View>\n          )}\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateUser: (user) => dispatch(updateUser(user)),\n    deleteAccount: (password) => dispatch(deleteAccount(password)),\n    updateUserPassword: (password, newPassword) =>\n      dispatch(updateUserPassword(password, newPassword)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileEditScreen);\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport ReadProfileScreen from \"./ProfileReadScreen\";\nimport EditProfileScreen from \"./ProfileEditScreen\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nconst Stack = createStackNavigator();\n\nconst ProfileScreen = () => {\n  return (\n    <View style={{ flex: 1 }}>\n      <Stack.Navigator initialRouteName=\"Lobby\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"Read\"\n          component={ReadProfileScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Edit\"\n          component={EditProfileScreen}\n          options={{ title: \"Modifier mon compte\" }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default ProfileScreen;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  View,\n  Text,\n  ActivityIndicator,\n  FlatList,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Avatar, Icon } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { fetchUsers } from \"../../actions/usersActions\";\nimport _ from \"lodash\";\n\nconst Item = ({ item, navigation }) => {\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        navigation.navigate(\"Read\", {\n          item,\n        });\n      }}\n    >\n      <View\n        style={{\n          paddingTop: 8,\n          paddingHorizontal: 20,\n          marginVertical: 4,\n          marginHorizontal: 0,\n          borderBottomWidth: 1,\n          borderBottomColor: theme.colors.grey4,\n          paddingVertical: 12,\n          flexDirection: \"row\",\n        }}\n      >\n        <View\n          style={{\n            alignContent: \"center\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginRight: 12,\n          }}\n        >\n          {item?.avatar ? (\n            <Avatar\n              source={{\n                uri: `https://siee-gate.herokuapp.com/api/files/avatar/${item?.avatar?.filename}`,\n              }}\n              size=\"medium\"\n            />\n          ) : (\n            <Avatar\n              size=\"medium\"\n              title={item?.firstname[0].concat(item?.lastname[0]).toUpperCase()}\n            />\n          )}\n        </View>\n        <View>\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              fontWeight: \"bold\",\n              fontSize: 16,\n            }}\n          >\n            {_.capitalize(item?.firstname)} {_.capitalize(item?.lastname)}\n          </Text>\n          <View style={{ flexDirection: \"row\", flex: 1, alignItems: \"center\" }}>\n            <Icon name=\"account-card-details\" size={20} />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              {item?.jobTitle} chez {item?.organisation}\n            </Text>\n          </View>\n          <View style={{ flexDirection: \"row\", flex: 1, alignItems: \"center\" }}>\n            <Icon name=\"school\" size={20} />\n            <Text style={{ textAlignVertical: \"bottom\", marginStart: 8 }}>\n              SIEE promotion {item?.promo}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst PeopleScreen = ({ navigation }) => {\n  const dispatch = useDispatch();\n  const { users, auth } = useSelector((state) => state);\n  useEffect(() => {\n    function fetchData() {\n      dispatch(fetchUsers());\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <View style={{ flex: 1 }}>\n      {users.isLoaded ? (\n        <FlatList\n          style={{\n            borderRadius: 0,\n            shadowOffset: { width: 10, height: 10 },\n            shadowColor: \"black\",\n            shadowOpacity: 0.3,\n            elevation: 2,\n            backgroundColor: \"white\",\n          }}\n          data={users.users?.filter((user) => user._id !== auth.user._id)}\n          renderItem={({ item }) => (\n            <Item item={item} navigation={navigation} />\n          )}\n          keyExtractor={(item) => item?._id}\n        />\n      ) : (\n        <View\n          style={{ flex: 1, alignContent: \"center\", justifyContent: \"center\" }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default PeopleScreen;\n","export const fetchUsers = () => {\n  return {\n    type: \"REQUEST_USERS\",\n    method: \"GET\",\n    route: \"users\"\n  };\n};\n","export const sendPrivateMessage = (message) => {\n  return {\n    type: \"SOCKET\",\n    event: \"private-message\",\n    payload: {\n      ...message,\n      sentAt: new Date(),\n    },\n  };\n};\n\nexport const startPrivateConversation = (message) => {\n  return {\n    type: \"SOCKET\",\n    event: \"private-conversation\",\n    payload: {\n      ...message,\n      sentAt: new Date(),\n    },\n  };\n};\n\nexport const fetchConversation = (conversation_id) => {\n  return {\n    type: \"REQUEST_CONVERSATION\",\n    method: \"GET\",\n    route: `conversations/single/${conversation_id}`,\n  };\n};\n\nexport const fetchConversations = () => {\n  return {\n    type: \"REQUEST_CONVERSATIONS\",\n    method: \"GET\",\n    route: `conversations`,\n  };\n};\n\nexport const deleteConversation = (conversation_id) => {\n  return {\n    type: \"REQUEST_DELETE_CONVERSATION\",\n    method: \"DELETE\",\n    route: `conversations/${conversation_id}`,\n    errorNotification: true,\n  };\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { View, Text, ScrollView } from \"react-native\";\nimport { Avatar, Divider, Icon, Button } from \"react-native-elements\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport theme from \"../../Theme.json\";\nimport _ from \"lodash\";\nimport { showOverlay } from \"../../actions/overlayAction\";\nimport { startPrivateConversation } from \"../../actions/chatActions\";\n\nconst PeopleScreen = ({ route, navigation }) => {\n  const { auth } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const { item } = route.params;\n  const fullname =\n    _.capitalize(item?.firstname) + \" \" + _.capitalize(item?.lastname);\n\n  return (\n    <View\n      style={{\n        flex: 1,\n      }}\n    >\n      <View\n        style={{\n          flex: 1,\n          alignContent: \"space-between\",\n          paddingVertical: 10,\n          paddingHorizontal: 8,\n          backgroundColor: \"white\",\n        }}\n      >\n        <ScrollView\n          style={{\n            flex: 1,\n          }}\n        >\n          <LinearGradient\n            colors={[theme.colors.primary, theme.colors.secondary]}\n            start={[0.25, 1]}\n            end={[0, 0]}\n            style={{\n              flexDirection: \"row\",\n              marginBottom: 20,\n              paddingVertical: 8,\n              paddingHorizontal: 16,\n              borderRadius: 5,\n            }}\n          >\n            <View\n              style={{\n                flex: 1,\n                alignContent: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Text style={{ fontSize: 20, color: theme.colors.grey5 }}>\n                {_.capitalize(item?.firstname)}\n              </Text>\n              <Text\n                style={{ fontSize: 30, color: \"white\", fontWeight: \"bold\" }}\n              >\n                {_.capitalize(item?.lastname)}\n              </Text>\n            </View>\n            {item?.avatar ? (\n              <Avatar\n                size=\"xlarge\"\n                containerStyle={{\n                  borderColor: \"white\",\n                  borderWidth: 3,\n                }}\n                source={{\n                  uri: `https://siee-gate.herokuapp.com/api/files/avatar/${item?.avatar?.filename}`,\n                }}\n              />\n            ) : (\n              <Avatar\n                size=\"xlarge\"\n                containerStyle={{\n                  borderColor: \"white\",\n                  borderWidth: 3,\n                }}\n                title={item?.firstname\n                  .charAt(0)\n                  .concat(item?.lastname.charAt(0))\n                  .toUpperCase()}\n              />\n            )}\n          </LinearGradient>\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Icon name=\"briefcase\" size={20} color=\"grey\" />\n            <Text\n              style={{\n                textAlignVertical: \"bottom\",\n                marginHorizontal: 8,\n                flex: 1,\n              }}\n            >\n              {item?.jobTitle} chez {item?.organisation}\n            </Text>\n          </View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n            }}\n          >\n            <Icon name=\"school\" size={20} color=\"grey\" />\n            <Text\n              style={{\n                textAlignVertical: \"bottom\",\n                marginHorizontal: 8,\n                flex: 1,\n              }}\n            >\n              Promotion {item?.promo}\n            </Text>\n          </View>\n          <Divider\n            style={{\n              marginVertical: 20,\n              backgroundColor: \"grey\",\n              borderWidth: 1,\n              width: 20,\n            }}\n          />\n          <View style={{ flexDirection: \"row\" }}>\n            <Text style={{ textAlign: \"justify\", flex: 1, marginEnd: 8 }}>\n              {item?.description}\n            </Text>\n          </View>\n          <Divider\n            style={{\n              marginVertical: 20,\n              backgroundColor: \"grey\",\n              borderWidth: 1,\n              width: 20,\n            }}\n          />\n          <View style={{ flexDirection: \"row\" }}>\n            <Icon name=\"at\" size={20} color=\"grey\" />\n            <Text\n              style={{ textAlignVertical: \"bottom\", marginStart: 8, flex: 1 }}\n            >\n              {item?.email}\n            </Text>\n          </View>\n        </ScrollView>\n        <Button\n          title=\"Contacter\"\n          onPress={() => {\n            let a = auth.user.privateConversations.filter(\n              (c) => c.interlocutor_id == item._id\n            );\n            if (a.length > 0) {\n              navigation.navigate(\"Messages\", {\n                screen: \"Room\",\n                params: {\n                  title: fullname,\n                  conversation_id: a[0].conversation_id,\n                },\n              });\n            } else\n              dispatch(\n                showOverlay({\n                  form: {\n                    action: startPrivateConversation,\n                    inputName: \"text\",\n                    actionParams: { recipient: item?._id },\n                    message:\n                      \"Demarrer une conversation avec \" +\n                      _.capitalize(item?.firstname) +\n                      \" \" +\n                      _.capitalize(item?.lastname),\n                  },\n                  redirect: \"Messages\",\n                })\n              );\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default PeopleScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport AppNavbar from \"../AppNavbar\";\nimport PeopleListScreen from \"./PeopleListScreen\";\nimport PeopleReadScreen from \"./PeopleReadScreen\";\nconst Stack = createStackNavigator();\n\nconst PeopleScreen = ({ navigation }) => {\n  return (\n    <View style={{ flex: 1 }}>\n      <AppNavbar title=\"Annuaire\" navigation={navigation} />\n      <Stack.Navigator initialRouteName=\"List\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"List\"\n          component={PeopleListScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Read\"\n          component={PeopleReadScreen}\n          options={{ headerStatusBarHeight: 0, title: \"\" }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default PeopleScreen;\n","import React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  View,\n  Text,\n  ActivityIndicator,\n  FlatList,\n  TouchableOpacity,\n  RefreshControl,\n  TextInput,\n} from \"react-native\";\nimport {\n  SearchBar,\n  Avatar,\n  ThemeContext,\n  Button,\n  Icon,\n} from \"react-native-elements\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchUsers } from \"../../actions/usersActions\";\nimport { fetchConversations } from \"../../actions/chatActions\";\nimport { apiConfig } from \"../../config\";\nimport { showOverlay } from \"../../actions/overlayAction\";\n\nconst SearchResultItem = ({ item, theme, navigation, chat, dispatch }) => {\n  const [showMessageForm, setShowMessageForm] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const fullName =\n    _.capitalize(item?.firstname) + \" \" + _.capitalize(item?.lastname);\n\n  return (\n    <TouchableOpacity\n      onPress={\n        chat.interlocutorsIds.includes(item?._id)\n          ? () =>\n              navigation.navigate(\"Room\", {\n                title: fullName,\n                conversation: chat.convIdsWithPartsIds\n                  .filter(\n                    (element) =>\n                      element.participants.includes(item?._id) === true\n                  )\n                  .filter((conv) => conv.participants.length === 2)[0],\n              })\n          : () =>\n              dispatch(\n                showOverlay({\n                  form: {\n                    action: sendMessage,\n                    inputName: \"text\",\n                    actionParams: { recipients: [item?._id] },\n                    message: \"Demarrer une conversation avec \" + fullName,\n                  },\n                })\n              )\n      }\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          paddingVertical: 4,\n          paddingHorizontal: 8,\n          borderBottomColor: theme.colors.grey5,\n          borderBottomWidth: 1,\n        }}\n      >\n        <View\n          style={{\n            alignContent: \"center\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginRight: 12,\n          }}\n        >\n          {item?.avatar ? (\n            <Avatar\n              source={{\n                uri: `https://siee-gate.herokuapp.com/api/files/avatar/${item?.avatar?.filename}`,\n              }}\n              size=\"small\"\n            />\n          ) : (\n            <Avatar\n              size=\"small\"\n              title={item?.firstname[0].concat(item?.lastname[0]).toUpperCase()}\n            />\n          )}\n        </View>\n        {!showMessageForm ? (\n          <Text style={{ paddingLeft: 12 }}>{fullName}</Text>\n        ) : (\n          <View\n            style={{\n              flexDirection: \"row\",\n              backgroundColor: \"white\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              marginTop: 8,\n            }}\n          >\n            <TextInput\n              value={newMessage}\n              multiline\n              placeholder=\"Ecrivez ici.\"\n              placeholderTextColor=\"grey\"\n              onChangeText={(text) => setNewMessage(text)}\n              style={{\n                backgroundColor: theme.colors.grey5,\n                borderColor: theme.colors.grey4,\n                borderWidth: 1,\n                borderRadius: 5,\n                paddingVertical: 2,\n                paddingHorizontal: 4,\n                maxHeight: 80,\n              }}\n            />\n            <Button\n              containerStyle={{ height: 30 }}\n              icon={\n                <Icon\n                  name=\"send\"\n                  size={20}\n                  color={newMessage ? theme.colors.primary : theme.colors.grey2}\n                />\n              }\n              disabled={!newMessage}\n              type=\"clear\"\n              onPress={() => {\n                onSendMessage(newMessage, item?._id);\n                setNewMessage(\"\");\n                setShowMessageForm(false);\n              }}\n            />\n          </View>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst Item = ({ item, navigation, auth, theme, dispatch }) => {\n  const listParticipants = () => {\n    _.remove(\n      item?.participants,\n      (participant) => participant._id === auth.user._id\n    );\n\n    if (item?.participants?.length > 1) {\n      const participantsList = item?.participants?.map((participant) =>\n        _.capitalize(participant.firstname)\n      );\n      return participantsList.toString().replace(\",\", \", \");\n    } else if (item?.participants?.length === 1) {\n      return _.capitalize(item?.participants[0]?.firstname).concat(\n        \" \",\n        _.capitalize(item?.participants[0]?.lastname)\n      );\n    } else {\n      return \"Compte supprimé\";\n    }\n  };\n\n  const title = listParticipants();\n  const participants = listParticipants(item);\n\n  return (\n    <TouchableOpacity\n      onPress={() =>\n        navigation.navigate(\"Room\", {\n          title,\n          conversation_id: item._id,\n        })\n      }\n    >\n      <View\n        style={{\n          paddingHorizontal: 8,\n          paddingVertical: 8,\n          borderBottomColor: \"white\",\n          borderBottomWidth: 3,\n          backgroundColor: \"white\",\n        }}\n      >\n        <View style={{ flexDirection: \"row\" }}>\n          <View\n            style={{\n              alignContent: \"center\",\n              justifyContent: \"center\",\n              paddingRight: 8,\n            }}\n          >\n            {item?.participants[0]?.avatar ? (\n              <Avatar\n                source={{\n                  uri: `${apiConfig.baseUrl}/files/avatar/${item?.participants[0]?.avatar?.filename}`,\n                }}\n                size=\"medium\"\n              />\n            ) : (\n              <Avatar\n                size=\"medium\"\n                title={item?.participants[0]?.firstname[0]\n                  .concat(item?.participants[0]?.lastname[0])\n                  .toUpperCase()}\n              />\n            )}\n          </View>\n          <View\n            style={{\n              flex: 1,\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  fontSize: 16,\n                  fontWeight: \"bold\",\n                }}\n              >\n                {participants}\n              </Text>\n              <Text\n                color=\"grey\"\n                style={{\n                  color: \"grey\",\n                  fontSize: 10,\n                  textAlignVertical: \"bottom\",\n                }}\n              >\n                {_.capitalize(\n                  moment(item?.lastMessage?.sentAt).locale(\"fr\").fromNow()\n                )}\n              </Text>\n            </View>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <View\n                style={{ alignContent: \"center\", justifyContent: \"center\" }}\n              >\n                {item?.lastMessage?.sender === auth.user._id ? (\n                  <Icon\n                    name=\"arrow-top-right\"\n                    color={theme.colors.grey1}\n                    size={14}\n                  />\n                ) : (\n                  <Icon\n                    name=\"arrow-bottom-left\"\n                    color={theme.colors.grey3}\n                    size={14}\n                  />\n                )}\n              </View>\n              <Text\n                style={{\n                  textAlignVertical: \"center\",\n                  fontSize: 14,\n                  flex: 1,\n                }}\n              >\n                {item?.lastMessage?.text}\n              </Text>\n              {/* <View\n                style={{\n                  flexDirection: \"row\",\n                  alignContent: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Icon\n                  name=\"dots-horizontal\"\n                  style={{ alignSelf: \"flex-end\" }}\n                  onPress={() =>\n                    dispatch(\n                      showOverlay({\n                        menu: {\n                          buttons: [\n                            {\n                              title: \"Supprimer la conversation\",\n                              action: deleteConversation,\n                              actionParams: [item?._id],\n                            },\n                          ],\n                        },\n                      })\n                    )\n                  }\n                />\n              </View> */}\n            </View>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst ChatLobbyScreen = ({ navigation }) => {\n  const [refreshing, setRefreshing] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  const { chat, users, auth } = useSelector((state) => state);\n\n  useEffect(() => {\n    function fetchData() {\n      dispatch(fetchConversations());\n      dispatch(fetchUsers());\n    }\n    fetchData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    dispatch(fetchConversations());\n    setRefreshing(false);\n  }, [refreshing]);\n\n  const searchProcess = () => {\n    const searchResults = [];\n    users.users?.forEach((user) => {\n      if (user._id !== auth.user._id) {\n        if (\n          user.firstname.includes(search.toLowerCase()) === true ||\n          user.lastname.includes(search.toLowerCase())\n        ) {\n          searchResults.push(user);\n        }\n      }\n    });\n    return searchResults;\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      {/* <View style={{ backgroundColor: \"white\", paddingVertical: 4 }}>\n        <SearchBar\n          placeholder=\"Chercher un alumni ici...\"\n          onChangeText={setSearch}\n          value={search}\n          platform=\"android\"\n          containerStyle={{\n            paddingTop: 0,\n            height: 40,\n          }}\n        />\n        {users.isLoaded && (\n          <FlatList\n            data={search && searchProcess()}\n            renderItem={({ item }) => (\n              <SearchResultItem\n                item={item}\n                theme={theme}\n                chat={chat}\n                navigation={navigation}\n                dispatch={dispatch}\n              />\n            )}\n            keyExtractor={(item) => item?._id}\n          />\n        )}\n        {!users.isLoaded && (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <ActivityIndicator size=\"small\" />\n          </View>\n        )}\n      </View> */}\n      {chat.isLoaded ? (\n        chat.conversations.length > 0 ? (\n          <FlatList\n            data={chat.conversations}\n            renderItem={({ item }) => (\n              <Item\n                item={item}\n                auth={auth}\n                navigation={navigation}\n                theme={theme}\n                dispatch={dispatch}\n              />\n            )}\n            keyExtractor={(item) => item?._id}\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n            }\n          />\n        ) : (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Text style={{ textAlign: \"center\", color: theme.colors.grey3 }}>\n              Aucune conversation\n            </Text>\n            <Button\n              title=\"Rafraichir\"\n              type=\"clear\"\n              onPress={() => dispatch(fetchConversations())}\n            />\n          </View>\n        )\n      ) : (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default ChatLobbyScreen;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  FlatList,\n  ActivityIndicator,\n} from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ThemeContext, Button, Icon } from \"react-native-elements\";\nimport {\n  sendPrivateMessage,\n  fetchConversation,\n} from \"../../actions/chatActions\";\nimport _ from \"lodash\";\n\nconst Message = ({ message, incoming, theme }) => {\n  return (\n    <View\n      style={{\n        flexDirection: \"row\",\n      }}\n    >\n      {!incoming && <View style={{ flex: 1 }}></View>}\n      <View\n        style={{\n          backgroundColor: incoming ? \"white\" : theme.colors.primary,\n          borderTopLeftRadius: !incoming ? 10 : 0,\n          borderTopRightRadius: 10,\n          borderBottomLeftRadius: 10,\n          borderBottomRightRadius: incoming ? 10 : 0,\n          maxWidth: \"80%\",\n          paddingHorizontal: 8,\n          paddingVertical: 8,\n          marginBottom: 8,\n          marginHorizontal: 8,\n        }}\n      >\n        <Text\n          style={{\n            color: !incoming ? \"white\" : \"black\",\n            textAlign: incoming ? \"left\" : \"right\",\n          }}\n        >\n          {message.text}\n        </Text>\n      </View>\n      {incoming && <View style={{ flex: 1 }}></View>}\n    </View>\n  );\n};\n\nconst RoomScreen = ({ route }) => {\n  const { conversation_id } = route.params;\n  const [newMessage, setNewMessage] = useState(\"\");\n  const { theme } = useContext(ThemeContext);\n\n  const { user } = useSelector((state) => state.auth);\n  const conversation = useSelector(\n    (state) =>\n      state.chat.conversations.filter((conv) => conv._id === conversation_id)[0]\n  );\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    function fetchData() {\n      dispatch(fetchConversation(conversation_id));\n    }\n    fetchData();\n  }, []);\n\n  const onSendMessage = () => {\n    const interlocutors = conversation?.participants.filter(\n      (p) => p._id != user._id\n    );\n    dispatch(\n      sendPrivateMessage({\n        text: newMessage,\n        conversation_id,\n        recipient: interlocutors[0],\n      })\n    );\n    setNewMessage(\"\");\n  };\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n      {conversation?.messages ? (\n        <FlatList\n          data={conversation.messages}\n          renderItem={({ item }) => (\n            <Message\n              message={item}\n              incoming={item?.sender !== user._id}\n              theme={theme}\n            />\n          )}\n          keyExtractor={(item) => item?._id}\n          inverted={true}\n        />\n      ) : (\n        <ActivityIndicator />\n      )}\n      <View\n        style={{\n          flexDirection: \"row\",\n          backgroundColor: \"white\",\n          paddingVertical: 8,\n          paddingHorizontal: 16,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          alignContent: \"center\",\n        }}\n      >\n        <TextInput\n          style={{\n            height: 40,\n            flex: 1,\n          }}\n          onChangeText={(text) => setNewMessage(text)}\n          value={newMessage}\n          multiline\n          placeholder=\"Ecrivez votre message ici.\"\n        />\n        <Button\n          icon={\n            <Icon\n              name=\"send\"\n              size={20}\n              color={newMessage ? theme.colors.primary : theme.colors.grey2}\n            />\n          }\n          disabled={!newMessage}\n          type=\"clear\"\n          onPress={() => onSendMessage()}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default RoomScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport AppNavbar from \"../AppNavbar\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Lobby from \"./MessagesLobbyScreen\";\nimport Room from \"./MessagesRoomScreen\";\nimport _ from \"lodash\";\n\nconst Stack = createStackNavigator();\n\nconst MessagesScreen = ({ navigation }) => {\n  return (\n    <View style={{ flex: 1 }}>\n      <AppNavbar title=\"Messagerie\" navigation={navigation} />\n      <Stack.Navigator initialRouteName=\"Lobby\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"Lobby\"\n          component={Lobby}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"Room\"\n          component={Room}\n          options={({ route }) => {\n            const { title } = route.params;\n            if (!title) {\n              return {\n                title: \"Compte supprimé\",\n                headerStatusBarHeight: 0,\n              };\n            } else {\n              return {\n                title: title,\n                headerStatusBarHeight: 0,\n              };\n            }\n          }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default MessagesScreen;\n","import React, { useState, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { View, Image } from \"react-native\";\nimport { Input, Button, Icon, ThemeContext } from \"react-native-elements\";\nimport { logIn } from \"../../actions/authActions\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst logInScreen = ({ auth, logIn, navigation }) => {\n  const { theme } = useContext(ThemeContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const handleLogIn = async () => {\n    if (!email) {\n      return setErrors({ email: \"Mél invalide.\" });\n    } else if (!password) {\n      return setErrors({ password: \"Mot de passe invalide.\" });\n    }\n\n    setErrors({});\n    logIn({ email, password });\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        backgroundColor: \"white\",\n      }}\n    >\n      <LinearGradient\n        colors={[theme.colors.primary, theme.colors.secondary]}\n        start={[0.25, 1]}\n        end={[0, 0]}\n        style={{\n          flexDirection: \"row\",\n          marginBottom: 20,\n          height: 150,\n          width: 150,\n          borderRadius: 100,\n        }}\n      >\n        <Image\n          source={require(\"../../assets/images/logo.png\")}\n          style={{\n            height: 150,\n            width: 150,\n            borderRadius: 100,\n          }}\n        />\n      </LinearGradient>\n      <Input\n        placeholder=\"Email\"\n        leftIcon={<Icon name=\"email\" type=\"material-community\" />}\n        value={email}\n        onChangeText={(value) => setEmail(value)}\n        label=\"Email\"\n        errorStyle={{ color: \"red\" }}\n        errorMessage={errors.email}\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={<Icon name=\"lock\" />}\n        label=\"Mot de passe\"\n        secureTextEntry\n        value={password}\n        containerStyle={{ marginBottom: 30, marginTop: 8 }}\n        onChangeText={(value) => setPassword(value)}\n        errorStyle={{ color: \"red\" }}\n        errorMessage={errors.password}\n      />\n      <Button\n        title=\"Se connecter\"\n        onPress={handleLogIn}\n        loading={auth.isLoggingIn}\n        containerStyle={{ marginBottom: 20, marginTop: 8 }}\n      />\n      <Button\n        title=\"Nouveau? Je m'enregistre.\"\n        type=\"clear\"\n        onPress={() => navigation.navigate(\"SignUp\")}\n        containerStyle={{ marginBottom: 30 }}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logIn: (credentials) => dispatch(logIn(credentials)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(logInScreen);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { View } from \"react-native\";\nimport { Input, Button, Icon } from \"react-native-elements\";\nimport { signUp } from \"../../actions/authActions\";\n\nconst SignUpScreen = ({ signUp, auth }) => {\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const handleSignUp = async () => {\n    if (!firstname) {\n      return setErrors({ firstname: \"Prénom manquant.\" });\n    } else if (!lastname) {\n      return setErrors({ lastname: \"Nom manquant.\" });\n    } else if (!email) {\n      return setErrors({ mail: \"Mél manquant.\" });\n    } else if (password.length < 8 === true) {\n      return setErrors({ password: \"Mot de passe manquant.\" });\n    } else if (password !== confirmation) {\n      return setErrors({\n        confirmation: \"Veuillez retaper la confirmation de votre mot de passe.\",\n      });\n    }\n    setErrors({});\n    signUp({ email, password, firstname, lastname, code });\n  };\n\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n      }}\n    >\n      <Input\n        placeholder=\"Prénom\"\n        value={firstname}\n        onChangeText={(value) => setFirstname(value)}\n        label=\"Prénom\"\n        errorMessage={errors.firstname}\n      />\n      <Input\n        placeholder=\"Nom\"\n        value={lastname}\n        onChangeText={(value) => setLastname(value)}\n        label=\"Nom\"\n        errorMessage={errors.lastname}\n      />\n      <Input\n        placeholder=\"Email\"\n        leftIcon={<Icon name=\"email\" type=\"material-community\" />}\n        value={email}\n        onChangeText={(value) => setEmail(value)}\n        label=\"Email\"\n        errorMessage={errors.email}\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={<Icon name=\"lock\" />}\n        label=\"Mot de passe\"\n        secureTextEntry\n        value={password}\n        onChangeText={(value) => setPassword(value)}\n        errorMessage={errors.password}\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={\n          <Icon\n            name={\n              confirmation !== password || password.length < 8\n                ? \"close\"\n                : \"check\"\n            }\n            color={\n              confirmation !== password || password.length < 8 ? \"red\" : \"green\"\n            }\n          />\n        }\n        label=\"Confirmation\"\n        secureTextEntry\n        value={confirmation}\n        leftIconContainerStyle={{ marginRight: 12 }}\n        containerStyle={{ marginBottom: 40, marginTop: 8 }}\n        onChangeText={(value) => setConfirmation(value)}\n        errorMessage={errors.confirmation}\n      />\n      <Input\n        placeholder=\"Code\"\n        leftIcon={<Icon name=\"code-tags\" type=\"material-community\" />}\n        value={code}\n        onChangeText={(value) => setCode(value)}\n        label=\"Email\"\n        errorMessage={errors.code}\n      />\n      <Button\n        title=\"S'inscrire\"\n        onPress={handleSignUp}\n        loading={auth.isSigningUp}\n        containerStyle={{ marginBottom: 20, marginTop: 8 }}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (credentials) => dispatch(signUp(credentials)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpScreen);\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport LogInScreen from \"./LogInScreen\";\nimport SignUpScreen from \"./SignUpScreen\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nconst Stack = createStackNavigator();\n\nconst AuthNavigator = () => {\n  return (\n    <View style={{ flex: 1 }}>\n      <Stack.Navigator initialRouteName=\"LogIn\" headerMode=\"screen\">\n        <Stack.Screen\n          name=\"LogIn\"\n          component={LogInScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"SignUp\"\n          component={SignUpScreen}\n          options={{\n            title: \"S'inscrire\",\n          }}\n        />\n      </Stack.Navigator>\n    </View>\n  );\n};\n\nexport default AuthNavigator;\n","import React, { useContext, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Text, View, Dimensions, TextInput } from \"react-native\";\nimport { Icon, ThemeContext, Button } from \"react-native-elements\";\nimport { resetOverlay } from \"../actions/overlayAction\";\nimport * as RootNavigation from \"../RootNavigation.js\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nconst Notifier = ({ notification, theme }) => {\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      <Icon\n        containerStyle={{ marginBottom: 8 }}\n        size={30}\n        name={\n          notification.variant === \"success\"\n            ? \"check-circle-outline\"\n            : notification.variant === \"warning\"\n            ? \"alert-circle-outline\"\n            : notification.variant === \"error\"\n            ? \"close-circle-outline\"\n            : notification.icon\n        }\n        color={\n          notification.variant === \"success\"\n            ? \"green\"\n            : notification.variant === \"warning\"\n            ? \"yellow\"\n            : notification.variant === \"error\"\n            ? \"red\"\n            : notification.variant === \"error\"\n            ? \"blue\"\n            : theme.colors.grey1\n        }\n      />\n      {notification.message && (\n        <Text style={{ fontSize: 14 }}>{notification.message}</Text>\n      )}\n    </View>\n  );\n};\n\nconst InputForm = ({ form, dispatchRedirectReset, theme, dispatch }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          marginTop: 8,\n        }}\n      >\n        {form.message && <Text style={{ fontSize: 14 }}>{form.message}</Text>}\n      </View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"stretch\",\n          marginTop: 8,\n        }}\n      >\n        <TextInput\n          value={inputValue}\n          multiline\n          placeholder=\"Ecrivez ici.\"\n          placeholderTextColor=\"grey\"\n          onChangeText={(text) => setInputValue(text)}\n          style={{\n            backgroundColor: theme.colors.grey5,\n            borderColor: theme.colors.grey4,\n            borderWidth: 1,\n            borderRadius: 5,\n            height: 60,\n            paddingHorizontal: 4,\n            paddingVertical: 4,\n            flex: 1,\n          }}\n          textAlignVertical=\"top\"\n        />\n        <Button\n          buttonStyle={{\n            height: 60,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n          icon={\n            <Icon\n              name=\"send\"\n              size={20}\n              color={inputValue ? theme.colors.primary : theme.colors.grey2}\n            />\n          }\n          disabled={!inputValue}\n          type=\"clear\"\n          onPress={() => {\n            dispatch(\n              form.action({\n                [form.inputName]: inputValue,\n                ...form.actionParams,\n              })\n            );\n            dispatchRedirectReset();\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst Menu = ({ menu, dispatchRedirectReset, dispatch }) => {\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      {menu.buttons?.map((button, i) => {\n        return (\n          <Button\n            title={button.title}\n            key={i}\n            containerStyle={{ height: 30 }}\n            onPress={() => {\n              dispatch(button.action(...button.actionParams));\n              dispatchRedirectReset();\n            }}\n          />\n        );\n      })}\n    </View>\n  );\n};\n\nconst CustomOverlay = () => {\n  const overlay = useSelector((state) => state.overlay);\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  if (overlay.show === false) return null;\n\n  const dispatchRedirectReset = () => {\n    dispatch(resetOverlay());\n    typeof overlay.callbacks === \"array\" &&\n      overlay.callbacks.forEach((d) => {\n        dispatch(d());\n      });\n    overlay.redirect && RootNavigation.navigate(overlay.redirect, {});\n  };\n\n  overlay.timeout &&\n    setTimeout(() => {\n      dispatchRedirectReset();\n    }, overlay.timeout);\n\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        height: Dimensions.get(\"window\").height,\n        width: Dimensions.get(\"window\").width,\n        backgroundColor: theme.colors.grey6,\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"stretch\",\n      }}\n    >\n      <TouchableOpacity\n        containerStyle={{ flex: 1, minHeight: 12 }}\n        style={{\n          flex: 1,\n          minHeight: 12,\n        }}\n        onPress={() => {\n          overlay.notification\n            ? dispatchRedirectReset()\n            : dispatch(resetOverlay());\n        }}\n      />\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TouchableOpacity\n          containerStyle={{ flex: 1, minWidth: 12 }}\n          style={{\n            flex: 1,\n            minWidth: 12,\n          }}\n          onPress={() => {\n            overlay.notification\n              ? dispatchRedirectReset()\n              : dispatch(resetOverlay());\n          }}\n        />\n        {overlay.notification && (\n          <Notifier\n            notification={overlay.notification}\n            dispatchRedirectReset={dispatchRedirectReset}\n            theme={theme}\n          />\n        )}\n        {overlay.form && (\n          <InputForm\n            form={overlay.form}\n            dispatchRedirectReset={dispatchRedirectReset}\n            dispatch={dispatch}\n            theme={theme}\n          />\n        )}\n        {overlay.menu && (\n          <Menu\n            menu={overlay.menu}\n            dispatchRedirectReset={dispatchRedirectReset}\n            dispatch={dispatch}\n          />\n        )}\n        <TouchableOpacity\n          containerStyle={{ flex: 1, minWidth: 12 }}\n          style={{\n            flex: 1,\n            minWidth: 12,\n          }}\n          onPress={() => {\n            overlay.notification\n              ? dispatchRedirectReset()\n              : dispatch(resetOverlay());\n          }}\n        />\n      </View>\n      <TouchableOpacity\n        containerStyle={{ flex: 1, minHeight: 12 }}\n        style={{\n          flex: 1,\n          minHeight: 12,\n        }}\n        onPress={() => {\n          overlay.notification\n            ? dispatchRedirectReset()\n            : dispatch(resetOverlay());\n        }}\n      />\n    </View>\n  );\n};\n\nexport default CustomOverlay;\n","import React from \"react\";\nimport { Provider, useSelector, shallowEqual, useDispatch } from \"react-redux\";\nimport { SafeAreaView, Platform, StatusBar, View } from \"react-native\";\nimport { store, persistor } from \"./store/index\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { ThemeProvider, Icon } from \"react-native-elements\";\nimport { SplashScreen } from \"expo\";\n\nimport MyJobs from \"./components/MyJobs\";\nimport Jobs from \"./components/Jobs\";\nimport Profile from \"./components/Profile\";\nimport People from \"./components/People\";\nimport Messages from \"./components/Messages\";\nimport Auth from \"./components/Auth\";\nimport CustomOverlay from \"./components/CustomOverlay\";\n\nimport theme from \"./Theme.json\";\nimport useLinking from \"./useLinking\";\n\nimport { navigationRef, isMountedRef } from \"./RootNavigation\";\n\nimport { verifyToken } from \"./actions/authActions\";\nimport { fetchJobs, fetchMyJobs } from \"./actions/jobsActions\";\nimport { fetchUsers } from \"./actions/usersActions\";\nimport { fetchConversations } from \"./actions/chatActions\";\n\nconst BottomTab = createBottomTabNavigator();\nconst Drawer = createDrawerNavigator();\nconst Switch = createStackNavigator();\n\nconst MainStack = () => {\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"People\"\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          switch (route.name) {\n            case \"Home\":\n              iconName = \"home\";\n              break;\n            case \"Jobs\":\n              iconName = \"briefcase\";\n              break;\n            case \"People\":\n              iconName = \"account-group\";\n              break;\n            case \"Messages\":\n              iconName = \"forum\";\n              break;\n            default:\n              break;\n          }\n\n          return <Icon name={iconName} size={size} color={color} />;\n        },\n      })}\n      tabBarOptions={{\n        activeTintColor: theme.colors.primary,\n        inactiveTintColor: \"gray\",\n      }}\n    >\n      <BottomTab.Screen\n        name=\"People\"\n        component={People}\n        options={{ title: \"Annuaire\" }}\n      />\n      <BottomTab.Screen\n        name=\"Jobs\"\n        component={Jobs}\n        options={{ title: \"Emplois\" }}\n      />\n      <BottomTab.Screen\n        name=\"Messages\"\n        component={Messages}\n        options={{ title: \"Messages\" }}\n      />\n    </BottomTab.Navigator>\n  );\n};\n\nconst DrawerStack = () => {\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    function fetchData() {\n      dispatch(fetchJobs());\n      dispatch(fetchMyJobs());\n      dispatch(fetchUsers());\n      dispatch(fetchConversations());\n    }\n\n    fetchData();\n  }, []);\n  return (\n    <Drawer.Navigator initialRouteName=\"Main\" headerMode=\"screen\">\n      <Drawer.Screen\n        name=\"Main\"\n        component={MainStack}\n        options={{ title: \"Accueil\" }}\n      />\n      <Drawer.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{ title: \"Mon profil\" }}\n      />\n      <Drawer.Screen\n        name=\"MyJobs\"\n        component={MyJobs}\n        options={{ title: \"Mes offres d'emplois\" }}\n      />\n    </Drawer.Navigator>\n  );\n};\n\nconst AppStack = (props) => {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n  const [initialNavigationState, setInitialNavigationState] = React.useState();\n  const containerRef = React.useRef();\n  const { getInitialState } = useLinking(navigationRef);\n  const dispatch = useDispatch();\n\n  const userToken = useSelector((state) => state.auth.token, shallowEqual);\n\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      if (userToken !== null) {\n        dispatch(verifyToken());\n      }\n      try {\n        SplashScreen.preventAutoHide();\n\n        setInitialNavigationState(await getInitialState());\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hide();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return null;\n  } else {\n    return (\n      <View\n        style={{\n          maxWidth: 500,\n          flex: 1,\n        }}\n      >\n        <NavigationContainer\n          ref={navigationRef}\n          initialState={initialNavigationState}\n        >\n          <Switch.Navigator headerMode=\"none\">\n            {userToken && <Switch.Screen name=\"Root\" component={DrawerStack} />}\n            {!userToken && <Switch.Screen name=\"Auth\" component={Auth} />}\n          </Switch.Navigator>\n          <CustomOverlay />\n        </NavigationContainer>\n      </View>\n    );\n  }\n};\n\nconst App = () => {\n  React.useEffect(() => {\n    isMountedRef.current = true;\n    return () => (isMountedRef.current = false);\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <SafeAreaView\n            style={{\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            {Platform.OS === \"ios\" && <StatusBar barStyle=\"default\" />}\n            <AppStack />\n          </SafeAreaView>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { useLinking } from \"@react-navigation/native\";\nimport { Linking } from \"expo\";\n\nexport default function (containerRef) {\n  return useLinking(containerRef, {\n    prefixes: [Linking.makeUrl(\"/\")],\n    config: {\n      Auth: {\n        path: \"auth\",\n        screens: {\n          LogIn: \"login\",\n          SignUp: \"signup\",\n        },\n      },\n    },\n  });\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var map = {\n\t\"./af\": 282,\n\t\"./af.js\": 282,\n\t\"./ar\": 283,\n\t\"./ar-dz\": 284,\n\t\"./ar-dz.js\": 284,\n\t\"./ar-kw\": 285,\n\t\"./ar-kw.js\": 285,\n\t\"./ar-ly\": 286,\n\t\"./ar-ly.js\": 286,\n\t\"./ar-ma\": 287,\n\t\"./ar-ma.js\": 287,\n\t\"./ar-sa\": 288,\n\t\"./ar-sa.js\": 288,\n\t\"./ar-tn\": 289,\n\t\"./ar-tn.js\": 289,\n\t\"./ar.js\": 283,\n\t\"./az\": 290,\n\t\"./az.js\": 290,\n\t\"./be\": 291,\n\t\"./be.js\": 291,\n\t\"./bg\": 292,\n\t\"./bg.js\": 292,\n\t\"./bm\": 293,\n\t\"./bm.js\": 293,\n\t\"./bn\": 294,\n\t\"./bn.js\": 294,\n\t\"./bo\": 295,\n\t\"./bo.js\": 295,\n\t\"./br\": 296,\n\t\"./br.js\": 296,\n\t\"./bs\": 297,\n\t\"./bs.js\": 297,\n\t\"./ca\": 298,\n\t\"./ca.js\": 298,\n\t\"./cs\": 299,\n\t\"./cs.js\": 299,\n\t\"./cv\": 300,\n\t\"./cv.js\": 300,\n\t\"./cy\": 301,\n\t\"./cy.js\": 301,\n\t\"./da\": 302,\n\t\"./da.js\": 302,\n\t\"./de\": 303,\n\t\"./de-at\": 304,\n\t\"./de-at.js\": 304,\n\t\"./de-ch\": 305,\n\t\"./de-ch.js\": 305,\n\t\"./de.js\": 303,\n\t\"./dv\": 306,\n\t\"./dv.js\": 306,\n\t\"./el\": 307,\n\t\"./el.js\": 307,\n\t\"./en-SG\": 308,\n\t\"./en-SG.js\": 308,\n\t\"./en-au\": 309,\n\t\"./en-au.js\": 309,\n\t\"./en-ca\": 310,\n\t\"./en-ca.js\": 310,\n\t\"./en-gb\": 311,\n\t\"./en-gb.js\": 311,\n\t\"./en-ie\": 312,\n\t\"./en-ie.js\": 312,\n\t\"./en-il\": 313,\n\t\"./en-il.js\": 313,\n\t\"./en-nz\": 314,\n\t\"./en-nz.js\": 314,\n\t\"./eo\": 315,\n\t\"./eo.js\": 315,\n\t\"./es\": 316,\n\t\"./es-do\": 317,\n\t\"./es-do.js\": 317,\n\t\"./es-us\": 318,\n\t\"./es-us.js\": 318,\n\t\"./es.js\": 316,\n\t\"./et\": 319,\n\t\"./et.js\": 319,\n\t\"./eu\": 320,\n\t\"./eu.js\": 320,\n\t\"./fa\": 321,\n\t\"./fa.js\": 321,\n\t\"./fi\": 322,\n\t\"./fi.js\": 322,\n\t\"./fo\": 323,\n\t\"./fo.js\": 323,\n\t\"./fr\": 117,\n\t\"./fr-ca\": 324,\n\t\"./fr-ca.js\": 324,\n\t\"./fr-ch\": 325,\n\t\"./fr-ch.js\": 325,\n\t\"./fr.js\": 117,\n\t\"./fy\": 326,\n\t\"./fy.js\": 326,\n\t\"./ga\": 327,\n\t\"./ga.js\": 327,\n\t\"./gd\": 328,\n\t\"./gd.js\": 328,\n\t\"./gl\": 329,\n\t\"./gl.js\": 329,\n\t\"./gom-latn\": 330,\n\t\"./gom-latn.js\": 330,\n\t\"./gu\": 331,\n\t\"./gu.js\": 331,\n\t\"./he\": 332,\n\t\"./he.js\": 332,\n\t\"./hi\": 333,\n\t\"./hi.js\": 333,\n\t\"./hr\": 334,\n\t\"./hr.js\": 334,\n\t\"./hu\": 335,\n\t\"./hu.js\": 335,\n\t\"./hy-am\": 336,\n\t\"./hy-am.js\": 336,\n\t\"./id\": 337,\n\t\"./id.js\": 337,\n\t\"./is\": 338,\n\t\"./is.js\": 338,\n\t\"./it\": 339,\n\t\"./it-ch\": 340,\n\t\"./it-ch.js\": 340,\n\t\"./it.js\": 339,\n\t\"./ja\": 341,\n\t\"./ja.js\": 341,\n\t\"./jv\": 342,\n\t\"./jv.js\": 342,\n\t\"./ka\": 343,\n\t\"./ka.js\": 343,\n\t\"./kk\": 344,\n\t\"./kk.js\": 344,\n\t\"./km\": 345,\n\t\"./km.js\": 345,\n\t\"./kn\": 346,\n\t\"./kn.js\": 346,\n\t\"./ko\": 347,\n\t\"./ko.js\": 347,\n\t\"./ku\": 348,\n\t\"./ku.js\": 348,\n\t\"./ky\": 349,\n\t\"./ky.js\": 349,\n\t\"./lb\": 350,\n\t\"./lb.js\": 350,\n\t\"./lo\": 351,\n\t\"./lo.js\": 351,\n\t\"./lt\": 352,\n\t\"./lt.js\": 352,\n\t\"./lv\": 353,\n\t\"./lv.js\": 353,\n\t\"./me\": 354,\n\t\"./me.js\": 354,\n\t\"./mi\": 355,\n\t\"./mi.js\": 355,\n\t\"./mk\": 356,\n\t\"./mk.js\": 356,\n\t\"./ml\": 357,\n\t\"./ml.js\": 357,\n\t\"./mn\": 358,\n\t\"./mn.js\": 358,\n\t\"./mr\": 359,\n\t\"./mr.js\": 359,\n\t\"./ms\": 360,\n\t\"./ms-my\": 361,\n\t\"./ms-my.js\": 361,\n\t\"./ms.js\": 360,\n\t\"./mt\": 362,\n\t\"./mt.js\": 362,\n\t\"./my\": 363,\n\t\"./my.js\": 363,\n\t\"./nb\": 364,\n\t\"./nb.js\": 364,\n\t\"./ne\": 365,\n\t\"./ne.js\": 365,\n\t\"./nl\": 366,\n\t\"./nl-be\": 367,\n\t\"./nl-be.js\": 367,\n\t\"./nl.js\": 366,\n\t\"./nn\": 368,\n\t\"./nn.js\": 368,\n\t\"./pa-in\": 369,\n\t\"./pa-in.js\": 369,\n\t\"./pl\": 370,\n\t\"./pl.js\": 370,\n\t\"./pt\": 371,\n\t\"./pt-br\": 372,\n\t\"./pt-br.js\": 372,\n\t\"./pt.js\": 371,\n\t\"./ro\": 373,\n\t\"./ro.js\": 373,\n\t\"./ru\": 374,\n\t\"./ru.js\": 374,\n\t\"./sd\": 375,\n\t\"./sd.js\": 375,\n\t\"./se\": 376,\n\t\"./se.js\": 376,\n\t\"./si\": 377,\n\t\"./si.js\": 377,\n\t\"./sk\": 378,\n\t\"./sk.js\": 378,\n\t\"./sl\": 379,\n\t\"./sl.js\": 379,\n\t\"./sq\": 380,\n\t\"./sq.js\": 380,\n\t\"./sr\": 381,\n\t\"./sr-cyrl\": 382,\n\t\"./sr-cyrl.js\": 382,\n\t\"./sr.js\": 381,\n\t\"./ss\": 383,\n\t\"./ss.js\": 383,\n\t\"./sv\": 384,\n\t\"./sv.js\": 384,\n\t\"./sw\": 385,\n\t\"./sw.js\": 385,\n\t\"./ta\": 386,\n\t\"./ta.js\": 386,\n\t\"./te\": 387,\n\t\"./te.js\": 387,\n\t\"./tet\": 388,\n\t\"./tet.js\": 388,\n\t\"./tg\": 389,\n\t\"./tg.js\": 389,\n\t\"./th\": 390,\n\t\"./th.js\": 390,\n\t\"./tl-ph\": 391,\n\t\"./tl-ph.js\": 391,\n\t\"./tlh\": 392,\n\t\"./tlh.js\": 392,\n\t\"./tr\": 393,\n\t\"./tr.js\": 393,\n\t\"./tzl\": 394,\n\t\"./tzl.js\": 394,\n\t\"./tzm\": 395,\n\t\"./tzm-latn\": 396,\n\t\"./tzm-latn.js\": 396,\n\t\"./tzm.js\": 395,\n\t\"./ug-cn\": 397,\n\t\"./ug-cn.js\": 397,\n\t\"./uk\": 398,\n\t\"./uk.js\": 398,\n\t\"./ur\": 399,\n\t\"./ur.js\": 399,\n\t\"./uz\": 400,\n\t\"./uz-latn\": 401,\n\t\"./uz-latn.js\": 401,\n\t\"./uz.js\": 400,\n\t\"./vi\": 402,\n\t\"./vi.js\": 402,\n\t\"./x-pseudo\": 403,\n\t\"./x-pseudo.js\": 403,\n\t\"./yo\": 404,\n\t\"./yo.js\": 404,\n\t\"./zh-cn\": 405,\n\t\"./zh-cn.js\": 405,\n\t\"./zh-hk\": 406,\n\t\"./zh-hk.js\": 406,\n\t\"./zh-tw\": 407,\n\t\"./zh-tw.js\": 407\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 676;","module.exports = __webpack_public_path__ + \"static/media/logo.0120364d.png\";"],"sourceRoot":""}