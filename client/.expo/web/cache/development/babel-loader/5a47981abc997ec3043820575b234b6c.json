{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { SearchBar, Avatar, ThemeContext, Button, Icon } from \"react-native-elements\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchUsers } from \"../../actions/usersActions\";\nimport { fetchConversations } from \"../../actions/chatActions\";\nimport { apiConfig } from \"../../config\";\nimport { showOverlay } from \"../../actions/overlayAction\";\n\nvar SearchResultItem = function SearchResultItem(_ref) {\n  var _item$avatar;\n\n  var item = _ref.item,\n      theme = _ref.theme,\n      navigation = _ref.navigation,\n      chat = _ref.chat,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showMessageForm = _useState2[0],\n      setShowMessageForm = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newMessage = _useState4[0],\n      setNewMessage = _useState4[1];\n\n  var fullName = _.capitalize(item == null ? void 0 : item.firstname) + \" \" + _.capitalize(item == null ? void 0 : item.lastname);\n\n  return React.createElement(TouchableOpacity, {\n    onPress: chat.interlocutorsIds.includes(item == null ? void 0 : item._id) ? function () {\n      return navigation.navigate(\"Room\", {\n        title: fullName,\n        conversation: chat.convIdsWithPartsIds.filter(function (element) {\n          return element.participants.includes(item == null ? void 0 : item._id) === true;\n        }).filter(function (conv) {\n          return conv.participants.length === 2;\n        })[0]\n      });\n    } : function () {\n      return dispatch(showOverlay({\n        form: {\n          action: sendMessage,\n          inputName: \"text\",\n          actionParams: {\n            recipients: [item == null ? void 0 : item._id]\n          },\n          message: \"Demarrer une conversation avec \" + fullName\n        }\n      }));\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      paddingVertical: 4,\n      paddingHorizontal: 8,\n      borderBottomColor: theme.colors.grey5,\n      borderBottomWidth: 1\n    }\n  }, React.createElement(View, {\n    style: {\n      alignContent: \"center\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginRight: 12\n    }\n  }, (item == null ? void 0 : item.avatar) ? React.createElement(Avatar, {\n    source: {\n      uri: \"https://siee-gate.herokuapp.com/api/files/avatar/\" + (item == null ? void 0 : (_item$avatar = item.avatar) == null ? void 0 : _item$avatar.filename)\n    },\n    size: \"small\"\n  }) : React.createElement(Avatar, {\n    size: \"small\",\n    title: item == null ? void 0 : item.firstname[0].concat(item == null ? void 0 : item.lastname[0]).toUpperCase()\n  })), !showMessageForm ? React.createElement(Text, {\n    style: {\n      paddingLeft: 12\n    }\n  }, fullName) : React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      backgroundColor: \"white\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      alignContent: \"center\",\n      marginTop: 8\n    }\n  }, React.createElement(TextInput, {\n    value: newMessage,\n    multiline: true,\n    placeholder: \"Ecrivez ici.\",\n    placeholderTextColor: \"grey\",\n    onChangeText: function onChangeText(text) {\n      return setNewMessage(text);\n    },\n    style: {\n      backgroundColor: theme.colors.grey5,\n      borderColor: theme.colors.grey4,\n      borderWidth: 1,\n      borderRadius: 5,\n      paddingVertical: 2,\n      paddingHorizontal: 4,\n      maxHeight: 80\n    }\n  }), React.createElement(Button, {\n    containerStyle: {\n      height: 30\n    },\n    icon: React.createElement(Icon, {\n      name: \"send\",\n      size: 20,\n      color: newMessage ? theme.colors.primary : theme.colors.grey2\n    }),\n    disabled: !newMessage,\n    type: \"clear\",\n    onPress: function onPress() {\n      onSendMessage(newMessage, item == null ? void 0 : item._id);\n      setNewMessage(\"\");\n      setShowMessageForm(false);\n    }\n  }))));\n};\n\nvar Item = function Item(_ref2) {\n  var _item$participants$3, _item$participants$4, _item$participants$4$, _item$participants$5, _item$participants$6, _item$lastMessage, _item$lastMessage2, _item$lastMessage3;\n\n  var item = _ref2.item,\n      navigation = _ref2.navigation,\n      auth = _ref2.auth,\n      theme = _ref2.theme,\n      dispatch = _ref2.dispatch;\n\n  var listParticipants = function listParticipants() {\n    var _item$participants, _item$participants3;\n\n    _.remove(item == null ? void 0 : item.participants, function (participant) {\n      return participant._id === auth.user._id;\n    });\n\n    if ((item == null ? void 0 : (_item$participants = item.participants) == null ? void 0 : _item$participants.length) > 1) {\n      var _item$participants2;\n\n      var participantsList = item == null ? void 0 : (_item$participants2 = item.participants) == null ? void 0 : _item$participants2.map(function (participant) {\n        return _.capitalize(participant.firstname);\n      });\n      return participantsList.toString().replace(\",\", \", \");\n    } else if ((item == null ? void 0 : (_item$participants3 = item.participants) == null ? void 0 : _item$participants3.length) === 1) {\n      var _item$participants$, _item$participants$2;\n\n      return _.capitalize(item == null ? void 0 : (_item$participants$ = item.participants[0]) == null ? void 0 : _item$participants$.firstname).concat(\" \", _.capitalize(item == null ? void 0 : (_item$participants$2 = item.participants[0]) == null ? void 0 : _item$participants$2.lastname));\n    } else {\n      return \"Compte supprim√©\";\n    }\n  };\n\n  var title = listParticipants();\n  var participants = listParticipants(item);\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Room\", {\n        title: title,\n        conversation_id: item._id\n      });\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingHorizontal: 8,\n      paddingVertical: 8,\n      borderBottomColor: \"white\",\n      borderBottomWidth: 3,\n      backgroundColor: \"white\"\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    }\n  }, React.createElement(View, {\n    style: {\n      alignContent: \"center\",\n      justifyContent: \"center\",\n      paddingRight: 8\n    }\n  }, (item == null ? void 0 : (_item$participants$3 = item.participants[0]) == null ? void 0 : _item$participants$3.avatar) ? React.createElement(Avatar, {\n    source: {\n      uri: apiConfig.baseUrl + \"/files/avatar/\" + (item == null ? void 0 : (_item$participants$4 = item.participants[0]) == null ? void 0 : (_item$participants$4$ = _item$participants$4.avatar) == null ? void 0 : _item$participants$4$.filename)\n    },\n    size: \"medium\"\n  }) : React.createElement(Avatar, {\n    size: \"medium\",\n    title: item == null ? void 0 : (_item$participants$5 = item.participants[0]) == null ? void 0 : _item$participants$5.firstname[0].concat(item == null ? void 0 : (_item$participants$6 = item.participants[0]) == null ? void 0 : _item$participants$6.lastname[0]).toUpperCase()\n  })), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"flex-start\"\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlignVertical: \"bottom\",\n      fontSize: 16,\n      fontWeight: \"bold\"\n    }\n  }, participants), React.createElement(Text, {\n    color: \"grey\",\n    style: {\n      color: \"grey\",\n      fontSize: 10,\n      textAlignVertical: \"bottom\"\n    }\n  }, _.capitalize(moment(item == null ? void 0 : (_item$lastMessage = item.lastMessage) == null ? void 0 : _item$lastMessage.sentAt).locale(\"fr\").fromNow()))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    }\n  }, React.createElement(View, {\n    style: {\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    }\n  }, (item == null ? void 0 : (_item$lastMessage2 = item.lastMessage) == null ? void 0 : _item$lastMessage2.sender) === auth.user._id ? React.createElement(Icon, {\n    name: \"arrow-top-right\",\n    color: theme.colors.grey1,\n    size: 14\n  }) : React.createElement(Icon, {\n    name: \"arrow-bottom-left\",\n    color: theme.colors.grey3,\n    size: 14\n  })), React.createElement(Text, {\n    style: {\n      textAlignVertical: \"center\",\n      fontSize: 14,\n      flex: 1\n    }\n  }, item == null ? void 0 : (_item$lastMessage3 = item.lastMessage) == null ? void 0 : _item$lastMessage3.text))))));\n};\n\nvar ChatLobbyScreen = function ChatLobbyScreen(_ref3) {\n  var navigation = _ref3.navigation;\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      refreshing = _useState6[0],\n      setRefreshing = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      search = _useState8[0],\n      setSearch = _useState8[1];\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      chat = _useSelector.chat,\n      users = _useSelector.users,\n      auth = _useSelector.auth;\n\n  useEffect(function () {\n    function fetchData() {\n      dispatch(fetchConversations());\n      dispatch(fetchUsers());\n    }\n\n    fetchData();\n  }, []);\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    dispatch(fetchConversations());\n    setRefreshing(false);\n  }, [refreshing]);\n\n  var searchProcess = function searchProcess() {\n    var _users$users;\n\n    var searchResults = [];\n    (_users$users = users.users) == null ? void 0 : _users$users.forEach(function (user) {\n      if (user._id !== auth.user._id) {\n        if (user.firstname.includes(search.toLowerCase()) === true || user.lastname.includes(search.toLowerCase())) {\n          searchResults.push(user);\n        }\n      }\n    });\n    return searchResults;\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, chat.isLoaded ? chat.conversations.length > 0 ? React.createElement(FlatList, {\n    data: chat.conversations,\n    renderItem: function renderItem(_ref4) {\n      var item = _ref4.item;\n      return React.createElement(Item, {\n        item: item,\n        auth: auth,\n        navigation: navigation,\n        theme: theme,\n        dispatch: dispatch\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item == null ? void 0 : item._id;\n    },\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh\n    })\n  }) : React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      color: theme.colors.grey3\n    }\n  }, \"Aucune conversation\"), React.createElement(Button, {\n    title: \"Rafraichir\",\n    type: \"clear\",\n    onPress: function onPress() {\n      return dispatch(fetchConversations());\n    }\n  })) : React.createElement(View, {\n    style: {\n      flex: 1,\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\"\n  })));\n};\n\nexport default ChatLobbyScreen;","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/Messages/MessagesLobbyScreen.js"],"names":["React","useState","useEffect","useCallback","useContext","useDispatch","useSelector","SearchBar","Avatar","ThemeContext","Button","Icon","_","moment","fetchUsers","fetchConversations","apiConfig","showOverlay","SearchResultItem","item","theme","navigation","chat","dispatch","showMessageForm","setShowMessageForm","newMessage","setNewMessage","fullName","capitalize","firstname","lastname","interlocutorsIds","includes","_id","navigate","title","conversation","convIdsWithPartsIds","filter","element","participants","conv","length","form","action","sendMessage","inputName","actionParams","recipients","message","flexDirection","alignItems","paddingVertical","paddingHorizontal","borderBottomColor","colors","grey5","borderBottomWidth","alignContent","justifyContent","marginRight","avatar","uri","filename","concat","toUpperCase","paddingLeft","backgroundColor","marginTop","text","borderColor","grey4","borderWidth","borderRadius","maxHeight","height","primary","grey2","onSendMessage","Item","auth","listParticipants","remove","participant","user","participantsList","map","toString","replace","conversation_id","paddingRight","baseUrl","flex","textAlignVertical","fontSize","fontWeight","color","lastMessage","sentAt","locale","fromNow","sender","grey1","grey3","ChatLobbyScreen","refreshing","setRefreshing","search","setSearch","state","users","fetchData","onRefresh","searchProcess","searchResults","forEach","toLowerCase","push","isLoaded","conversations","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,EAAkDC,UAAlD,QAAoE,OAApE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;;;;;AAUA,SACEC,SADF,EAEEC,MAFF,EAGEC,YAHF,EAIEC,MAJF,EAKEC,IALF,QAMO,uBANP;AAOA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,UAAT;AACA,SAASC,kBAAT;AACA,SAASC,SAAT;AACA,SAASC,WAAT;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAiD;AAAA;;AAAA,MAA9CC,IAA8C,QAA9CA,IAA8C;AAAA,MAAxCC,KAAwC,QAAxCA,KAAwC;AAAA,MAAjCC,UAAiC,QAAjCA,UAAiC;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBAC1BtB,QAAQ,CAAC,KAAD,CADkB;AAAA;AAAA,MACjEuB,eADiE;AAAA,MAChDC,kBADgD;;AAAA,mBAEpCxB,QAAQ,CAAC,EAAD,CAF4B;AAAA;AAAA,MAEjEyB,UAFiE;AAAA,MAErDC,aAFqD;;AAGxE,MAAMC,QAAQ,GACZhB,CAAC,CAACiB,UAAF,CAAaV,IAAb,oBAAaA,IAAI,CAAEW,SAAnB,IAAgC,GAAhC,GAAsClB,CAAC,CAACiB,UAAF,CAAaV,IAAb,oBAAaA,IAAI,CAAEY,QAAnB,CADxC;;AAGA,SACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EACLT,IAAI,CAACU,gBAAL,CAAsBC,QAAtB,CAA+Bd,IAA/B,oBAA+BA,IAAI,CAAEe,GAArC,IACI;AAAA,aACEb,UAAU,CAACc,QAAX,CAAoB,MAApB,EAA4B;AAC1BC,QAAAA,KAAK,EAAER,QADmB;AAE1BS,QAAAA,YAAY,EAAEf,IAAI,CAACgB,mBAAL,CACXC,MADW,CAEV,UAACC,OAAD;AAAA,iBACEA,OAAO,CAACC,YAAR,CAAqBR,QAArB,CAA8Bd,IAA9B,oBAA8BA,IAAI,CAAEe,GAApC,MAA6C,IAD/C;AAAA,SAFU,EAKXK,MALW,CAKJ,UAACG,IAAD;AAAA,iBAAUA,IAAI,CAACD,YAAL,CAAkBE,MAAlB,KAA6B,CAAvC;AAAA,SALI,EAKsC,CALtC;AAFY,OAA5B,CADF;AAAA,KADJ,GAWI;AAAA,aACEpB,QAAQ,CACNN,WAAW,CAAC;AACV2B,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAEC,WADJ;AAEJC,UAAAA,SAAS,EAAE,MAFP;AAGJC,UAAAA,YAAY,EAAE;AAAEC,YAAAA,UAAU,EAAE,CAAC9B,IAAD,oBAACA,IAAI,CAAEe,GAAP;AAAd,WAHV;AAIJgB,UAAAA,OAAO,EAAE,oCAAoCtB;AAJzC;AADI,OAAD,CADL,CADV;AAAA;AAbR,KA0BE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLuB,MAAAA,aAAa,EAAE,KADV;AAELC,MAAAA,UAAU,EAAE,QAFP;AAGLC,MAAAA,eAAe,EAAE,CAHZ;AAILC,MAAAA,iBAAiB,EAAE,CAJd;AAKLC,MAAAA,iBAAiB,EAAEnC,KAAK,CAACoC,MAAN,CAAaC,KAL3B;AAMLC,MAAAA,iBAAiB,EAAE;AANd;AADT,KAUE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,YAAY,EAAE,QADT;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLR,MAAAA,UAAU,EAAE,QAHP;AAILS,MAAAA,WAAW,EAAE;AAJR;AADT,KAQG,CAAA1C,IAAI,QAAJ,YAAAA,IAAI,CAAE2C,MAAN,IACC,oBAAC,MAAD;AACE,IAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,yDAAsD5C,IAAtD,oCAAsDA,IAAI,CAAE2C,MAA5D,qBAAsD,aAAcE,QAApE;AADG,KADV;AAIE,IAAA,IAAI,EAAC;AAJP,IADD,GAQC,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAE7C,IAAF,oBAAEA,IAAI,CAAEW,SAAN,CAAgB,CAAhB,EAAmBmC,MAAnB,CAA0B9C,IAA1B,oBAA0BA,IAAI,CAAEY,QAAN,CAAe,CAAf,CAA1B,EAA6CmC,WAA7C;AAFT,IAhBJ,CAVF,EAgCG,CAAC1C,eAAD,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE2C,MAAAA,WAAW,EAAE;AAAf;AAAb,KAAmCvC,QAAnC,CADD,GAGC,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLuB,MAAAA,aAAa,EAAE,KADV;AAELiB,MAAAA,eAAe,EAAE,OAFZ;AAGLhB,MAAAA,UAAU,EAAE,QAHP;AAILQ,MAAAA,cAAc,EAAE,QAJX;AAKLD,MAAAA,YAAY,EAAE,QALT;AAMLU,MAAAA,SAAS,EAAE;AANN;AADT,KAUE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE3C,UADT;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,WAAW,EAAC,cAHd;AAIE,IAAA,oBAAoB,EAAC,MAJvB;AAKE,IAAA,YAAY,EAAE,sBAAC4C,IAAD;AAAA,aAAU3C,aAAa,CAAC2C,IAAD,CAAvB;AAAA,KALhB;AAME,IAAA,KAAK,EAAE;AACLF,MAAAA,eAAe,EAAEhD,KAAK,CAACoC,MAAN,CAAaC,KADzB;AAELc,MAAAA,WAAW,EAAEnD,KAAK,CAACoC,MAAN,CAAagB,KAFrB;AAGLC,MAAAA,WAAW,EAAE,CAHR;AAILC,MAAAA,YAAY,EAAE,CAJT;AAKLrB,MAAAA,eAAe,EAAE,CALZ;AAMLC,MAAAA,iBAAiB,EAAE,CANd;AAOLqB,MAAAA,SAAS,EAAE;AAPN;AANT,IAVF,EA0BE,oBAAC,MAAD;AACE,IAAA,cAAc,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KADlB;AAEE,IAAA,IAAI,EACF,oBAAC,IAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,KAAK,EAAElD,UAAU,GAAGN,KAAK,CAACoC,MAAN,CAAaqB,OAAhB,GAA0BzD,KAAK,CAACoC,MAAN,CAAasB;AAH1D,MAHJ;AASE,IAAA,QAAQ,EAAE,CAACpD,UATb;AAUE,IAAA,IAAI,EAAC,OAVP;AAWE,IAAA,OAAO,EAAE,mBAAM;AACbqD,MAAAA,aAAa,CAACrD,UAAD,EAAaP,IAAb,oBAAaA,IAAI,CAAEe,GAAnB,CAAb;AACAP,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAF,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD;AAfH,IA1BF,CAnCJ,CA1BF,CADF;AA8GD,CApHD;;AAsHA,IAAMuD,IAAI,GAAG,SAAPA,IAAO,QAAiD;AAAA;;AAAA,MAA9C7D,IAA8C,SAA9CA,IAA8C;AAAA,MAAxCE,UAAwC,SAAxCA,UAAwC;AAAA,MAA5B4D,IAA4B,SAA5BA,IAA4B;AAAA,MAAtB7D,KAAsB,SAAtBA,KAAsB;AAAA,MAAfG,QAAe,SAAfA,QAAe;;AAC5D,MAAM2D,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA;;AAC7BtE,IAAAA,CAAC,CAACuE,MAAF,CACEhE,IADF,oBACEA,IAAI,CAAEsB,YADR,EAEE,UAAC2C,WAAD;AAAA,aAAiBA,WAAW,CAAClD,GAAZ,KAAoB+C,IAAI,CAACI,IAAL,CAAUnD,GAA/C;AAAA,KAFF;;AAKA,QAAI,CAAAf,IAAI,QAAJ,kCAAAA,IAAI,CAAEsB,YAAN,wCAAoBE,MAApB,IAA6B,CAAjC,EAAoC;AAAA;;AAClC,UAAM2C,gBAAgB,GAAGnE,IAAH,2CAAGA,IAAI,CAAEsB,YAAT,qBAAG,oBAAoB8C,GAApB,CAAwB,UAACH,WAAD;AAAA,eAC/CxE,CAAC,CAACiB,UAAF,CAAauD,WAAW,CAACtD,SAAzB,CAD+C;AAAA,OAAxB,CAAzB;AAGA,aAAOwD,gBAAgB,CAACE,QAAjB,GAA4BC,OAA5B,CAAoC,GAApC,EAAyC,IAAzC,CAAP;AACD,KALD,MAKO,IAAI,CAAAtE,IAAI,QAAJ,mCAAAA,IAAI,CAAEsB,YAAN,yCAAoBE,MAApB,MAA+B,CAAnC,EAAsC;AAAA;;AAC3C,aAAO/B,CAAC,CAACiB,UAAF,CAAaV,IAAb,2CAAaA,IAAI,CAAEsB,YAAN,CAAmB,CAAnB,CAAb,qBAAa,oBAAuBX,SAApC,EAA+CmC,MAA/C,CACL,GADK,EAELrD,CAAC,CAACiB,UAAF,CAAaV,IAAb,4CAAaA,IAAI,CAAEsB,YAAN,CAAmB,CAAnB,CAAb,qBAAa,qBAAuBV,QAApC,CAFK,CAAP;AAID,KALM,MAKA;AACL,aAAO,iBAAP;AACD;AACF,GAnBD;;AAqBA,MAAMK,KAAK,GAAG8C,gBAAgB,EAA9B;AACA,MAAMzC,YAAY,GAAGyC,gBAAgB,CAAC/D,IAAD,CAArC;AAEA,SACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aACPE,UAAU,CAACc,QAAX,CAAoB,MAApB,EAA4B;AAC1BC,QAAAA,KAAK,EAALA,KAD0B;AAE1BsD,QAAAA,eAAe,EAAEvE,IAAI,CAACe;AAFI,OAA5B,CADO;AAAA;AADX,KAQE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLoB,MAAAA,iBAAiB,EAAE,CADd;AAELD,MAAAA,eAAe,EAAE,CAFZ;AAGLE,MAAAA,iBAAiB,EAAE,OAHd;AAILG,MAAAA,iBAAiB,EAAE,CAJd;AAKLU,MAAAA,eAAe,EAAE;AALZ;AADT,KASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEjB,MAAAA,aAAa,EAAE;AAAjB;AAAb,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLQ,MAAAA,YAAY,EAAE,QADT;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGL+B,MAAAA,YAAY,EAAE;AAHT;AADT,KAOG,CAAAxE,IAAI,QAAJ,oCAAAA,IAAI,CAAEsB,YAAN,CAAmB,CAAnB,2CAAuBqB,MAAvB,IACC,oBAAC,MAAD;AACE,IAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAK/C,SAAS,CAAC4E,OAAf,uBAAuCzE,IAAvC,4CAAuCA,IAAI,CAAEsB,YAAN,CAAmB,CAAnB,CAAvC,8CAAuC,qBAAuBqB,MAA9D,qBAAuC,sBAA+BE,QAAtE;AADG,KADV;AAIE,IAAA,IAAI,EAAC;AAJP,IADD,GAQC,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAE7C,IAAF,4CAAEA,IAAI,CAAEsB,YAAN,CAAmB,CAAnB,CAAF,qBAAE,qBAAuBX,SAAvB,CAAiC,CAAjC,EACJmC,MADI,CACG9C,IADH,4CACGA,IAAI,CAAEsB,YAAN,CAAmB,CAAnB,CADH,qBACG,qBAAuBV,QAAvB,CAAgC,CAAhC,CADH,EAEJmC,WAFI;AAFT,IAfJ,CADF,EAwBE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACL2B,MAAAA,IAAI,EAAE,CADD;AAELjC,MAAAA,cAAc,EAAE;AAFX;AADT,KAME,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLT,MAAAA,aAAa,EAAE,KADV;AAELS,MAAAA,cAAc,EAAE;AAFX;AADT,KAME,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLkC,MAAAA,iBAAiB,EAAE,QADd;AAELC,MAAAA,QAAQ,EAAE,EAFL;AAGLC,MAAAA,UAAU,EAAE;AAHP;AADT,KAOGvD,YAPH,CANF,EAeE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,KAAK,EAAE;AACLwD,MAAAA,KAAK,EAAE,MADF;AAELF,MAAAA,QAAQ,EAAE,EAFL;AAGLD,MAAAA,iBAAiB,EAAE;AAHd;AAFT,KAQGlF,CAAC,CAACiB,UAAF,CACChB,MAAM,CAACM,IAAD,yCAACA,IAAI,CAAE+E,WAAP,qBAAC,kBAAmBC,MAApB,CAAN,CAAkCC,MAAlC,CAAyC,IAAzC,EAA+CC,OAA/C,EADD,CARH,CAfF,CANF,EAkCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAElD,MAAAA,aAAa,EAAE,KAAjB;AAAwBC,MAAAA,UAAU,EAAE;AAApC;AAAb,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEO,MAAAA,YAAY,EAAE,QAAhB;AAA0BC,MAAAA,cAAc,EAAE;AAA1C;AADT,KAGG,CAAAzC,IAAI,QAAJ,kCAAAA,IAAI,CAAE+E,WAAN,wCAAmBI,MAAnB,MAA8BrB,IAAI,CAACI,IAAL,CAAUnD,GAAxC,GACC,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,iBADP;AAEE,IAAA,KAAK,EAAEd,KAAK,CAACoC,MAAN,CAAa+C,KAFtB;AAGE,IAAA,IAAI,EAAE;AAHR,IADD,GAOC,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,mBADP;AAEE,IAAA,KAAK,EAAEnF,KAAK,CAACoC,MAAN,CAAagD,KAFtB;AAGE,IAAA,IAAI,EAAE;AAHR,IAVJ,CADF,EAkBE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLV,MAAAA,iBAAiB,EAAE,QADd;AAELC,MAAAA,QAAQ,EAAE,EAFL;AAGLF,MAAAA,IAAI,EAAE;AAHD;AADT,KAOG1E,IAPH,0CAOGA,IAAI,CAAE+E,WAPT,qBAOG,mBAAmB5B,IAPtB,CAlBF,CAlCF,CAxBF,CATF,CARF,CADF;AAwID,CAjKD;;AAmKA,IAAMmC,eAAe,GAAG,SAAlBA,eAAkB,QAAoB;AAAA,MAAjBpF,UAAiB,SAAjBA,UAAiB;;AAAA,mBACNpB,QAAQ,CAAC,KAAD,CADF;AAAA;AAAA,MACnCyG,UADmC;AAAA,MACvBC,aADuB;;AAAA,mBAEd1G,QAAQ,CAAC,EAAD,CAFM;AAAA;AAAA,MAEnC2G,MAFmC;AAAA,MAE3BC,SAF2B;;AAAA,oBAGxBzG,UAAU,CAACK,YAAD,CAHc;AAAA,MAGlCW,KAHkC,eAGlCA,KAHkC;;AAI1C,MAAMG,QAAQ,GAAGlB,WAAW,EAA5B;;AAJ0C,qBAKZC,WAAW,CAAC,UAACwG,KAAD;AAAA,WAAWA,KAAX;AAAA,GAAD,CALC;AAAA,MAKlCxF,IALkC,gBAKlCA,IALkC;AAAA,MAK5ByF,KAL4B,gBAK5BA,KAL4B;AAAA,MAKrB9B,IALqB,gBAKrBA,IALqB;;AAO1C/E,EAAAA,SAAS,CAAC,YAAM;AACd,aAAS8G,SAAT,GAAqB;AACnBzF,MAAAA,QAAQ,CAACR,kBAAkB,EAAnB,CAAR;AACAQ,MAAAA,QAAQ,CAACT,UAAU,EAAX,CAAR;AACD;;AACDkG,IAAAA,SAAS;AACV,GANQ,EAMN,EANM,CAAT;AAQA,MAAMC,SAAS,GAAG9G,WAAW,CAAC,YAAM;AAClCwG,IAAAA,aAAa,CAAC,IAAD,CAAb;AACApF,IAAAA,QAAQ,CAACR,kBAAkB,EAAnB,CAAR;AACA4F,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAJ4B,EAI1B,CAACD,UAAD,CAJ0B,CAA7B;;AAMA,MAAMQ,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAC1B,QAAMC,aAAa,GAAG,EAAtB;AACA,oBAAAJ,KAAK,CAACA,KAAN,kCAAaK,OAAb,CAAqB,UAAC/B,IAAD,EAAU;AAC7B,UAAIA,IAAI,CAACnD,GAAL,KAAa+C,IAAI,CAACI,IAAL,CAAUnD,GAA3B,EAAgC;AAC9B,YACEmD,IAAI,CAACvD,SAAL,CAAeG,QAAf,CAAwB2E,MAAM,CAACS,WAAP,EAAxB,MAAkD,IAAlD,IACAhC,IAAI,CAACtD,QAAL,CAAcE,QAAd,CAAuB2E,MAAM,CAACS,WAAP,EAAvB,CAFF,EAGE;AACAF,UAAAA,aAAa,CAACG,IAAd,CAAmBjC,IAAnB;AACD;AACF;AACF,KATD;AAUA,WAAO8B,aAAP;AACD,GAbD;;AAeA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEtB,MAAAA,IAAI,EAAE;AAAR;AAAb,KAuCGvE,IAAI,CAACiG,QAAL,GACCjG,IAAI,CAACkG,aAAL,CAAmB7E,MAAnB,GAA4B,CAA5B,GACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAErB,IAAI,CAACkG,aADb;AAEE,IAAA,UAAU,EAAE;AAAA,UAAGrG,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,IAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAEE,QAAA,IAAI,EAAE8D,IAFR;AAGE,QAAA,UAAU,EAAE5D,UAHd;AAIE,QAAA,KAAK,EAAED,KAJT;AAKE,QAAA,QAAQ,EAAEG;AALZ,QADU;AAAA,KAFd;AAWE,IAAA,YAAY,EAAE,sBAACJ,IAAD;AAAA,aAAUA,IAAV,oBAAUA,IAAI,CAAEe,GAAhB;AAAA,KAXhB;AAYE,IAAA,cAAc,EACZ,oBAAC,cAAD;AAAgB,MAAA,UAAU,EAAEwE,UAA5B;AAAwC,MAAA,SAAS,EAAEO;AAAnD;AAbJ,IADF,GAkBE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLpB,MAAAA,IAAI,EAAE,CADD;AAELlC,MAAAA,YAAY,EAAE,QAFT;AAGLC,MAAAA,cAAc,EAAE;AAHX;AADT,KAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE6D,MAAAA,SAAS,EAAE,QAAb;AAAuBxB,MAAAA,KAAK,EAAE7E,KAAK,CAACoC,MAAN,CAAagD;AAA3C;AAAb,2BAPF,EAUE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMjF,QAAQ,CAACR,kBAAkB,EAAnB,CAAd;AAAA;AAHX,IAVF,CAnBH,GAqCC,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACL8E,MAAAA,IAAI,EAAE,CADD;AAELlC,MAAAA,YAAY,EAAE,QAFT;AAGLC,MAAAA,cAAc,EAAE;AAHX;AADT,KAOE,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC;AAAxB,IAPF,CA5EJ,CADF;AAyFD,CA7HD;;AA+HA,eAAe6C,eAAf","sourcesContent":["import React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  View,\n  Text,\n  ActivityIndicator,\n  FlatList,\n  TouchableOpacity,\n  RefreshControl,\n  TextInput,\n} from \"react-native\";\nimport {\n  SearchBar,\n  Avatar,\n  ThemeContext,\n  Button,\n  Icon,\n} from \"react-native-elements\";\nimport _ from \"lodash\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport { fetchUsers } from \"../../actions/usersActions\";\nimport { fetchConversations } from \"../../actions/chatActions\";\nimport { apiConfig } from \"../../config\";\nimport { showOverlay } from \"../../actions/overlayAction\";\n\nconst SearchResultItem = ({ item, theme, navigation, chat, dispatch }) => {\n  const [showMessageForm, setShowMessageForm] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const fullName =\n    _.capitalize(item?.firstname) + \" \" + _.capitalize(item?.lastname);\n\n  return (\n    <TouchableOpacity\n      onPress={\n        chat.interlocutorsIds.includes(item?._id)\n          ? () =>\n              navigation.navigate(\"Room\", {\n                title: fullName,\n                conversation: chat.convIdsWithPartsIds\n                  .filter(\n                    (element) =>\n                      element.participants.includes(item?._id) === true\n                  )\n                  .filter((conv) => conv.participants.length === 2)[0],\n              })\n          : () =>\n              dispatch(\n                showOverlay({\n                  form: {\n                    action: sendMessage,\n                    inputName: \"text\",\n                    actionParams: { recipients: [item?._id] },\n                    message: \"Demarrer une conversation avec \" + fullName,\n                  },\n                })\n              )\n      }\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          paddingVertical: 4,\n          paddingHorizontal: 8,\n          borderBottomColor: theme.colors.grey5,\n          borderBottomWidth: 1,\n        }}\n      >\n        <View\n          style={{\n            alignContent: \"center\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginRight: 12,\n          }}\n        >\n          {item?.avatar ? (\n            <Avatar\n              source={{\n                uri: `https://siee-gate.herokuapp.com/api/files/avatar/${item?.avatar?.filename}`,\n              }}\n              size=\"small\"\n            />\n          ) : (\n            <Avatar\n              size=\"small\"\n              title={item?.firstname[0].concat(item?.lastname[0]).toUpperCase()}\n            />\n          )}\n        </View>\n        {!showMessageForm ? (\n          <Text style={{ paddingLeft: 12 }}>{fullName}</Text>\n        ) : (\n          <View\n            style={{\n              flexDirection: \"row\",\n              backgroundColor: \"white\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              alignContent: \"center\",\n              marginTop: 8,\n            }}\n          >\n            <TextInput\n              value={newMessage}\n              multiline\n              placeholder=\"Ecrivez ici.\"\n              placeholderTextColor=\"grey\"\n              onChangeText={(text) => setNewMessage(text)}\n              style={{\n                backgroundColor: theme.colors.grey5,\n                borderColor: theme.colors.grey4,\n                borderWidth: 1,\n                borderRadius: 5,\n                paddingVertical: 2,\n                paddingHorizontal: 4,\n                maxHeight: 80,\n              }}\n            />\n            <Button\n              containerStyle={{ height: 30 }}\n              icon={\n                <Icon\n                  name=\"send\"\n                  size={20}\n                  color={newMessage ? theme.colors.primary : theme.colors.grey2}\n                />\n              }\n              disabled={!newMessage}\n              type=\"clear\"\n              onPress={() => {\n                onSendMessage(newMessage, item?._id);\n                setNewMessage(\"\");\n                setShowMessageForm(false);\n              }}\n            />\n          </View>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst Item = ({ item, navigation, auth, theme, dispatch }) => {\n  const listParticipants = () => {\n    _.remove(\n      item?.participants,\n      (participant) => participant._id === auth.user._id\n    );\n\n    if (item?.participants?.length > 1) {\n      const participantsList = item?.participants?.map((participant) =>\n        _.capitalize(participant.firstname)\n      );\n      return participantsList.toString().replace(\",\", \", \");\n    } else if (item?.participants?.length === 1) {\n      return _.capitalize(item?.participants[0]?.firstname).concat(\n        \" \",\n        _.capitalize(item?.participants[0]?.lastname)\n      );\n    } else {\n      return \"Compte supprim√©\";\n    }\n  };\n\n  const title = listParticipants();\n  const participants = listParticipants(item);\n\n  return (\n    <TouchableOpacity\n      onPress={() =>\n        navigation.navigate(\"Room\", {\n          title,\n          conversation_id: item._id,\n        })\n      }\n    >\n      <View\n        style={{\n          paddingHorizontal: 8,\n          paddingVertical: 8,\n          borderBottomColor: \"white\",\n          borderBottomWidth: 3,\n          backgroundColor: \"white\",\n        }}\n      >\n        <View style={{ flexDirection: \"row\" }}>\n          <View\n            style={{\n              alignContent: \"center\",\n              justifyContent: \"center\",\n              paddingRight: 8,\n            }}\n          >\n            {item?.participants[0]?.avatar ? (\n              <Avatar\n                source={{\n                  uri: `${apiConfig.baseUrl}/files/avatar/${item?.participants[0]?.avatar?.filename}`,\n                }}\n                size=\"medium\"\n              />\n            ) : (\n              <Avatar\n                size=\"medium\"\n                title={item?.participants[0]?.firstname[0]\n                  .concat(item?.participants[0]?.lastname[0])\n                  .toUpperCase()}\n              />\n            )}\n          </View>\n          <View\n            style={{\n              flex: 1,\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <Text\n                style={{\n                  textAlignVertical: \"bottom\",\n                  fontSize: 16,\n                  fontWeight: \"bold\",\n                }}\n              >\n                {participants}\n              </Text>\n              <Text\n                color=\"grey\"\n                style={{\n                  color: \"grey\",\n                  fontSize: 10,\n                  textAlignVertical: \"bottom\",\n                }}\n              >\n                {_.capitalize(\n                  moment(item?.lastMessage?.sentAt).locale(\"fr\").fromNow()\n                )}\n              </Text>\n            </View>\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <View\n                style={{ alignContent: \"center\", justifyContent: \"center\" }}\n              >\n                {item?.lastMessage?.sender === auth.user._id ? (\n                  <Icon\n                    name=\"arrow-top-right\"\n                    color={theme.colors.grey1}\n                    size={14}\n                  />\n                ) : (\n                  <Icon\n                    name=\"arrow-bottom-left\"\n                    color={theme.colors.grey3}\n                    size={14}\n                  />\n                )}\n              </View>\n              <Text\n                style={{\n                  textAlignVertical: \"center\",\n                  fontSize: 14,\n                  flex: 1,\n                }}\n              >\n                {item?.lastMessage?.text}\n              </Text>\n              {/* <View\n                style={{\n                  flexDirection: \"row\",\n                  alignContent: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Icon\n                  name=\"dots-horizontal\"\n                  style={{ alignSelf: \"flex-end\" }}\n                  onPress={() =>\n                    dispatch(\n                      showOverlay({\n                        menu: {\n                          buttons: [\n                            {\n                              title: \"Supprimer la conversation\",\n                              action: deleteConversation,\n                              actionParams: [item?._id],\n                            },\n                          ],\n                        },\n                      })\n                    )\n                  }\n                />\n              </View> */}\n            </View>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst ChatLobbyScreen = ({ navigation }) => {\n  const [refreshing, setRefreshing] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  const { chat, users, auth } = useSelector((state) => state);\n\n  useEffect(() => {\n    function fetchData() {\n      dispatch(fetchConversations());\n      dispatch(fetchUsers());\n    }\n    fetchData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    dispatch(fetchConversations());\n    setRefreshing(false);\n  }, [refreshing]);\n\n  const searchProcess = () => {\n    const searchResults = [];\n    users.users?.forEach((user) => {\n      if (user._id !== auth.user._id) {\n        if (\n          user.firstname.includes(search.toLowerCase()) === true ||\n          user.lastname.includes(search.toLowerCase())\n        ) {\n          searchResults.push(user);\n        }\n      }\n    });\n    return searchResults;\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      {/* <View style={{ backgroundColor: \"white\", paddingVertical: 4 }}>\n        <SearchBar\n          placeholder=\"Chercher un alumni ici...\"\n          onChangeText={setSearch}\n          value={search}\n          platform=\"android\"\n          containerStyle={{\n            paddingTop: 0,\n            height: 40,\n          }}\n        />\n        {users.isLoaded && (\n          <FlatList\n            data={search && searchProcess()}\n            renderItem={({ item }) => (\n              <SearchResultItem\n                item={item}\n                theme={theme}\n                chat={chat}\n                navigation={navigation}\n                dispatch={dispatch}\n              />\n            )}\n            keyExtractor={(item) => item?._id}\n          />\n        )}\n        {!users.isLoaded && (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <ActivityIndicator size=\"small\" />\n          </View>\n        )}\n      </View> */}\n      {chat.isLoaded ? (\n        chat.conversations.length > 0 ? (\n          <FlatList\n            data={chat.conversations}\n            renderItem={({ item }) => (\n              <Item\n                item={item}\n                auth={auth}\n                navigation={navigation}\n                theme={theme}\n                dispatch={dispatch}\n              />\n            )}\n            keyExtractor={(item) => item?._id}\n            refreshControl={\n              <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n            }\n          />\n        ) : (\n          <View\n            style={{\n              flex: 1,\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Text style={{ textAlign: \"center\", color: theme.colors.grey3 }}>\n              Aucune conversation\n            </Text>\n            <Button\n              title=\"Rafraichir\"\n              type=\"clear\"\n              onPress={() => dispatch(fetchConversations())}\n            />\n          </View>\n        )\n      ) : (\n        <View\n          style={{\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default ChatLobbyScreen;\n"]},"metadata":{},"sourceType":"module"}