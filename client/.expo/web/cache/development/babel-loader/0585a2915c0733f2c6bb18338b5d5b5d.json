{"ast":null,"code":"import React, { useContext } from \"react\";\nimport { Icon, ThemeContext } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport { logOut as _logOut } from \"../actions/authActions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Constants from \"expo-constants\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { navigate } from \"../RootNavigation\";\n\nvar AppNavbar = function AppNavbar(_ref) {\n  var navigation = _ref.navigation,\n      leftButton = _ref.leftButton,\n      title = _ref.title,\n      logOut = _ref.logOut,\n      noRightButton = _ref.noRightButton;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var LeftButtonComponent = function LeftButtonComponent() {\n    switch (leftButton) {\n      case \"profile\":\n        return React.createElement(Icon, {\n          name: \"menu\",\n          onPress: function onPress() {\n            return navigation.openDrawer();\n          },\n          color: \"white\"\n        });\n\n      case \"back\":\n        return React.createElement(Icon, {\n          name: \"arrow-left\",\n          color: \"white\",\n          onPress: function onPress() {\n            return navigate(\"Main\");\n          }\n        });\n\n      default:\n        return React.createElement(Icon, {\n          name: \"menu\",\n          onPress: function onPress() {\n            return navigation.openDrawer();\n          },\n          color: \"white\"\n        });\n    }\n  };\n\n  var CenterComponent = function CenterComponent() {\n    return React.createElement(View, null, React.createElement(Text, {\n      style: {\n        color: \"white\",\n        fontSize: 20,\n        textAlign: \"center\"\n      }\n    }, title));\n  };\n\n  var RightComponent = function RightComponent() {\n    if (noRightButton) {\n      return React.createElement(View, null);\n    } else {\n      return React.createElement(View, null, React.createElement(Icon, {\n        name: \"logout\",\n        color: \"white\",\n        onPress: function onPress() {\n          return logOut();\n        }\n      }));\n    }\n  };\n\n  return React.createElement(LinearGradient, {\n    colors: [theme.colors.primary, theme.colors.secondary],\n    start: [0.25, 1],\n    end: [0.25, 0],\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      paddingTop: Platform.OS === \"web\" ? 10 : Constants.statusBarHeight,\n      paddingHorizontal: 10,\n      paddingBottom: 8\n    }\n  }, React.createElement(LeftButtonComponent, null), React.createElement(CenterComponent, null), React.createElement(RightComponent, null));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    logOut: function logOut() {\n      return dispatch(_logOut());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavbar);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/AppNavbar.js"],"names":["React","useContext","Icon","ThemeContext","connect","logOut","Constants","LinearGradient","navigate","AppNavbar","navigation","leftButton","title","noRightButton","theme","LeftButtonComponent","openDrawer","CenterComponent","color","fontSize","textAlign","RightComponent","colors","primary","secondary","flexDirection","justifyContent","alignItems","paddingTop","Platform","OS","statusBarHeight","paddingHorizontal","paddingBottom","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { Icon, ThemeContext } from \"react-native-elements\";\nimport { connect } from \"react-redux\";\nimport { logOut } from \"../actions/authActions\";\nimport { View, Text, Platform } from \"react-native\";\nimport Constants from \"expo-constants\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { navigate } from \"../RootNavigation\";\n\nconst AppNavbar = ({\n  navigation,\n  leftButton,\n  title,\n  logOut,\n  noRightButton\n}) => {\n  const { theme } = useContext(ThemeContext);\n\n  const LeftButtonComponent = () => {\n    switch (leftButton) {\n      case \"profile\":\n        return (\n          <Icon\n            name=\"menu\"\n            onPress={() => navigation.openDrawer()}\n            color=\"white\"\n          />\n        );\n      case \"back\":\n        return (\n          <Icon\n            name=\"arrow-left\"\n            color=\"white\"\n            onPress={() => navigate(\"Main\")}\n          />\n        );\n      default:\n        return (\n          <Icon\n            name=\"menu\"\n            onPress={() => navigation.openDrawer()}\n            color=\"white\"\n          />\n        );\n    }\n  };\n\n  const CenterComponent = () => {\n    return (\n      <View>\n        <Text\n          style={{\n            color: \"white\",\n            fontSize: 20,\n            textAlign: \"center\"\n          }}\n        >\n          {title}\n        </Text>\n      </View>\n    );\n  };\n\n  const RightComponent = () => {\n    if (noRightButton) {\n      return <View></View>;\n    } else {\n      return (\n        <View>\n          <Icon name=\"logout\" color=\"white\" onPress={() => logOut()} />\n        </View>\n      );\n    }\n  };\n\n  return (\n    <LinearGradient\n      colors={[theme.colors.primary, theme.colors.secondary]}\n      start={[0.25, 1]}\n      end={[0.25, 0]}\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        paddingTop: Platform.OS === \"web\" ? 10 : Constants.statusBarHeight,\n        paddingHorizontal: 10,\n        paddingBottom: 8\n      }}\n    >\n      <LeftButtonComponent />\n      <CenterComponent />\n      <RightComponent />\n    </LinearGradient>\n  );\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logOut: () => dispatch(logOut())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavbar);\n"]},"metadata":{},"sourceType":"module"}