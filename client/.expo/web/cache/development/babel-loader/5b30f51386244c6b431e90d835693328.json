{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  users: [],\n  isFetching: false,\n  lastUpdatedAt: null,\n  isLoaded: false\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"REQUEST_USERS\":\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case \"REQUEST_USERS:SUCCESS\":\n      return _objectSpread({}, action.data, {\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true\n      });\n\n    case \"REQUEST_USERS:ERROR\":\n      return _objectSpread({}, action.data, {\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true\n      });\n\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/store/reducers/usersReducer.js"],"names":["initialState","users","isFetching","lastUpdatedAt","isLoaded","state","action","type","data","receivedAt"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,aAAa,EAAE,IAHI;AAInBC,EAAAA,QAAQ,EAAE;AAJS,CAArB;AAOA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,+BACKF,KADL;AAEEH,QAAAA,UAAU,EAAE;AAFd;;AAIF,SAAK,uBAAL;AACE,+BACKI,MAAM,CAACE,IADZ;AAEEN,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,aAAa,EAAEG,MAAM,CAACG,UAHxB;AAIEL,QAAAA,QAAQ,EAAE;AAJZ;;AAMF,SAAK,qBAAL;AACE,+BACKE,MAAM,CAACE,IADZ;AAEEN,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,aAAa,EAAEG,MAAM,CAACG,UAHxB;AAIEL,QAAAA,QAAQ,EAAE;AAJZ;;AAMF,SAAK,yBAAL;AACE,aAAOJ,YAAP;;AACF;AACE,aAAOK,KAAP;AAvBJ;AAyBD","sourcesContent":["const initialState = {\n  users: [],\n  isFetching: false,\n  lastUpdatedAt: null,\n  isLoaded: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case \"REQUEST_USERS\":\n      return {\n        ...state,\n        isFetching: true\n      };\n    case \"REQUEST_USERS:SUCCESS\":\n      return {\n        ...action.data,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true\n      };\n    case \"REQUEST_USERS:ERROR\":\n      return {\n        ...action.data,\n        isFetching: false,\n        lastUpdatedAt: action.receivedAt,\n        isLoaded: true\n      };\n    case \"REQUEST_LOG_OUT:SUCCESS\":\n      return initialState;\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}