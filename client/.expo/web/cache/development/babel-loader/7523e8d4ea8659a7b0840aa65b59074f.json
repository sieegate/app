{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nvar _jsxFileName = \"/home/gaetan/Documents/GATE/app/client/src/components/Jobs/JobsPostScreen.js\";\nimport React, { useState, useContext } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Input, Button, ThemeContext } from \"react-native-elements\";\nimport AppNavbar from \"../AppNavbar\";\nimport { createJob } from \"../../actions/jobsActions\";\n\nvar PostScreen = function PostScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      uploading = _useState2[0],\n      setUploading = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errors = _useState4[0],\n      setErrors = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      employmentType = _useState6[0],\n      setEmploymentType = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      asap = _useState8[0],\n      setAsap = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      organisation = _useState10[0],\n      setOrganisation = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      city = _useState12[0],\n      setCity = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      jobTitle = _useState14[0],\n      setJobTitle = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      jobDesc = _useState16[0],\n      setJobDesc = _useState16[1];\n\n  var _useState17 = useState(),\n      _useState18 = _slicedToArray(_useState17, 2),\n      salary = _useState18[0],\n      setSalary = _useState18[1];\n\n  var _useState19 = useState(),\n      _useState20 = _slicedToArray(_useState19, 2),\n      minExp = _useState20[0],\n      setMinExp = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      contact = _useState22[0],\n      setContact = _useState22[1];\n\n  var filled = !city || !organisation || !employmentType || !jobDesc || !jobTitle || !contact ? false : true;\n\n  var uploadJobOffer = function uploadJobOffer() {\n    setUploading(true);\n    var jobOffer = {\n      employmentType: employmentType,\n      asap: asap,\n      organisation: organisation,\n      city: city,\n      salary: salary,\n      jobDesc: jobDesc,\n      jobTitle: jobTitle,\n      minExp: minExp,\n      contact: contact\n    };\n    dispatch(createJob(jobOffer));\n    setUploading(false);\n    setAsap(false);\n    setCity();\n    setSalary();\n    setContact();\n    setErrors({});\n    setEmploymentType();\n    setOrganisation();\n    setJobDesc();\n    setJobTitle();\n    setUploading(false);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      paddingHorizontal: 12,\n      paddingTop: 20,\n      paddingBottom: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    label: \"Type de contrat*\",\n    placeholder: \"CDI, CDD, Apprentissage...\",\n    value: employmentType,\n    onChangeText: function onChangeText(value) {\n      return setEmploymentType(value);\n    },\n    errorMessage: errors.employmentType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    label: \"Organisation*\",\n    placeholder: \"Deloitte, Engie, EY...\",\n    value: organisation,\n    onChangeText: function onChangeText(value) {\n      return setOrganisation(value);\n    },\n    errorMessage: errors.organisation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Paris, Shanghai, Lyon...\",\n    label: \"Ville*\",\n    value: city,\n    onChangeText: function onChangeText(value) {\n      return setCity(value);\n    },\n    errorMessage: errors.city,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Auditeur des SI, Pentester junior...\",\n    label: \"Intitul\\xE9 du poste*\",\n    value: jobTitle,\n    onChangeText: function onChangeText(value) {\n      return setJobTitle(value);\n    },\n    errorMessage: errors.jobTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    label: \"Description du poste*\",\n    multiline: true,\n    inputStyle: {\n      height: 200,\n      textAlignVertical: \"top\"\n    },\n    placeholder: \"Les missions, les comp\\xE9tences requises, l'employeur...\",\n    value: jobDesc,\n    onChangeText: function onChangeText(value) {\n      return setJobDesc(value);\n    },\n    errorMessage: errors.jobDesc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    label: \"Exp\\xE9rience\",\n    placeholder: \"Ann\\xE9es pass\\xE9es dans un poste similaire\",\n    value: minExp,\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(value) {\n      return setMinExp(value);\n    },\n    errorMessage: errors.minExp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    label: \"R\\xE9mun\\xE9ration\",\n    placeholder: \"En \\u20AC\",\n    value: salary,\n    onChangeText: function onChangeText(value) {\n      return setSalary(value);\n    },\n    showSoftInputOnFocus: false,\n    errorMessage: errors.salary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: {\n      marginBottom: 12,\n      flexDirection: \"row\",\n      display: \"flex\",\n      height: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: theme.colors.grey3,\n      fontWeight: \"bold\",\n      paddingLeft: 10,\n      fontSize: 16,\n      flex: 1,\n      textAlignVertical: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Poste \\xE0 pourvoir d\\xE8s que possible\"), React.createElement(Switch, {\n    value: asap,\n    onValueChange: function onValueChange(value) {\n      return setAsap(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })), React.createElement(Input, {\n    label: \"Contact*\",\n    placeholder: \"Email\",\n    value: contact,\n    onChangeText: function onChangeText(value) {\n      return setContact(value);\n    },\n    errorMessage: errors.contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: filled ? \"Poster l'offre d'emploi\" : \"Veuillez remplir tous les champs obligatoires\",\n    loading: uploading,\n    disabled: !filled,\n    buttonStyle: {\n      height: 50,\n      marginBottom: 12\n    },\n    onPress: function onPress() {\n      return uploadJobOffer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default PostScreen;","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/Jobs/JobsPostScreen.js"],"names":["React","useState","useContext","connect","useDispatch","Input","Button","ThemeContext","AppNavbar","createJob","PostScreen","theme","dispatch","uploading","setUploading","errors","setErrors","employmentType","setEmploymentType","asap","setAsap","organisation","setOrganisation","city","setCity","jobTitle","setJobTitle","jobDesc","setJobDesc","salary","setSalary","minExp","setMinExp","contact","setContact","filled","uploadJobOffer","jobOffer","flex","backgroundColor","paddingHorizontal","paddingTop","paddingBottom","value","height","textAlignVertical","marginBottom","flexDirection","display","color","colors","grey3","fontWeight","paddingLeft","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;;;;;AAEA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,YAAxB,QAA4C,uBAA5C;AACA,OAAOC,SAAP;AACA,SAASC,SAAT;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAQ;AAAA;;AAAA,oBACPR,UAAU,CAACK,YAAD,CADH;AAAA,MACjBI,KADiB,eACjBA,KADiB;;AAEzB,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AAFyB,kBAGSH,QAAQ,CAAC,KAAD,CAHjB;AAAA;AAAA,MAGlBY,SAHkB;AAAA,MAGPC,YAHO;;AAAA,mBAKGb,QAAQ,CAAC,EAAD,CALX;AAAA;AAAA,MAKlBc,MALkB;AAAA,MAKVC,SALU;;AAAA,mBAQmBf,QAAQ,CAAC,EAAD,CAR3B;AAAA;AAAA,MAQlBgB,cARkB;AAAA,MAQFC,iBARE;;AAAA,mBASDjB,QAAQ,CAAC,KAAD,CATP;AAAA;AAAA,MASlBkB,IATkB;AAAA,MASZC,OATY;;AAAA,mBAUenB,QAAQ,CAAC,EAAD,CAVvB;AAAA;AAAA,MAUlBoB,YAVkB;AAAA,MAUJC,eAVI;;AAAA,oBAWDrB,QAAQ,CAAC,EAAD,CAXP;AAAA;AAAA,MAWlBsB,IAXkB;AAAA,MAWZC,OAXY;;AAAA,oBAYOvB,QAAQ,CAAC,EAAD,CAZf;AAAA;AAAA,MAYlBwB,QAZkB;AAAA,MAYRC,WAZQ;;AAAA,oBAaKzB,QAAQ,CAAC,EAAD,CAbb;AAAA;AAAA,MAalB0B,OAbkB;AAAA,MAaTC,UAbS;;AAAA,oBAcG3B,QAAQ,EAdX;AAAA;AAAA,MAclB4B,MAdkB;AAAA,MAcVC,SAdU;;AAAA,oBAeG7B,QAAQ,EAfX;AAAA;AAAA,MAelB8B,MAfkB;AAAA,MAeVC,SAfU;;AAAA,oBAgBK/B,QAAQ,CAAC,EAAD,CAhBb;AAAA;AAAA,MAgBlBgC,OAhBkB;AAAA,MAgBTC,UAhBS;;AAkBzB,MAAMC,MAAM,GACV,CAACZ,IAAD,IACA,CAACF,YADD,IAEA,CAACJ,cAFD,IAGA,CAACU,OAHD,IAIA,CAACF,QAJD,IAKA,CAACQ,OALD,GAMI,KANJ,GAOI,IARN;;AAUA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BtB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,QAAMuB,QAAQ,GAAG;AACfpB,MAAAA,cAAc,EAAdA,cADe;AAEfE,MAAAA,IAAI,EAAJA,IAFe;AAGfE,MAAAA,YAAY,EAAZA,YAHe;AAIfE,MAAAA,IAAI,EAAJA,IAJe;AAKfM,MAAAA,MAAM,EAANA,MALe;AAMfF,MAAAA,OAAO,EAAPA,OANe;AAOfF,MAAAA,QAAQ,EAARA,QAPe;AAQfM,MAAAA,MAAM,EAANA,MARe;AASfE,MAAAA,OAAO,EAAPA;AATe,KAAjB;AAYArB,IAAAA,QAAQ,CAACH,SAAS,CAAC4B,QAAD,CAAV,CAAR;AACAvB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAM,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAI,IAAAA,OAAO;AACPM,IAAAA,SAAS;AACTI,IAAAA,UAAU;AACVlB,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,iBAAiB;AACjBI,IAAAA,eAAe;AACfM,IAAAA,UAAU;AACVF,IAAAA,WAAW;AACXZ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GA5BD;;AA8BA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEwB,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEA,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,eAAe,EAAE;AAA5B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,iBAAiB,EAAE,EADd;AAELC,MAAAA,UAAU,EAAE,EAFP;AAGLC,MAAAA,aAAa,EAAE;AAHV,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,kBADR;AAEE,IAAA,WAAW,EAAC,4BAFd;AAGE,IAAA,KAAK,EAAEzB,cAHT;AAIE,IAAA,YAAY,EAAE,sBAAC0B,KAAD;AAAA,aAAWzB,iBAAiB,CAACyB,KAAD,CAA5B;AAAA,KAJhB;AAKE,IAAA,YAAY,EAAE5B,MAAM,CAACE,cALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAcE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,WAAW,EAAC,wBAFd;AAGE,IAAA,KAAK,EAAEI,YAHT;AAIE,IAAA,YAAY,EAAE,sBAACsB,KAAD;AAAA,aAAWrB,eAAe,CAACqB,KAAD,CAA1B;AAAA,KAJhB;AAKE,IAAA,YAAY,EAAE5B,MAAM,CAACM,YALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAqBE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAC,0BADd;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,KAAK,EAAEE,IAHT;AAIE,IAAA,YAAY,EAAE,sBAACoB,KAAD;AAAA,aAAWnB,OAAO,CAACmB,KAAD,CAAlB;AAAA,KAJhB;AAKE,IAAA,YAAY,EAAE5B,MAAM,CAACQ,IALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,EA4BE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAC,sCADd;AAEE,IAAA,KAAK,EAAC,uBAFR;AAGE,IAAA,KAAK,EAAEE,QAHT;AAIE,IAAA,YAAY,EAAE,sBAACkB,KAAD;AAAA,aAAWjB,WAAW,CAACiB,KAAD,CAAtB;AAAA,KAJhB;AAKE,IAAA,YAAY,EAAE5B,MAAM,CAACU,QALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BF,EAmCE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,uBADR;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,UAAU,EAAE;AAAEmB,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,iBAAiB,EAAE;AAAlC,KAHd;AAIE,IAAA,WAAW,EAAC,2DAJd;AAKE,IAAA,KAAK,EAAElB,OALT;AAME,IAAA,YAAY,EAAE,sBAACgB,KAAD;AAAA,aAAWf,UAAU,CAACe,KAAD,CAArB;AAAA,KANhB;AAOE,IAAA,YAAY,EAAE5B,MAAM,CAACY,OAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCF,EA4CE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,WAAW,EAAC,8CAFd;AAGE,IAAA,KAAK,EAAEI,MAHT;AAIE,IAAA,YAAY,EAAC,SAJf;AAKE,IAAA,YAAY,EAAE,sBAACY,KAAD;AAAA,aAAWX,SAAS,CAACW,KAAD,CAApB;AAAA,KALhB;AAME,IAAA,YAAY,EAAE5B,MAAM,CAACgB,MANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CF,EAoDE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,oBADR;AAEE,IAAA,WAAW,EAAC,WAFd;AAGE,IAAA,KAAK,EAAEF,MAHT;AAIE,IAAA,YAAY,EAAE,sBAACc,KAAD;AAAA,aAAWb,SAAS,CAACa,KAAD,CAApB;AAAA,KAJhB;AAKE,IAAA,oBAAoB,EAAE,KALxB;AAME,IAAA,YAAY,EAAE5B,MAAM,CAACc,MANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApDF,EA4DE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLiB,MAAAA,YAAY,EAAE,EADT;AAELC,MAAAA,aAAa,EAAE,KAFV;AAGLC,MAAAA,OAAO,EAAE,MAHJ;AAILJ,MAAAA,MAAM,EAAE;AAJH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,KAAK,EAAEtC,KAAK,CAACuC,MAAN,CAAaC,KADf;AAELC,MAAAA,UAAU,EAAE,MAFP;AAGLC,MAAAA,WAAW,EAAE,EAHR;AAILC,MAAAA,QAAQ,EAAE,EAJL;AAKLhB,MAAAA,IAAI,EAAE,CALD;AAMLO,MAAAA,iBAAiB,EAAE;AANd,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CARF,EAoBE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE1B,IAAf;AAAqB,IAAA,aAAa,EAAE,uBAACwB,KAAD;AAAA,aAAWvB,OAAO,CAACuB,KAAD,CAAlB;AAAA,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CA5DF,EAkFE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,KAAK,EAAEV,OAHT;AAIE,IAAA,YAAY,EAAE,sBAACU,KAAD;AAAA,aAAWT,UAAU,CAACS,KAAD,CAArB;AAAA,KAJhB;AAKE,IAAA,YAAY,EAAE5B,MAAM,CAACkB,OALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlFF,EAyFE,oBAAC,MAAD;AACE,IAAA,KAAK,EACHE,MAAM,GACF,yBADE,GAEF,+CAJR;AAME,IAAA,OAAO,EAAEtB,SANX;AAOE,IAAA,QAAQ,EAAE,CAACsB,MAPb;AAQE,IAAA,WAAW,EAAE;AAAES,MAAAA,MAAM,EAAE,EAAV;AAAcE,MAAAA,YAAY,EAAE;AAA5B,KARf;AASE,IAAA,OAAO,EAAE;AAAA,aAAMV,cAAc,EAApB;AAAA,KATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzFF,EAoGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEQ,MAAAA,MAAM,EAAE;AAAV,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApGF,CADF,CADF,CADF;AA4GD,CAtKD;;AAwKA,eAAelC,UAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { View, Switch, Text, ScrollView } from \"react-native\";\nimport { Input, Button, ThemeContext } from \"react-native-elements\";\nimport AppNavbar from \"../AppNavbar\";\nimport { createJob } from \"../../actions/jobsActions\";\n\nconst PostScreen = ({}) => {\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  const [uploading, setUploading] = useState(false);\n\n  const [errors, setErrors] = useState({});\n\n  // Job\n  const [employmentType, setEmploymentType] = useState(\"\");\n  const [asap, setAsap] = useState(false);\n  const [organisation, setOrganisation] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [jobDesc, setJobDesc] = useState(\"\");\n  const [salary, setSalary] = useState();\n  const [minExp, setMinExp] = useState();\n  const [contact, setContact] = useState(\"\");\n\n  const filled =\n    !city ||\n    !organisation ||\n    !employmentType ||\n    !jobDesc ||\n    !jobTitle ||\n    !contact\n      ? false\n      : true;\n\n  const uploadJobOffer = () => {\n    setUploading(true);\n\n    const jobOffer = {\n      employmentType,\n      asap,\n      organisation,\n      city,\n      salary,\n      jobDesc,\n      jobTitle,\n      minExp,\n      contact,\n    };\n\n    dispatch(createJob(jobOffer));\n    setUploading(false);\n\n    setAsap(false);\n    setCity();\n    setSalary();\n    setContact();\n    setErrors({});\n    setEmploymentType();\n    setOrganisation();\n    setJobDesc();\n    setJobTitle();\n    setUploading(false);\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flex: 1, backgroundColor: \"white\" }}>\n        <ScrollView\n          style={{\n            paddingHorizontal: 12,\n            paddingTop: 20,\n            paddingBottom: 100,\n          }}\n        >\n          <Input\n            label=\"Type de contrat*\"\n            placeholder=\"CDI, CDD, Apprentissage...\"\n            value={employmentType}\n            onChangeText={(value) => setEmploymentType(value)}\n            errorMessage={errors.employmentType}\n          />\n          <Input\n            label=\"Organisation*\"\n            placeholder=\"Deloitte, Engie, EY...\"\n            value={organisation}\n            onChangeText={(value) => setOrganisation(value)}\n            errorMessage={errors.organisation}\n          />\n          <Input\n            placeholder=\"Paris, Shanghai, Lyon...\"\n            label=\"Ville*\"\n            value={city}\n            onChangeText={(value) => setCity(value)}\n            errorMessage={errors.city}\n          />\n          <Input\n            placeholder=\"Auditeur des SI, Pentester junior...\"\n            label=\"Intitulé du poste*\"\n            value={jobTitle}\n            onChangeText={(value) => setJobTitle(value)}\n            errorMessage={errors.jobTitle}\n          />\n          <Input\n            label=\"Description du poste*\"\n            multiline\n            inputStyle={{ height: 200, textAlignVertical: \"top\" }}\n            placeholder=\"Les missions, les compétences requises, l'employeur...\"\n            value={jobDesc}\n            onChangeText={(value) => setJobDesc(value)}\n            errorMessage={errors.jobDesc}\n          />\n          <Input\n            label=\"Expérience\"\n            placeholder=\"Années passées dans un poste similaire\"\n            value={minExp}\n            keyboardType=\"numeric\"\n            onChangeText={(value) => setMinExp(value)}\n            errorMessage={errors.minExp}\n          />\n          <Input\n            label=\"Rémunération\"\n            placeholder=\"En €\"\n            value={salary}\n            onChangeText={(value) => setSalary(value)}\n            showSoftInputOnFocus={false}\n            errorMessage={errors.salary}\n          />\n          <View\n            style={{\n              marginBottom: 12,\n              flexDirection: \"row\",\n              display: \"flex\",\n              height: 40,\n            }}\n          >\n            <Text\n              style={{\n                color: theme.colors.grey3,\n                fontWeight: \"bold\",\n                paddingLeft: 10,\n                fontSize: 16,\n                flex: 1,\n                textAlignVertical: \"center\",\n              }}\n            >\n              Poste à pourvoir dès que possible\n            </Text>\n            <Switch value={asap} onValueChange={(value) => setAsap(value)} />\n          </View>\n          <Input\n            label=\"Contact*\"\n            placeholder=\"Email\"\n            value={contact}\n            onChangeText={(value) => setContact(value)}\n            errorMessage={errors.contact}\n          />\n          <Button\n            title={\n              filled\n                ? \"Poster l'offre d'emploi\"\n                : \"Veuillez remplir tous les champs obligatoires\"\n            }\n            loading={uploading}\n            disabled={!filled}\n            buttonStyle={{ height: 50, marginBottom: 12 }}\n            onPress={() => uploadJobOffer()}\n          />\n          <View style={{ height: 20 }}></View>\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default PostScreen;\n"]},"metadata":{},"sourceType":"module"}