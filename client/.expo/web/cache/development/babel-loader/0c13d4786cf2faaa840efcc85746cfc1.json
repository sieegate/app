{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input, Button, Icon } from \"react-native-elements\";\nimport { signUp as _signUp } from \"../../actions/authActions\";\n\nvar SignUpScreen = function SignUpScreen(_ref) {\n  var signUp = _ref.signUp,\n      auth = _ref.auth;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstname = _useState2[0],\n      setFirstname = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastname = _useState4[0],\n      setLastname = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      confirmation = _useState10[0],\n      setConfirmation = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      code = _useState12[0],\n      setCode = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      errors = _useState14[0],\n      setErrors = _useState14[1];\n\n  var handleSignUp = function handleSignUp() {\n    return _regeneratorRuntime.async(function handleSignUp$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (firstname) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setErrors({\n              firstname: \"Prénom manquant.\"\n            }));\n\n          case 4:\n            if (lastname) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setErrors({\n              lastname: \"Nom manquant.\"\n            }));\n\n          case 8:\n            if (email) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setErrors({\n              mail: \"Mél manquant.\"\n            }));\n\n          case 12:\n            if (!(password.length < 8 === true)) {\n              _context.next = 16;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setErrors({\n              password: \"Mot de passe manquant.\"\n            }));\n\n          case 16:\n            if (!(password !== confirmation)) {\n              _context.next = 18;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setErrors({\n              confirmation: \"Veuillez retaper la confirmation de votre mot de passe.\"\n            }));\n\n          case 18:\n            setErrors({});\n            signUp({\n              email: email,\n              password: password,\n              firstname: firstname,\n              lastname: lastname,\n              code: code\n            });\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingHorizontal: 12\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Pr\\xE9nom\",\n    value: firstname,\n    onChangeText: function onChangeText(value) {\n      return setFirstname(value);\n    },\n    label: \"Pr\\xE9nom\",\n    errorMessage: errors.firstname\n  }), React.createElement(Input, {\n    placeholder: \"Nom\",\n    value: lastname,\n    onChangeText: function onChangeText(value) {\n      return setLastname(value);\n    },\n    label: \"Nom\",\n    errorMessage: errors.lastname\n  }), React.createElement(Input, {\n    placeholder: \"Email\",\n    leftIcon: React.createElement(Icon, {\n      name: \"email\",\n      type: \"material-community\"\n    }),\n    value: email,\n    onChangeText: function onChangeText(value) {\n      return setEmail(value);\n    },\n    label: \"Email\",\n    errorMessage: errors.email\n  }), React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\"\n    }),\n    label: \"Mot de passe\",\n    secureTextEntry: true,\n    value: password,\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    errorMessage: errors.password\n  }), React.createElement(Input, {\n    placeholder: \"Mot de passe\",\n    leftIcon: React.createElement(Icon, {\n      name: confirmation !== password || password.length < 8 ? \"close\" : \"check\",\n      color: confirmation !== password || password.length < 8 ? \"red\" : \"green\"\n    }),\n    label: \"Confirmation\",\n    secureTextEntry: true,\n    value: confirmation,\n    leftIconContainerStyle: {\n      marginRight: 12\n    },\n    containerStyle: {\n      marginBottom: 40,\n      marginTop: 8\n    },\n    onChangeText: function onChangeText(value) {\n      return setConfirmation(value);\n    },\n    errorMessage: errors.confirmation\n  }), React.createElement(Input, {\n    placeholder: \"Code\",\n    leftIcon: React.createElement(Icon, {\n      name: \"code-tags\",\n      type: \"material-community\"\n    }),\n    value: code,\n    onChangeText: function onChangeText(value) {\n      return setCode(value);\n    },\n    label: \"Email\",\n    errorMessage: errors.code\n  }), React.createElement(Button, {\n    title: \"S'inscrire\",\n    onPress: handleSignUp,\n    loading: auth.isSigningUp,\n    containerStyle: {\n      marginBottom: 20,\n      marginTop: 8\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signUp: function signUp(credentials) {\n      return dispatch(_signUp(credentials));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/Auth/SignUpScreen.js"],"names":["React","useState","connect","Input","Button","Icon","signUp","SignUpScreen","auth","firstname","setFirstname","lastname","setLastname","email","setEmail","password","setPassword","confirmation","setConfirmation","code","setCode","errors","setErrors","handleSignUp","mail","length","backgroundColor","flex","justifyContent","alignItems","paddingHorizontal","value","marginRight","marginBottom","marginTop","isSigningUp","mapStateToProps","state","mapDispatchToProps","dispatch","credentials"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { View } from \"react-native\";\nimport { Input, Button, Icon } from \"react-native-elements\";\nimport { signUp } from \"../../actions/authActions\";\n\nconst SignUpScreen = ({ signUp, auth }) => {\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  const handleSignUp = async () => {\n    if (!firstname) {\n      return setErrors({ firstname: \"Prénom manquant.\" });\n    } else if (!lastname) {\n      return setErrors({ lastname: \"Nom manquant.\" });\n    } else if (!email) {\n      return setErrors({ mail: \"Mél manquant.\" });\n    } else if (password.length < 8 === true) {\n      return setErrors({ password: \"Mot de passe manquant.\" });\n    } else if (password !== confirmation) {\n      return setErrors({\n        confirmation: \"Veuillez retaper la confirmation de votre mot de passe.\",\n      });\n    }\n    setErrors({});\n    signUp({ email, password, firstname, lastname, code });\n  };\n\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n      }}\n    >\n      <Input\n        placeholder=\"Prénom\"\n        value={firstname}\n        onChangeText={(value) => setFirstname(value)}\n        label=\"Prénom\"\n        errorMessage={errors.firstname}\n      />\n      <Input\n        placeholder=\"Nom\"\n        value={lastname}\n        onChangeText={(value) => setLastname(value)}\n        label=\"Nom\"\n        errorMessage={errors.lastname}\n      />\n      <Input\n        placeholder=\"Email\"\n        leftIcon={<Icon name=\"email\" type=\"material-community\" />}\n        value={email}\n        onChangeText={(value) => setEmail(value)}\n        label=\"Email\"\n        errorMessage={errors.email}\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={<Icon name=\"lock\" />}\n        label=\"Mot de passe\"\n        secureTextEntry\n        value={password}\n        onChangeText={(value) => setPassword(value)}\n        errorMessage={errors.password}\n      />\n      <Input\n        placeholder=\"Mot de passe\"\n        leftIcon={\n          <Icon\n            name={\n              confirmation !== password || password.length < 8\n                ? \"close\"\n                : \"check\"\n            }\n            color={\n              confirmation !== password || password.length < 8 ? \"red\" : \"green\"\n            }\n          />\n        }\n        label=\"Confirmation\"\n        secureTextEntry\n        value={confirmation}\n        leftIconContainerStyle={{ marginRight: 12 }}\n        containerStyle={{ marginBottom: 40, marginTop: 8 }}\n        onChangeText={(value) => setConfirmation(value)}\n        errorMessage={errors.confirmation}\n      />\n      <Input\n        placeholder=\"Code\"\n        leftIcon={<Icon name=\"code-tags\" type=\"material-community\" />}\n        value={code}\n        onChangeText={(value) => setCode(value)}\n        label=\"Email\"\n        errorMessage={errors.code}\n      />\n      <Button\n        title=\"S'inscrire\"\n        onPress={handleSignUp}\n        loading={auth.isSigningUp}\n        containerStyle={{ marginBottom: 20, marginTop: 8 }}\n      />\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (credentials) => dispatch(signUp(credentials)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpScreen);\n"]},"metadata":{},"sourceType":"module"}