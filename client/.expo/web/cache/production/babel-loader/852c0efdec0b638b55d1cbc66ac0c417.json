{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useContext,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import TextInput from\"react-native-web/dist/exports/TextInput\";import{Icon,ThemeContext,Button}from\"react-native-elements\";import{resetOverlay}from\"../actions/overlayAction\";import*as RootNavigation from\"../RootNavigation.js\";import{TouchableOpacity}from\"react-native-gesture-handler\";var Notifier=function Notifier(_ref){var notification=_ref.notification,theme=_ref.theme;return React.createElement(View,{style:{backgroundColor:\"white\",borderRadius:10,justifyContent:\"center\",alignItems:\"center\",paddingHorizontal:12,paddingVertical:8,elevation:8}},React.createElement(Icon,{containerStyle:{marginBottom:8},size:30,name:notification.variant===\"success\"?\"check-circle-outline\":notification.variant===\"warning\"?\"alert-circle-outline\":notification.variant===\"error\"?\"close-circle-outline\":notification.icon,color:notification.variant===\"success\"?\"green\":notification.variant===\"warning\"?\"yellow\":notification.variant===\"error\"?\"red\":notification.variant===\"error\"?\"blue\":theme.colors.grey1}),notification.message&&React.createElement(Text,{style:{fontSize:14}},notification.message));};var InputForm=function InputForm(_ref2){var form=_ref2.form,dispatchRedirectReset=_ref2.dispatchRedirectReset,theme=_ref2.theme,dispatch=_ref2.dispatch;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),inputValue=_useState2[0],setInputValue=_useState2[1];return React.createElement(View,{style:{backgroundColor:\"white\",borderRadius:10,justifyContent:\"center\",alignItems:\"center\",paddingHorizontal:12,paddingVertical:8,elevation:8}},React.createElement(View,{style:{flexDirection:\"row\",alignItems:\"center\",justifyContent:\"center\",alignContent:\"center\",marginTop:8}},form.message&&React.createElement(Text,{style:{fontSize:14}},form.message)),React.createElement(View,{style:{flexDirection:\"row\",alignItems:\"stretch\",marginTop:8}},React.createElement(TextInput,{value:inputValue,multiline:true,placeholder:\"Ecrivez ici.\",placeholderTextColor:\"grey\",onChangeText:function onChangeText(text){return setInputValue(text);},style:{backgroundColor:theme.colors.grey5,borderColor:theme.colors.grey4,borderWidth:1,borderRadius:5,height:60,paddingHorizontal:4,paddingVertical:4,flex:1},textAlignVertical:\"top\"}),React.createElement(Button,{buttonStyle:{height:60,alignItems:\"center\",justifyContent:\"center\"},icon:React.createElement(Icon,{name:\"send\",size:20,color:inputValue?theme.colors.primary:theme.colors.grey2}),disabled:!inputValue,type:\"clear\",onPress:function onPress(){dispatch(form.action(_objectSpread(_defineProperty({},form.inputName,inputValue),form.actionParams)));dispatchRedirectReset();}})));};var Menu=function Menu(_ref3){var _menu$buttons;var menu=_ref3.menu,dispatchRedirectReset=_ref3.dispatchRedirectReset,dispatch=_ref3.dispatch;return React.createElement(View,{style:{backgroundColor:\"white\",borderRadius:10,justifyContent:\"center\",alignItems:\"center\",paddingHorizontal:12,paddingVertical:8,elevation:8}},(_menu$buttons=menu.buttons)==null?void 0:_menu$buttons.map(function(button,i){return React.createElement(Button,{title:button.title,key:i,containerStyle:{height:30},onPress:function onPress(){dispatch(button.action.apply(button,_toConsumableArray(button.actionParams)));dispatchRedirectReset();}});}));};var CustomOverlay=function CustomOverlay(){var overlay=useSelector(function(state){return state.overlay;});var _useContext=useContext(ThemeContext),theme=_useContext.theme;var dispatch=useDispatch();if(overlay.show===false)return null;var dispatchRedirectReset=function dispatchRedirectReset(){dispatch(resetOverlay());typeof overlay.callbacks===\"array\"&&overlay.callbacks.forEach(function(d){dispatch(d());});overlay.redirect&&RootNavigation.navigate(overlay.redirect,{});};overlay.timeout&&setTimeout(function(){dispatchRedirectReset();},overlay.timeout);return React.createElement(View,{style:{position:\"absolute\",height:Dimensions.get(\"window\").height,width:Dimensions.get(\"window\").width,backgroundColor:theme.colors.grey6,alignContent:\"center\",justifyContent:\"center\",alignItems:\"stretch\"}},React.createElement(TouchableOpacity,{containerStyle:{flex:1,minHeight:12},style:{flex:1,minHeight:12},onPress:function onPress(){overlay.notification?dispatchRedirectReset():dispatch(resetOverlay());}}),React.createElement(View,{style:{flexDirection:\"row\",alignItems:\"center\",justifyContent:\"center\"}},React.createElement(TouchableOpacity,{containerStyle:{flex:1,minWidth:12},style:{flex:1,minWidth:12},onPress:function onPress(){overlay.notification?dispatchRedirectReset():dispatch(resetOverlay());}}),overlay.notification&&React.createElement(Notifier,{notification:overlay.notification,dispatchRedirectReset:dispatchRedirectReset,theme:theme}),overlay.form&&React.createElement(InputForm,{form:overlay.form,dispatchRedirectReset:dispatchRedirectReset,dispatch:dispatch,theme:theme}),overlay.menu&&React.createElement(Menu,{menu:overlay.menu,dispatchRedirectReset:dispatchRedirectReset,dispatch:dispatch}),React.createElement(TouchableOpacity,{containerStyle:{flex:1,minWidth:12},style:{flex:1,minWidth:12},onPress:function onPress(){overlay.notification?dispatchRedirectReset():dispatch(resetOverlay());}})),React.createElement(TouchableOpacity,{containerStyle:{flex:1,minHeight:12},style:{flex:1,minHeight:12},onPress:function onPress(){overlay.notification?dispatchRedirectReset():dispatch(resetOverlay());}}));};export default CustomOverlay;","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/CustomOverlay.js"],"names":["React","useContext","useState","useDispatch","useSelector","Icon","ThemeContext","Button","resetOverlay","RootNavigation","TouchableOpacity","Notifier","notification","theme","backgroundColor","borderRadius","justifyContent","alignItems","paddingHorizontal","paddingVertical","elevation","marginBottom","variant","icon","colors","grey1","message","fontSize","InputForm","form","dispatchRedirectReset","dispatch","inputValue","setInputValue","flexDirection","alignContent","marginTop","text","grey5","borderColor","grey4","borderWidth","height","flex","primary","grey2","action","inputName","actionParams","Menu","menu","buttons","map","button","i","title","CustomOverlay","overlay","state","show","callbacks","forEach","d","redirect","navigate","timeout","setTimeout","position","Dimensions","get","width","grey6","minHeight","minWidth"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Text, View, Dimensions, TextInput } from \"react-native\";\nimport { Icon, ThemeContext, Button } from \"react-native-elements\";\nimport { resetOverlay } from \"../actions/overlayAction\";\nimport * as RootNavigation from \"../RootNavigation.js\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nconst Notifier = ({ notification, theme }) => {\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      <Icon\n        containerStyle={{ marginBottom: 8 }}\n        size={30}\n        name={\n          notification.variant === \"success\"\n            ? \"check-circle-outline\"\n            : notification.variant === \"warning\"\n            ? \"alert-circle-outline\"\n            : notification.variant === \"error\"\n            ? \"close-circle-outline\"\n            : notification.icon\n        }\n        color={\n          notification.variant === \"success\"\n            ? \"green\"\n            : notification.variant === \"warning\"\n            ? \"yellow\"\n            : notification.variant === \"error\"\n            ? \"red\"\n            : notification.variant === \"error\"\n            ? \"blue\"\n            : theme.colors.grey1\n        }\n      />\n      {notification.message && (\n        <Text style={{ fontSize: 14 }}>{notification.message}</Text>\n      )}\n    </View>\n  );\n};\n\nconst InputForm = ({ form, dispatchRedirectReset, theme, dispatch }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          alignContent: \"center\",\n          marginTop: 8,\n        }}\n      >\n        {form.message && <Text style={{ fontSize: 14 }}>{form.message}</Text>}\n      </View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"stretch\",\n          marginTop: 8,\n        }}\n      >\n        <TextInput\n          value={inputValue}\n          multiline\n          placeholder=\"Ecrivez ici.\"\n          placeholderTextColor=\"grey\"\n          onChangeText={(text) => setInputValue(text)}\n          style={{\n            backgroundColor: theme.colors.grey5,\n            borderColor: theme.colors.grey4,\n            borderWidth: 1,\n            borderRadius: 5,\n            height: 60,\n            paddingHorizontal: 4,\n            paddingVertical: 4,\n            flex: 1,\n          }}\n          textAlignVertical=\"top\"\n        />\n        <Button\n          buttonStyle={{\n            height: 60,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n          icon={\n            <Icon\n              name=\"send\"\n              size={20}\n              color={inputValue ? theme.colors.primary : theme.colors.grey2}\n            />\n          }\n          disabled={!inputValue}\n          type=\"clear\"\n          onPress={() => {\n            dispatch(\n              form.action({\n                [form.inputName]: inputValue,\n                ...form.actionParams,\n              })\n            );\n            dispatchRedirectReset();\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst Menu = ({ menu, dispatchRedirectReset, dispatch }) => {\n  return (\n    <View\n      style={{\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingHorizontal: 12,\n        paddingVertical: 8,\n        elevation: 8,\n      }}\n    >\n      {menu.buttons?.map((button, i) => {\n        return (\n          <Button\n            title={button.title}\n            key={i}\n            containerStyle={{ height: 30 }}\n            onPress={() => {\n              dispatch(button.action(...button.actionParams));\n              dispatchRedirectReset();\n            }}\n          />\n        );\n      })}\n    </View>\n  );\n};\n\nconst CustomOverlay = () => {\n  const overlay = useSelector((state) => state.overlay);\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  if (overlay.show === false) return null;\n\n  const dispatchRedirectReset = () => {\n    dispatch(resetOverlay());\n    typeof overlay.callbacks === \"array\" &&\n      overlay.callbacks.forEach((d) => {\n        dispatch(d());\n      });\n    overlay.redirect && RootNavigation.navigate(overlay.redirect, {});\n  };\n\n  overlay.timeout &&\n    setTimeout(() => {\n      dispatchRedirectReset();\n    }, overlay.timeout);\n\n  return (\n    <View\n      style={{\n        position: \"absolute\",\n        height: Dimensions.get(\"window\").height,\n        width: Dimensions.get(\"window\").width,\n        backgroundColor: theme.colors.grey6,\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"stretch\",\n      }}\n    >\n      <TouchableOpacity\n        containerStyle={{ flex: 1, minHeight: 12 }}\n        style={{\n          flex: 1,\n          minHeight: 12,\n        }}\n        onPress={() => {\n          overlay.notification\n            ? dispatchRedirectReset()\n            : dispatch(resetOverlay());\n        }}\n      />\n      <View\n        style={{\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TouchableOpacity\n          containerStyle={{ flex: 1, minWidth: 12 }}\n          style={{\n            flex: 1,\n            minWidth: 12,\n          }}\n          onPress={() => {\n            overlay.notification\n              ? dispatchRedirectReset()\n              : dispatch(resetOverlay());\n          }}\n        />\n        {overlay.notification && (\n          <Notifier\n            notification={overlay.notification}\n            dispatchRedirectReset={dispatchRedirectReset}\n            theme={theme}\n          />\n        )}\n        {overlay.form && (\n          <InputForm\n            form={overlay.form}\n            dispatchRedirectReset={dispatchRedirectReset}\n            dispatch={dispatch}\n            theme={theme}\n          />\n        )}\n        {overlay.menu && (\n          <Menu\n            menu={overlay.menu}\n            dispatchRedirectReset={dispatchRedirectReset}\n            dispatch={dispatch}\n          />\n        )}\n        <TouchableOpacity\n          containerStyle={{ flex: 1, minWidth: 12 }}\n          style={{\n            flex: 1,\n            minWidth: 12,\n          }}\n          onPress={() => {\n            overlay.notification\n              ? dispatchRedirectReset()\n              : dispatch(resetOverlay());\n          }}\n        />\n      </View>\n      <TouchableOpacity\n        containerStyle={{ flex: 1, minHeight: 12 }}\n        style={{\n          flex: 1,\n          minHeight: 12,\n        }}\n        onPress={() => {\n          overlay.notification\n            ? dispatchRedirectReset()\n            : dispatch(resetOverlay());\n        }}\n      />\n    </View>\n  );\n};\n\nexport default CustomOverlay;\n"]},"metadata":{},"sourceType":"module"}