{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectDestructuringEmpty from\"@babel/runtime/helpers/objectDestructuringEmpty\";import React,{useState,useContext}from\"react\";import{connect,useDispatch}from\"react-redux\";import View from\"react-native-web/dist/exports/View\";import Switch from\"react-native-web/dist/exports/Switch\";import Text from\"react-native-web/dist/exports/Text\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import{Input,Button,ThemeContext}from\"react-native-elements\";import AppNavbar from\"../AppNavbar\";import{createJob}from\"../../actions/jobsActions\";var PostScreen=function PostScreen(_ref){_objectDestructuringEmpty(_ref);var _useContext=useContext(ThemeContext),theme=_useContext.theme;var dispatch=useDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),uploading=_useState2[0],setUploading=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),employmentType=_useState6[0],setEmploymentType=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),asap=_useState8[0],setAsap=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),organisation=_useState10[0],setOrganisation=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),city=_useState12[0],setCity=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),jobTitle=_useState14[0],setJobTitle=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),jobDesc=_useState16[0],setJobDesc=_useState16[1];var _useState17=useState(),_useState18=_slicedToArray(_useState17,2),salary=_useState18[0],setSalary=_useState18[1];var _useState19=useState(),_useState20=_slicedToArray(_useState19,2),minExp=_useState20[0],setMinExp=_useState20[1];var _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),contact=_useState22[0],setContact=_useState22[1];var filled=!city||!organisation||!employmentType||!jobDesc||!jobTitle||!contact?false:true;var uploadJobOffer=function uploadJobOffer(){setUploading(true);var jobOffer={employmentType:employmentType,asap:asap,organisation:organisation,city:city,salary:salary,jobDesc:jobDesc,jobTitle:jobTitle,minExp:minExp,contact:contact};dispatch(createJob(jobOffer));setUploading(false);setAsap(false);setCity();setSalary();setContact();setErrors({});setEmploymentType();setOrganisation();setJobDesc();setJobTitle();setUploading(false);};return React.createElement(View,{style:{flex:1}},React.createElement(View,{style:{flex:1,backgroundColor:\"white\"}},React.createElement(ScrollView,{style:{paddingHorizontal:12,paddingTop:20,paddingBottom:100}},React.createElement(Input,{label:\"Type de contrat*\",placeholder:\"CDI, CDD, Apprentissage...\",value:employmentType,onChangeText:function onChangeText(value){return setEmploymentType(value);},errorMessage:errors.employmentType}),React.createElement(Input,{label:\"Organisation*\",placeholder:\"Deloitte, Engie, EY...\",value:organisation,onChangeText:function onChangeText(value){return setOrganisation(value);},errorMessage:errors.organisation}),React.createElement(Input,{placeholder:\"Paris, Shanghai, Lyon...\",label:\"Ville*\",value:city,onChangeText:function onChangeText(value){return setCity(value);},errorMessage:errors.city}),React.createElement(Input,{placeholder:\"Auditeur des SI, Pentester junior...\",label:\"Intitul\\xE9 du poste*\",value:jobTitle,onChangeText:function onChangeText(value){return setJobTitle(value);},errorMessage:errors.jobTitle}),React.createElement(Input,{label:\"Description du poste*\",multiline:true,inputStyle:{height:200,textAlignVertical:\"top\"},placeholder:\"Les missions, les comp\\xE9tences requises, l'employeur...\",value:jobDesc,onChangeText:function onChangeText(value){return setJobDesc(value);},errorMessage:errors.jobDesc}),React.createElement(Input,{label:\"Exp\\xE9rience\",placeholder:\"Ann\\xE9es pass\\xE9es dans un poste similaire\",value:minExp,keyboardType:\"numeric\",onChangeText:function onChangeText(value){return setMinExp(value);},errorMessage:errors.minExp}),React.createElement(Input,{label:\"R\\xE9mun\\xE9ration\",placeholder:\"En \\u20AC\",value:salary,onChangeText:function onChangeText(value){return setSalary(value);},showSoftInputOnFocus:false,errorMessage:errors.salary}),React.createElement(View,{style:{marginBottom:12,flexDirection:\"row\",display:\"flex\",height:40}},React.createElement(Text,{style:{color:theme.colors.grey3,fontWeight:\"bold\",paddingLeft:10,fontSize:16,flex:1,textAlignVertical:\"center\"}},\"Poste \\xE0 pourvoir d\\xE8s que possible\"),React.createElement(Switch,{value:asap,onValueChange:function onValueChange(value){return setAsap(value);}})),React.createElement(Input,{label:\"Contact*\",placeholder:\"Email\",value:contact,onChangeText:function onChangeText(value){return setContact(value);},errorMessage:errors.contact}),React.createElement(Button,{title:filled?\"Poster l'offre d'emploi\":\"Veuillez remplir tous les champs obligatoires\",loading:uploading,disabled:!filled,buttonStyle:{height:50,marginBottom:12},onPress:function onPress(){return uploadJobOffer();}}),React.createElement(View,{style:{height:20}}))));};export default PostScreen;","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/Jobs/JobsPostScreen.js"],"names":["React","useState","useContext","connect","useDispatch","Input","Button","ThemeContext","AppNavbar","createJob","PostScreen","theme","dispatch","uploading","setUploading","errors","setErrors","employmentType","setEmploymentType","asap","setAsap","organisation","setOrganisation","city","setCity","jobTitle","setJobTitle","jobDesc","setJobDesc","salary","setSalary","minExp","setMinExp","contact","setContact","filled","uploadJobOffer","jobOffer","flex","backgroundColor","paddingHorizontal","paddingTop","paddingBottom","value","height","textAlignVertical","marginBottom","flexDirection","display","color","colors","grey3","fontWeight","paddingLeft","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { View, Switch, Text, ScrollView } from \"react-native\";\nimport { Input, Button, ThemeContext } from \"react-native-elements\";\nimport AppNavbar from \"../AppNavbar\";\nimport { createJob } from \"../../actions/jobsActions\";\n\nconst PostScreen = ({}) => {\n  const { theme } = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  const [uploading, setUploading] = useState(false);\n\n  const [errors, setErrors] = useState({});\n\n  // Job\n  const [employmentType, setEmploymentType] = useState(\"\");\n  const [asap, setAsap] = useState(false);\n  const [organisation, setOrganisation] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [jobDesc, setJobDesc] = useState(\"\");\n  const [salary, setSalary] = useState();\n  const [minExp, setMinExp] = useState();\n  const [contact, setContact] = useState(\"\");\n\n  const filled =\n    !city ||\n    !organisation ||\n    !employmentType ||\n    !jobDesc ||\n    !jobTitle ||\n    !contact\n      ? false\n      : true;\n\n  const uploadJobOffer = () => {\n    setUploading(true);\n\n    const jobOffer = {\n      employmentType,\n      asap,\n      organisation,\n      city,\n      salary,\n      jobDesc,\n      jobTitle,\n      minExp,\n      contact,\n    };\n\n    dispatch(createJob(jobOffer));\n    setUploading(false);\n\n    setAsap(false);\n    setCity();\n    setSalary();\n    setContact();\n    setErrors({});\n    setEmploymentType();\n    setOrganisation();\n    setJobDesc();\n    setJobTitle();\n    setUploading(false);\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ flex: 1, backgroundColor: \"white\" }}>\n        <ScrollView\n          style={{\n            paddingHorizontal: 12,\n            paddingTop: 20,\n            paddingBottom: 100,\n          }}\n        >\n          <Input\n            label=\"Type de contrat*\"\n            placeholder=\"CDI, CDD, Apprentissage...\"\n            value={employmentType}\n            onChangeText={(value) => setEmploymentType(value)}\n            errorMessage={errors.employmentType}\n          />\n          <Input\n            label=\"Organisation*\"\n            placeholder=\"Deloitte, Engie, EY...\"\n            value={organisation}\n            onChangeText={(value) => setOrganisation(value)}\n            errorMessage={errors.organisation}\n          />\n          <Input\n            placeholder=\"Paris, Shanghai, Lyon...\"\n            label=\"Ville*\"\n            value={city}\n            onChangeText={(value) => setCity(value)}\n            errorMessage={errors.city}\n          />\n          <Input\n            placeholder=\"Auditeur des SI, Pentester junior...\"\n            label=\"Intitulé du poste*\"\n            value={jobTitle}\n            onChangeText={(value) => setJobTitle(value)}\n            errorMessage={errors.jobTitle}\n          />\n          <Input\n            label=\"Description du poste*\"\n            multiline\n            inputStyle={{ height: 200, textAlignVertical: \"top\" }}\n            placeholder=\"Les missions, les compétences requises, l'employeur...\"\n            value={jobDesc}\n            onChangeText={(value) => setJobDesc(value)}\n            errorMessage={errors.jobDesc}\n          />\n          <Input\n            label=\"Expérience\"\n            placeholder=\"Années passées dans un poste similaire\"\n            value={minExp}\n            keyboardType=\"numeric\"\n            onChangeText={(value) => setMinExp(value)}\n            errorMessage={errors.minExp}\n          />\n          <Input\n            label=\"Rémunération\"\n            placeholder=\"En €\"\n            value={salary}\n            onChangeText={(value) => setSalary(value)}\n            showSoftInputOnFocus={false}\n            errorMessage={errors.salary}\n          />\n          <View\n            style={{\n              marginBottom: 12,\n              flexDirection: \"row\",\n              display: \"flex\",\n              height: 40,\n            }}\n          >\n            <Text\n              style={{\n                color: theme.colors.grey3,\n                fontWeight: \"bold\",\n                paddingLeft: 10,\n                fontSize: 16,\n                flex: 1,\n                textAlignVertical: \"center\",\n              }}\n            >\n              Poste à pourvoir dès que possible\n            </Text>\n            <Switch value={asap} onValueChange={(value) => setAsap(value)} />\n          </View>\n          <Input\n            label=\"Contact*\"\n            placeholder=\"Email\"\n            value={contact}\n            onChangeText={(value) => setContact(value)}\n            errorMessage={errors.contact}\n          />\n          <Button\n            title={\n              filled\n                ? \"Poster l'offre d'emploi\"\n                : \"Veuillez remplir tous les champs obligatoires\"\n            }\n            loading={uploading}\n            disabled={!filled}\n            buttonStyle={{ height: 50, marginBottom: 12 }}\n            onPress={() => uploadJobOffer()}\n          />\n          <View style={{ height: 20 }}></View>\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default PostScreen;\n"]},"metadata":{},"sourceType":"module"}