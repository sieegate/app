{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React from\"react\";import{Provider,useSelector,shallowEqual,useDispatch}from\"react-redux\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import Platform from\"react-native-web/dist/exports/Platform\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import View from\"react-native-web/dist/exports/View\";import{store,persistor}from\"./store/index\";import{PersistGate}from\"redux-persist/integration/react\";import{NavigationContainer}from\"@react-navigation/native\";import{createBottomTabNavigator}from\"@react-navigation/bottom-tabs\";import{createStackNavigator}from\"@react-navigation/stack\";import{createDrawerNavigator}from\"@react-navigation/drawer\";import{ThemeProvider,Icon}from\"react-native-elements\";import{SplashScreen}from\"expo\";import MyJobs from\"./components/MyJobs\";import Jobs from\"./components/Jobs\";import Profile from\"./components/Profile\";import People from\"./components/People\";import Messages from\"./components/Messages\";import Auth from\"./components/Auth\";import CustomOverlay from\"./components/CustomOverlay\";import theme from\"./Theme.json\";import useLinking from\"./useLinking\";import{navigationRef,isMountedRef}from\"./RootNavigation\";import{verifyToken}from\"./actions/authActions\";import{fetchJobs,fetchMyJobs}from\"./actions/jobsActions\";import{fetchUsers}from\"./actions/usersActions\";import{fetchConversations}from\"./actions/chatActions\";var BottomTab=createBottomTabNavigator();var Drawer=createDrawerNavigator();var Switch=createStackNavigator();var MainStack=function MainStack(){return React.createElement(BottomTab.Navigator,{initialRouteName:\"People\",screenOptions:function screenOptions(_ref){var route=_ref.route;return{tabBarIcon:function tabBarIcon(_ref2){var focused=_ref2.focused,color=_ref2.color,size=_ref2.size;var iconName;switch(route.name){case\"Home\":iconName=\"home\";break;case\"Jobs\":iconName=\"briefcase\";break;case\"People\":iconName=\"account-group\";break;case\"Messages\":iconName=\"forum\";break;default:break;}return React.createElement(Icon,{name:iconName,size:size,color:color});}};},tabBarOptions:{activeTintColor:theme.colors.primary,inactiveTintColor:\"gray\"}},React.createElement(BottomTab.Screen,{name:\"People\",component:People,options:{title:\"Annuaire\"}}),React.createElement(BottomTab.Screen,{name:\"Jobs\",component:Jobs,options:{title:\"Emplois\"}}),React.createElement(BottomTab.Screen,{name:\"Messages\",component:Messages,options:{title:\"Messages\"}}));};var DrawerStack=function DrawerStack(){var dispatch=useDispatch();React.useEffect(function(){function fetchData(){dispatch(fetchJobs());dispatch(fetchMyJobs());dispatch(fetchUsers());dispatch(fetchConversations());}fetchData();},[]);return React.createElement(Drawer.Navigator,{initialRouteName:\"Main\",headerMode:\"screen\"},React.createElement(Drawer.Screen,{name:\"Main\",component:MainStack,options:{title:\"Accueil\"}}),React.createElement(Drawer.Screen,{name:\"Profile\",component:Profile,options:{title:\"Mon profil\"}}),React.createElement(Drawer.Screen,{name:\"MyJobs\",component:MyJobs,options:{title:\"Mes offres d'emplois\"}}));};var AppStack=function AppStack(props){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isLoadingComplete=_React$useState2[0],setLoadingComplete=_React$useState2[1];var _React$useState3=React.useState(),_React$useState4=_slicedToArray(_React$useState3,2),initialNavigationState=_React$useState4[0],setInitialNavigationState=_React$useState4[1];var containerRef=React.useRef();var _useLinking=useLinking(navigationRef),getInitialState=_useLinking.getInitialState;var dispatch=useDispatch();var userToken=useSelector(function(state){return state.auth.token;},shallowEqual);React.useEffect(function(){function loadResourcesAndDataAsync(){return _regeneratorRuntime.async(function loadResourcesAndDataAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userToken!==null){dispatch(verifyToken());}_context.prev=1;SplashScreen.preventAutoHide();_context.t0=setInitialNavigationState;_context.next=6;return _regeneratorRuntime.awrap(getInitialState());case 6:_context.t1=_context.sent;(0,_context.t0)(_context.t1);_context.next=13;break;case 10:_context.prev=10;_context.t2=_context[\"catch\"](1);console.warn(_context.t2);case 13:_context.prev=13;setLoadingComplete(true);SplashScreen.hide();return _context.finish(13);case 17:case\"end\":return _context.stop();}}},null,null,[[1,10,13,17]],Promise);}loadResourcesAndDataAsync();},[]);if(!isLoadingComplete&&!props.skipLoadingScreen){return null;}else{return React.createElement(View,{style:{maxWidth:500,flex:1}},React.createElement(NavigationContainer,{ref:navigationRef,initialState:initialNavigationState},React.createElement(Switch.Navigator,{headerMode:\"none\"},userToken&&React.createElement(Switch.Screen,{name:\"Root\",component:DrawerStack}),!userToken&&React.createElement(Switch.Screen,{name:\"Auth\",component:Auth})),React.createElement(CustomOverlay,null)));}};var App=function App(){React.useEffect(function(){isMountedRef.current=true;return function(){return isMountedRef.current=false;};},[]);return React.createElement(Provider,{store:store},React.createElement(PersistGate,{loading:null,persistor:persistor},React.createElement(ThemeProvider,{theme:theme},React.createElement(SafeAreaView,{style:{flex:1,flexDirection:\"row\",justifyContent:\"center\"}},Platform.OS===\"ios\"&&React.createElement(StatusBar,{barStyle:\"default\"}),React.createElement(AppStack,null)))));};export default App;","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/App.js"],"names":["React","Provider","useSelector","shallowEqual","useDispatch","store","persistor","PersistGate","NavigationContainer","createBottomTabNavigator","createStackNavigator","createDrawerNavigator","ThemeProvider","Icon","SplashScreen","MyJobs","Jobs","Profile","People","Messages","Auth","CustomOverlay","theme","useLinking","navigationRef","isMountedRef","verifyToken","fetchJobs","fetchMyJobs","fetchUsers","fetchConversations","BottomTab","Drawer","Switch","MainStack","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","colors","primary","inactiveTintColor","title","DrawerStack","dispatch","useEffect","fetchData","AppStack","props","useState","isLoadingComplete","setLoadingComplete","initialNavigationState","setInitialNavigationState","containerRef","useRef","getInitialState","userToken","state","auth","token","loadResourcesAndDataAsync","preventAutoHide","console","warn","hide","skipLoadingScreen","maxWidth","flex","App","current","flexDirection","justifyContent","Platform","OS"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Provider, useSelector, shallowEqual, useDispatch } from \"react-redux\";\nimport { SafeAreaView, Platform, StatusBar, View } from \"react-native\";\nimport { store, persistor } from \"./store/index\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { ThemeProvider, Icon } from \"react-native-elements\";\nimport { SplashScreen } from \"expo\";\n\nimport MyJobs from \"./components/MyJobs\";\nimport Jobs from \"./components/Jobs\";\nimport Profile from \"./components/Profile\";\nimport People from \"./components/People\";\nimport Messages from \"./components/Messages\";\nimport Auth from \"./components/Auth\";\nimport CustomOverlay from \"./components/CustomOverlay\";\n\nimport theme from \"./Theme.json\";\nimport useLinking from \"./useLinking\";\n\nimport { navigationRef, isMountedRef } from \"./RootNavigation\";\n\nimport { verifyToken } from \"./actions/authActions\";\nimport { fetchJobs, fetchMyJobs } from \"./actions/jobsActions\";\nimport { fetchUsers } from \"./actions/usersActions\";\nimport { fetchConversations } from \"./actions/chatActions\";\n\nconst BottomTab = createBottomTabNavigator();\nconst Drawer = createDrawerNavigator();\nconst Switch = createStackNavigator();\n\nconst MainStack = () => {\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"People\"\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          switch (route.name) {\n            case \"Home\":\n              iconName = \"home\";\n              break;\n            case \"Jobs\":\n              iconName = \"briefcase\";\n              break;\n            case \"People\":\n              iconName = \"account-group\";\n              break;\n            case \"Messages\":\n              iconName = \"forum\";\n              break;\n            default:\n              break;\n          }\n\n          return <Icon name={iconName} size={size} color={color} />;\n        },\n      })}\n      tabBarOptions={{\n        activeTintColor: theme.colors.primary,\n        inactiveTintColor: \"gray\",\n      }}\n    >\n      <BottomTab.Screen\n        name=\"People\"\n        component={People}\n        options={{ title: \"Annuaire\" }}\n      />\n      <BottomTab.Screen\n        name=\"Jobs\"\n        component={Jobs}\n        options={{ title: \"Emplois\" }}\n      />\n      <BottomTab.Screen\n        name=\"Messages\"\n        component={Messages}\n        options={{ title: \"Messages\" }}\n      />\n    </BottomTab.Navigator>\n  );\n};\n\nconst DrawerStack = () => {\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    function fetchData() {\n      dispatch(fetchJobs());\n      dispatch(fetchMyJobs());\n      dispatch(fetchUsers());\n      dispatch(fetchConversations());\n    }\n\n    fetchData();\n  }, []);\n  return (\n    <Drawer.Navigator initialRouteName=\"Main\" headerMode=\"screen\">\n      <Drawer.Screen\n        name=\"Main\"\n        component={MainStack}\n        options={{ title: \"Accueil\" }}\n      />\n      <Drawer.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{ title: \"Mon profil\" }}\n      />\n      <Drawer.Screen\n        name=\"MyJobs\"\n        component={MyJobs}\n        options={{ title: \"Mes offres d'emplois\" }}\n      />\n    </Drawer.Navigator>\n  );\n};\n\nconst AppStack = (props) => {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n  const [initialNavigationState, setInitialNavigationState] = React.useState();\n  const containerRef = React.useRef();\n  const { getInitialState } = useLinking(navigationRef);\n  const dispatch = useDispatch();\n\n  const userToken = useSelector((state) => state.auth.token, shallowEqual);\n\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      if (userToken !== null) {\n        dispatch(verifyToken());\n      }\n      try {\n        SplashScreen.preventAutoHide();\n\n        setInitialNavigationState(await getInitialState());\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hide();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return null;\n  } else {\n    return (\n      <View\n        style={{\n          maxWidth: 500,\n          flex: 1,\n        }}\n      >\n        <NavigationContainer\n          ref={navigationRef}\n          initialState={initialNavigationState}\n        >\n          <Switch.Navigator headerMode=\"none\">\n            {userToken && <Switch.Screen name=\"Root\" component={DrawerStack} />}\n            {!userToken && <Switch.Screen name=\"Auth\" component={Auth} />}\n          </Switch.Navigator>\n          <CustomOverlay />\n        </NavigationContainer>\n      </View>\n    );\n  }\n};\n\nconst App = () => {\n  React.useEffect(() => {\n    isMountedRef.current = true;\n    return () => (isMountedRef.current = false);\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <SafeAreaView\n            style={{\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            {Platform.OS === \"ios\" && <StatusBar barStyle=\"default\" />}\n            <AppStack />\n          </SafeAreaView>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}