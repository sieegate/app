{"ast":null,"code":"import React,{useState,useEffect,useCallback}from\"react\";import{connect}from\"react-redux\";import\"moment/locale/fr\";import moment from\"moment\";import _ from\"lodash\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import{Icon}from\"react-native-elements\";import theme from\"../../Theme.json\";import{fetchJobs as _fetchJobs}from\"../../actions/jobsActions\";var JobsReadScreen=function JobsReadScreen(_ref){var route=_ref.route;var job=route.params.job;return React.createElement(View,{style:{flex:1,alignContent:\"space-between\",paddingVertical:10,paddingHorizontal:8,backgroundColor:\"white\"}},React.createElement(ScrollView,{style:{flex:1,paddingHorizontal:12}},React.createElement(View,{style:{alignItems:\"flex-end\"}},React.createElement(Text,{style:{color:\"grey\",fontSize:12,textAlignVertical:\"bottom\"}},_.capitalize(moment(job.publishedAt).locale(\"fr\").fromNow()))),React.createElement(View,{style:{flexDirection:\"row\",alignItems:\"center\"}},React.createElement(Icon,{name:\"briefcase\",size:25,color:\"grey\"}),React.createElement(Text,{style:{textAlignVertical:\"bottom\",marginStart:8,fontSize:20}},job.organisation)),React.createElement(View,{style:{flexDirection:\"row\",alignItems:\"center\"}},React.createElement(Icon,{name:\"map-marker\",size:25,color:theme.colors.grey2}),React.createElement(Text,{style:{textAlignVertical:\"bottom\",marginStart:8,fontSize:20}},_.capitalize(job.city))),React.createElement(Text,{style:{color:theme.colors.grey3,fontWeight:\"bold\",fontSize:16,marginTop:8}},\"Description\"),React.createElement(Text,{style:{marginBottom:4,textAlign:\"justify\",fontSize:16}},job.jobDesc),job.salary&&React.createElement(Text,null,\"R\\xE9mun\\xE9ration \\xE0 hauteur de \",job.salary,\" brut.\"),job.asap&&React.createElement(Text,{style:{color:theme.colors.primary}},\"Poste \\xE0 pourvoir d\\xE8s que possible.\"),React.createElement(Text,{style:{color:theme.colors.grey3,fontWeight:\"bold\",fontSize:16,marginTop:8}},\"Contact\"),React.createElement(Text,null,job.contact)));};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,jobs:state.jobs};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchJobs:function fetchJobs(){return dispatch(_fetchJobs());}};};export default connect(mapStateToProps,mapDispatchToProps)(JobsReadScreen);","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/src/components/Jobs/JobsReadScreen.js"],"names":["React","useState","useEffect","useCallback","connect","moment","_","Icon","theme","fetchJobs","JobsReadScreen","route","job","params","flex","alignContent","paddingVertical","paddingHorizontal","backgroundColor","alignItems","color","fontSize","textAlignVertical","capitalize","publishedAt","locale","fromNow","flexDirection","marginStart","organisation","colors","grey2","city","grey3","fontWeight","marginTop","marginBottom","textAlign","jobDesc","salary","asap","primary","contact","mapStateToProps","state","auth","jobs","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"moment/locale/fr\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport { View, Text, ScrollView } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport theme from \"../../Theme.json\";\nimport { fetchJobs } from \"../../actions/jobsActions\";\n\nconst JobsReadScreen = ({ route }) => {\n  const { job } = route.params;\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignContent: \"space-between\",\n        paddingVertical: 10,\n        paddingHorizontal: 8,\n        backgroundColor: \"white\",\n      }}\n    >\n      <ScrollView\n        style={{\n          flex: 1,\n          paddingHorizontal: 12,\n        }}\n      >\n        <View style={{ alignItems: \"flex-end\" }}>\n          <Text\n            style={{\n              color: \"grey\",\n              fontSize: 12,\n              textAlignVertical: \"bottom\",\n            }}\n          >\n            {_.capitalize(moment(job.publishedAt).locale(\"fr\").fromNow())}\n          </Text>\n        </View>\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Icon name=\"briefcase\" size={25} color=\"grey\" />\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              marginStart: 8,\n              fontSize: 20,\n            }}\n          >\n            {job.organisation}\n          </Text>\n        </View>\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n          <Icon name=\"map-marker\" size={25} color={theme.colors.grey2} />\n          <Text\n            style={{\n              textAlignVertical: \"bottom\",\n              marginStart: 8,\n              fontSize: 20,\n            }}\n          >\n            {_.capitalize(job.city)}\n          </Text>\n        </View>\n        <Text\n          style={{\n            color: theme.colors.grey3,\n            fontWeight: \"bold\",\n            fontSize: 16,\n            marginTop: 8,\n          }}\n        >\n          Description\n        </Text>\n        <Text style={{ marginBottom: 4, textAlign: \"justify\", fontSize: 16 }}>\n          {job.jobDesc}\n        </Text>\n        {job.salary && (\n          <Text>Rémunération à hauteur de {job.salary} brut.</Text>\n        )}\n        {job.asap && (\n          <Text style={{ color: theme.colors.primary }}>\n            Poste à pourvoir dès que possible.\n          </Text>\n        )}\n        <Text\n          style={{\n            color: theme.colors.grey3,\n            fontWeight: \"bold\",\n            fontSize: 16,\n            marginTop: 8,\n          }}\n        >\n          Contact\n        </Text>\n        <Text>{job.contact}</Text>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  jobs: state.jobs,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchJobs: () => dispatch(fetchJobs()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobsReadScreen);\n"]},"metadata":{},"sourceType":"module"}