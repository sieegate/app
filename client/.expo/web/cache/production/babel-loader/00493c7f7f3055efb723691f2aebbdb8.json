{"ast":null,"code":"'use strict';var matchOperatorsRegex=/[|\\\\{}()[\\]^$+*?.-]/g;module.exports=function(string){if(typeof string!=='string'){throw new TypeError('Expected a string');}return string.replace(matchOperatorsRegex,'\\\\$&');};","map":{"version":3,"sources":["/home/gaetan/Documents/GATE/app/client/node_modules/@react-navigation/native/node_modules/escape-string-regexp/index.js"],"names":["matchOperatorsRegex","module","exports","string","TypeError","replace"],"mappings":"AAAA,aAEA,GAAMA,CAAAA,mBAAmB,CAAG,sBAA5B,CAEAC,MAAM,CAACC,OAAP,CAAiB,SAAAC,MAAM,CAAI,CAC1B,GAAI,MAAOA,CAAAA,MAAP,GAAkB,QAAtB,CAAgC,CAC/B,KAAM,IAAIC,CAAAA,SAAJ,CAAc,mBAAd,CAAN,CACA,CAED,MAAOD,CAAAA,MAAM,CAACE,OAAP,CAAeL,mBAAf,CAAoC,MAApC,CAAP,CACA,CAND","sourcesContent":["'use strict';\n\nconst matchOperatorsRegex = /[|\\\\{}()[\\]^$+*?.-]/g;\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn string.replace(matchOperatorsRegex, '\\\\$&');\n};\n"]},"metadata":{},"sourceType":"script"}